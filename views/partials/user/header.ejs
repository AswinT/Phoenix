<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Phoenix - Premium Headphone Experience</title>

    <!-- Font imports for the new typography -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Audiowide:wght@400&family=Raleway:wght@300;400;500;600;700&family=Montserrat:wght@400;500;600&display=swap"
      rel="stylesheet"
    />

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
      rel="stylesheet"
    />
    <!-- SweetAlert2 CSS -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css"
    />
    <link rel="stylesheet" href="/styles/user/landingPageStyle.css" />
    <link rel="stylesheet" href="/styles/user/productDetails.css" />
    <link rel="stylesheet" href="/styles/user/shop-page.css" />
    <link rel="stylesheet" href="/styles/user/contacts.css" />
    <link rel="stylesheet" href="/styles/user/navbar-fix.css" />

    <style>
      /* Root variables for consistent color scheme */
      :root {
        --primary-color: #1b3c53; /* Deep blue-gray (primary) */
        --secondary-color: #456882; /* Medium blue-gray (secondary) */
        --accent-beige: #d2c1b6; /* Light beige (secondary) */
        --accent-cream: #f9f3ef; /* Off-white/cream (secondary) */
        --supporting-white: #ffffff; /* Pure white for contrast */
        --text-dark: #2d3748; /* Dark text color */
        --error-red: #d63031; /* Error red */
        --success-green: #00b894; /* Success green */

        /* Gradients */
        --gradient-primary: linear-gradient(
          135deg,
          var(--primary-color),
          var(--secondary-color)
        );
        --gradient-secondary: linear-gradient(
          135deg,
          var(--secondary-color),
          var(--accent-beige)
        );
        --gradient-navbar: linear-gradient(
          135deg,
          var(--primary-color) 0%,
          var(--secondary-color) 100%
        );

        /* Shadows */
        --shadow-navbar: 0 4px 15px rgba(27, 60, 83, 0.3);
        --shadow-dropdown: 0 8px 25px rgba(27, 60, 83, 0.4);

        /* Typography */
        --font-heading: "Audiowide", cursive;
        --font-body: "Raleway", sans-serif;
        --font-feature: "Montserrat", sans-serif;
      }

      /* Elegant Navigation Bar Theme */
      .navbar-elegant-theme {
        background: var(--gradient-navbar) !important;
        border-bottom: 2px solid rgba(210, 193, 182, 0.3);
        box-shadow: var(--shadow-navbar);
        backdrop-filter: blur(10px);
        font-family: var(--font-body);
        padding: 0.75rem 0;
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        right: 0 !important;
        width: 100% !important;
        z-index: 1030 !important;
      }

      /* Fixed container layout for proper alignment */
      .navbar-elegant-theme .container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: nowrap;
        padding-left: 6rem;
        padding-right: 6rem;
        max-width: 100%;
      }

      /* Brand Section - Compact */
      .navbar-brand-section {
        flex: 0 0 auto;
        min-width: auto;
      }

      .navbar-elegant-theme .navbar-brand {
        color: var(--supporting-white) !important;
        font-family: var(--font-heading);
        font-size: 1.8rem !important;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        margin-right: 0;
        white-space: nowrap;
      }

      .navbar-elegant-theme .navbar-brand img {
        height: 40px;
        width: auto;
        filter: drop-shadow(0 2px 8px rgba(249, 243, 239, 0.3));
        transition: all 0.3s ease;
      }

      .navbar-elegant-theme .navbar-brand:hover {
        color: var(--accent-cream) !important;
        text-shadow: 0 0 15px rgba(249, 243, 239, 0.6);
        transform: scale(1.02);
      }

      .navbar-elegant-theme .navbar-brand:hover img {
        filter: drop-shadow(0 4px 12px rgba(249, 243, 239, 0.5));
        transform: scale(1.05);
      }

      /* Toggler */
      .navbar-elegant-theme .navbar-toggler {
        border: 2px solid rgba(249, 243, 239, 0.3);
        color: var(--supporting-white);
        border-radius: 8px;
        padding: 0.5rem 0.75rem;
        transition: all 0.3s ease;
        order: 3;
      }

      .navbar-elegant-theme .navbar-toggler:focus {
        box-shadow: 0 0 0 0.25rem rgba(249, 243, 239, 0.4);
        border-color: var(--accent-cream);
      }

      .navbar-elegant-theme .navbar-toggler:hover {
        border-color: var(--accent-cream);
        background: rgba(249, 243, 239, 0.1);
      }

      .navbar-elegant-theme .navbar-toggler i {
        color: var(--supporting-white);
        font-size: 1.2rem;
      }

      /* Center Navigation Links */
      .navbar-nav-center {
        flex: 1 1 auto;
        display: flex;
        justify-content: center;
      }

      .navbar-elegant-theme .navbar-nav {
        align-items: center;
      }

      /* Navigation Links */
      .navbar-elegant-theme .nav-link {
        color: rgba(249, 243, 239, 0.9) !important;
        font-family: var(--font-feature);
        font-weight: 500;
        font-size: 1rem;
        padding: 0.75rem 1rem !important;
        border-radius: 8px;
        margin: 0 0.25rem;
        transition: all 0.3s ease;
        position: relative;
        white-space: nowrap;
      }

      .navbar-elegant-theme .nav-link::before {
        content: "";
        position: absolute;
        bottom: 0;
        left: 50%;
        width: 0;
        height: 2px;
        background: var(--accent-cream);
        transition: all 0.3s ease;
        transform: translateX(-50%);
        border-radius: 2px;
      }

      .navbar-elegant-theme .nav-link:hover {
        color: var(--supporting-white) !important;
        background: rgba(249, 243, 239, 0.1);
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        transform: translateY(-2px);
      }

      .navbar-elegant-theme .nav-link:hover::before {
        width: 70%;
      }

      /* Active page indicator */
      .navbar-elegant-theme .nav-link.active {
        color: var(--supporting-white) !important;
        font-weight: 600 !important;
        background: rgba(249, 243, 239, 0.15);
        text-shadow: 0 2px 6px rgba(0, 0, 0, 0.4);
      }

      .navbar-elegant-theme .nav-link.active::before {
        width: 70%;
        background: var(--accent-cream);
        box-shadow: 0 0 8px rgba(249, 243, 239, 0.6);
      }

      /* Right Section - Search + Icons */
      .navbar-right-section {
        flex: 0 0 auto;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        min-width: auto;
        justify-content: flex-end;
      }

      /* Search Input */
      .search-input {
        position: relative;
        flex-shrink: 0;
      }

      .search-icon {
        position: absolute;
        top: 50%;
        left: 1rem;
        transform: translateY(-50%);
        color: var(--secondary-color);
        z-index: 2;
        transition: all 0.3s ease;
      }

      .search-input input {
        width: 200px;
        background: rgba(249, 243, 239, 0.95);
        border: 2px solid rgba(210, 193, 182, 0.4);
        color: var(--text-dark);
        font-family: var(--font-body);
        border-radius: 12px;
        padding: 0.75rem 1rem 0.75rem 2.75rem;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
      }

      .search-input input::placeholder {
        color: rgba(69, 104, 130, 0.7);
        font-family: var(--font-feature);
      }

      .search-input input:focus {
        background: var(--supporting-white);
        border-color: var(--secondary-color);
        color: var(--text-dark);
        box-shadow: 0 0 0 0.25rem rgba(69, 104, 130, 0.2);
        outline: none;
      }

      .search-input input:focus + .search-icon {
        color: var(--primary-color);
        transform: translateY(-50%) scale(1.1);
      }

      /* Header Icons - Properly Aligned */
      .header-icons {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        flex-shrink: 0;
      }

      .icon-btn {
        position: relative;
        padding: 0.75rem;
        color: var(--supporting-white);
        text-decoration: none;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 12px;
        transition: all 0.3s ease;
        background: rgba(249, 243, 239, 0.1);
        border: 1px solid rgba(249, 243, 239, 0.2);
        min-width: 48px;
        min-height: 48px;
      }

      .icon-btn:hover {
        color: var(--supporting-white);
        background: rgba(249, 243, 239, 0.2);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(249, 243, 239, 0.3);
        text-decoration: none;
      }

      .icon-btn .count {
        position: absolute;
        top: -4px;
        right: -4px;
        background: linear-gradient(135deg, var(--error-red), #ff6b6b);
        color: white;
        border-radius: 50%;
        font-size: 0.7rem;
        min-width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-family: var(--font-feature);
        border: 2px solid var(--supporting-white);
        box-shadow: 0 2px 8px rgba(214, 48, 49, 0.4);
        animation: countPulse 2s infinite;
      }

      @keyframes countPulse {
        0%,
        100% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.1);
        }
      }

      /* Hide badge when count is 0 for better UX */
      .icon-btn .count[data-count="0"] {
        display: none;
      }

      /* Dropdown Menu */
      .dropdown-menu {
        border-radius: 16px;
        padding: 0.75rem 0;
        min-width: 240px;
        box-shadow: var(--shadow-dropdown);
        background: rgba(249, 243, 239, 0.98);
        border: 1px solid rgba(210, 193, 182, 0.3);
        backdrop-filter: blur(15px);
        font-family: var(--font-feature);
      }

      .dropdown-item {
        padding: 0.75rem 1.25rem;
        display: flex;
        align-items: center;
        color: var(--primary-color);
        font-weight: 500;
        background-color: transparent;
        border-radius: 8px;
        margin: 0.25rem 0.5rem;
        transition: all 0.3s ease;
      }

      .dropdown-item:hover {
        background: var(--gradient-primary);
        color: var(--supporting-white);
        transform: translateX(4px);
        box-shadow: 0 4px 12px rgba(27, 60, 83, 0.3);
      }

      .dropdown-item i {
        margin-right: 0.75rem;
        font-size: 1.1rem;
        color: var(--secondary-color);
        transition: all 0.3s ease;
      }

      .dropdown-item:hover i {
        color: var(--accent-cream);
        transform: scale(1.1);
      }

      .dropdown-divider {
        margin: 0.5rem 0.5rem;
        border-color: rgba(210, 193, 182, 0.4);
      }

      /* Search Results */
      .search-results {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: rgba(249, 243, 239, 0.98);
        border: 1px solid rgba(210, 193, 182, 0.3);
        border-radius: 12px;
        box-shadow: var(--shadow-dropdown);
        max-height: 400px;
        overflow-y: auto;
        z-index: 1000;
        display: none;
        backdrop-filter: blur(15px);
        margin-top: 0.5rem;
      }

      .search-results.show {
        display: block;
        animation: fadeInUp 0.3s ease;
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(-10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .search-result-item {
        display: flex;
        align-items: center;
        padding: 0.75rem 1rem;
        border-bottom: 1px solid rgba(210, 193, 182, 0.2);
        text-decoration: none;
        color: var(--text-dark);
        transition: all 0.3s ease;
        border-radius: 8px;
        margin: 0.25rem 0.5rem;
      }

      .search-result-item:hover {
        background: var(--gradient-primary);
        color: var(--supporting-white);
        text-decoration: none;
        transform: translateX(4px);
        box-shadow: 0 4px 12px rgba(27, 60, 83, 0.3);
      }

      .search-result-item:last-child {
        border-bottom: none;
      }

      .search-result-item img {
        width: 45px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
        margin-right: 1rem;
        border: 1px solid rgba(210, 193, 182, 0.3);
        transition: all 0.3s ease;
      }

      .search-result-item:hover img {
        border-color: var(--accent-cream);
        transform: scale(1.05);
      }

      .search-result-item .model {
        font-size: 0.95rem;
        font-weight: 600;
        font-family: var(--font-feature);
        margin-bottom: 0.25rem;
      }

      .search-result-item .brand {
        font-size: 0.8rem;
        font-family: var(--font-body);
        opacity: 0.8;
      }

      .no-results {
        padding: 1.25rem;
        text-align: center;
        color: var(--secondary-color);
        font-size: 0.9rem;
        font-family: var(--font-feature);
      }

      /* Mobile Search */
      .mobile-search {
        display: none;
        width: 100%;
        margin-bottom: 1rem;
      }

      /* Mobile Responsive */
      @media (max-width: 991.98px) {
        .navbar-elegant-theme .container {
          flex-direction: column;
          align-items: stretch;
        }

        .navbar-brand-section {
          display: flex;
          justify-content: space-between;
          align-items: center;
          width: 100%;
          min-width: auto;
        }

        .search-input.d-none.d-lg-block {
          display: none !important;
        }

        .mobile-search {
          display: block;
        }

        .search-results {
          width: 100%;
        }

        .navbar-elegant-theme .navbar-collapse {
          background: linear-gradient(
            135deg,
            rgba(27, 60, 83, 0.98),
            rgba(69, 104, 130, 0.98)
          );
          border-top: 2px solid rgba(210, 193, 182, 0.3);
          margin-top: 1rem;
          padding: 1.5rem;
          border-radius: 0 0 16px 16px;
          backdrop-filter: blur(15px);
        }

        .navbar-nav-center {
          justify-content: flex-start;
          margin-bottom: 1rem;
        }

        .navbar-elegant-theme .nav-link {
          margin: 0.25rem 0;
          padding: 0.75rem 1rem !important;
        }

        .navbar-right-section {
          justify-content: center;
          min-width: auto;
          gap: 0.75rem;
        }

        .search-input input {
          width: 100%;
        }

        .header-icons {
          justify-content: center;
          flex-wrap: wrap;
        }
      }

      @media (max-width: 575.98px) {
        .navbar-elegant-theme .navbar-brand {
          font-size: 1.5rem !important;
        }

        .navbar-elegant-theme .navbar-brand img {
          height: 35px;
        }

        .icon-btn {
          padding: 0.6rem;
          min-width: 44px;
          min-height: 44px;
        }

        .search-input input {
          padding: 0.6rem 1rem 0.6rem 2.5rem;
        }

        .header-icons {
          gap: 0.5rem;
        }
      }

      /* Additional Elegant Effects */
      .navbar-elegant-theme {
        position: relative;
      }

      .navbar-elegant-theme::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          45deg,
          transparent 30%,
          rgba(249, 243, 239, 0.1) 50%,
          transparent 70%
        );
        animation: shimmer 3s infinite;
        pointer-events: none;
      }

      @keyframes shimmer {
        0% {
          transform: translateX(-100%);
        }
        100% {
          transform: translateX(100%);
        }
      }

      /* User Dropdown Enhancement */
      .user-dropdown .dropdown-toggle::after {
        display: none;
      }

      .user-dropdown .icon-btn {
        position: relative;
      }

      .user-dropdown .icon-btn::after {
        content: "";
        position: absolute;
        bottom: 2px;
        right: 2px;
        width: 8px;
        height: 8px;
        background: var(--success-green);
        border-radius: 50%;
        border: 2px solid var(--supporting-white);
      }

      /* Scroll Effect */
      .navbar-scrolled {
        background: linear-gradient(
          135deg,
          rgba(27, 60, 83, 0.95),
          rgba(69, 104, 130, 0.95)
        ) !important;
        backdrop-filter: blur(20px);
      }
      /* Fixed navbar body compensation */
      body {
        padding-top: 80px !important;
      }

      @media (max-width: 991.98px) {
        body {
          padding-top: 70px !important;
        }
      }

      @media (max-width: 575.98px) {
        body {
          padding-top: 65px !important;
        }
      }
    </style>
  </head>

  <body class="paper-texture">
    <nav
      class="navbar navbar-expand-lg navbar-elegant-theme shadow-sm fixed-top"
    >
      <div class="container">
        <!-- Brand Section - Far Left -->
        <div class="navbar-brand-section">
          <a class="navbar-brand" href="/">
            <img src="/assets/phoenix-logo.png" alt="Phoenix Logo" />
            <span class="ms-2 fw-bold">Phoenix</span>
          </a>
          <button
            class="navbar-toggler d-lg-none"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#navbarNav"
            aria-controls="navbarNav"
            aria-expanded="false"
            aria-label="Toggle navigation"
          >
            <i class="ri-menu-line"></i>
          </button>
        </div>

        <!-- Collapsible Content -->
        <div class="collapse navbar-collapse" id="navbarNav">
          <!-- Center Navigation Links -->
          <div class="navbar-nav-center">
            <ul class="navbar-nav" id="mainNavbar" role="menubar" aria-label="Main navigation">
              <li class="nav-item" role="none">
                <a class="nav-link fw-medium" href="/" role="menuitem" aria-current="page">Home</a>
              </li>
              <li class="nav-item" role="none">
                <a class="nav-link fw-medium" href="/shopPage" role="menuitem">Shop</a>
              </li>
              <li class="nav-item" role="none">
                <a class="nav-link fw-medium" href="/about" role="menuitem">About</a>
              </li>
              <li class="nav-item" role="none">
                <a class="nav-link fw-medium" href="/contact" role="menuitem">Contact</a>
              </li>
              <!-- More dropdown for overflow items (hidden by default) -->
              <li class="nav-item dropdown d-none" id="moreDropdown" role="none">
                <a class="nav-link dropdown-toggle fw-medium" href="#" role="menuitem" data-bs-toggle="dropdown" aria-expanded="false" aria-haspopup="true">
                  More
                  <span class="sr-only">menu</span>
                </a>
                <ul class="dropdown-menu" id="moreDropdownMenu" role="menu" aria-label="Additional navigation items">
                  <!-- Overflow items will be moved here dynamically -->
                </ul>
              </li>
            </ul>
          </div>

          <!-- Mobile Search -->
          <div class="mobile-search">
            <div class="search-input">
              <input
                type="text"
                class="form-control search-field"
                placeholder="Search premium headphones..."
              />
              <div class="search-icon">
                <i class="ri-search-line"></i>
              </div>
              <div class="search-results" id="mobileSearchResults"></div>
            </div>
          </div>

          <!-- Right Section - Search + Action Buttons -->
          <div class="navbar-right-section">
            <!-- Desktop Search -->
            <div class="search-input d-none d-lg-block">
              <input
                type="text"
                class="form-control search-field"
                placeholder="Search premium headphones..."
              />
              <div class="search-icon">
                <i class="ri-search-line"></i>
              </div>
              <div class="search-results" id="desktopSearchResults"></div>
            </div>

            <!-- Action Icons - Far Right -->
            <div class="header-icons">
              <% if (!locals.isAuthenticated) { %>
              <a href="/login" class="icon-btn" title="Wishlist">
                <i class="ri-heart-line fs-5"></i>
                <span class="count wishlist-count">0</span>
              </a>
              <a href="/login" class="icon-btn cart-link" title="Cart">
                <i class="ri-shopping-bag-line fs-5"></i>
                <span class="count cart-count">0</span>
              </a>
              <a href="/login" class="icon-btn" title="Login">
                <i class="ri-user-line fs-5"></i>
              </a>
              <% } else { %>
              <a href="/wishlist" class="icon-btn" title="Wishlist">
                <i class="ri-heart-line fs-5"></i>
                <span
                  class="count wishlist-count"
                  data-count="<%= locals.wishlistCount || 0 %>"
                  ><%= locals.wishlistCount || 0 %></span
                >
              </a>
              <a href="/cart" class="icon-btn cart-link" title="Cart">
                <i class="ri-shopping-bag-line fs-5"></i>
                <span
                  class="count cart-count"
                  data-count="<%= locals.cartCount || 0 %>"
                  ><%= locals.cartCount || 0 %></span
                >
              </a>
              <div class="dropdown user-dropdown">
                <a
                  class="icon-btn dropdown-toggle"
                  href="#"
                  role="button"
                  data-bs-toggle="dropdown"
                  aria-expanded="false"
                  id="userDropdown"
                  title="Account"
                >
                  <i class="ri-user-line fs-5"></i>
                </a>
                <ul
                  class="dropdown-menu dropdown-menu-end"
                  aria-labelledby="userDropdown"
                >
                  <li>
                    <a class="dropdown-item" href="/profile">
                      <i class="ri-user-3-line"></i> Your Profile
                    </a>
                  </li>
                  <li><hr class="dropdown-divider" /></li>
                  <li>
                    <a class="dropdown-item" href="/logout">
                      <i class="ri-logout-box-line"></i> Logout
                    </a>
                  </li>
                </ul>
              </div>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </nav>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <!-- SweetAlert2 JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Blocked User Handler - Must be loaded early -->
    <script src="/js/blockedUserHandler.js"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const searchFields = document.querySelectorAll(".search-field");
        const desktopResults = document.getElementById("desktopSearchResults");
        const mobileResults = document.getElementById("mobileSearchResults");
        const navbar = document.querySelector(".navbar");
        let debounceTimeout;

        // Scroll effect for navbar
        window.addEventListener("scroll", function () {
          if (window.scrollY > 50) {
            navbar.classList.add("navbar-scrolled");
          } else {
            navbar.classList.remove("navbar-scrolled");
          }
        });

        // Responsive navigation handler
        function handleResponsiveNavigation() {
          const mainNavbar = document.getElementById("mainNavbar");
          const moreDropdown = document.getElementById("moreDropdown");
          const moreDropdownMenu = document.getElementById("moreDropdownMenu");

          if (!mainNavbar || !moreDropdown || !moreDropdownMenu) return;

          // Only apply responsive behavior on desktop/tablet (not mobile collapsed view)
          if (window.innerWidth >= 992) {
            const navItems = Array.from(mainNavbar.children).filter(item =>
              !item.id || item.id !== 'moreDropdown'
            );
            const containerWidth = mainNavbar.parentElement.offsetWidth;
            let totalWidth = 0;
            let visibleItems = [];
            let hiddenItems = [];

            // Calculate which items fit
            navItems.forEach((item, index) => {
              const itemWidth = item.offsetWidth + 16; // Add margin
              if (totalWidth + itemWidth + 100 < containerWidth) { // Reserve space for "More"
                totalWidth += itemWidth;
                visibleItems.push(item);
              } else {
                hiddenItems.push(item);
              }
            });

            // Show/hide More dropdown based on hidden items
            if (hiddenItems.length > 0) {
              moreDropdown.classList.remove("d-none");

              // Move hidden items to dropdown
              moreDropdownMenu.innerHTML = '';
              hiddenItems.forEach(item => {
                const link = item.querySelector('a');
                if (link) {
                  const dropdownItem = document.createElement('li');
                  const dropdownLink = document.createElement('a');
                  dropdownLink.className = 'dropdown-item';
                  dropdownLink.href = link.href;
                  dropdownLink.textContent = link.textContent;
                  dropdownItem.appendChild(dropdownLink);
                  moreDropdownMenu.appendChild(dropdownItem);
                }
              });
            } else {
              moreDropdown.classList.add("d-none");
            }
          } else {
            // On mobile, hide the More dropdown as all items are shown in collapsed menu
            moreDropdown.classList.add("d-none");
          }
        }

        // Initialize responsive navigation
        handleResponsiveNavigation();

        // Handle window resize
        let resizeTimeout;
        window.addEventListener("resize", function() {
          clearTimeout(resizeTimeout);
          resizeTimeout = setTimeout(handleResponsiveNavigation, 250);
        });

        // Enhanced keyboard navigation
        function enhanceKeyboardNavigation() {
          const navLinks = document.querySelectorAll('.navbar .nav-link, .navbar .dropdown-item');
          const dropdownToggles = document.querySelectorAll('.navbar .dropdown-toggle');

          // Handle keyboard navigation for nav links
          navLinks.forEach((link, index) => {
            link.addEventListener('keydown', function(e) {
              switch(e.key) {
                case 'ArrowRight':
                case 'ArrowDown':
                  e.preventDefault();
                  const nextLink = navLinks[index + 1];
                  if (nextLink) {
                    nextLink.focus();
                  } else {
                    navLinks[0].focus(); // Wrap to first
                  }
                  break;
                case 'ArrowLeft':
                case 'ArrowUp':
                  e.preventDefault();
                  const prevLink = navLinks[index - 1];
                  if (prevLink) {
                    prevLink.focus();
                  } else {
                    navLinks[navLinks.length - 1].focus(); // Wrap to last
                  }
                  break;
                case 'Home':
                  e.preventDefault();
                  navLinks[0].focus();
                  break;
                case 'End':
                  e.preventDefault();
                  navLinks[navLinks.length - 1].focus();
                  break;
              }
            });
          });

          // Handle dropdown keyboard navigation
          dropdownToggles.forEach(toggle => {
            toggle.addEventListener('keydown', function(e) {
              if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                const dropdown = toggle.closest('.dropdown');
                const menu = dropdown.querySelector('.dropdown-menu');
                const isExpanded = toggle.getAttribute('aria-expanded') === 'true';

                if (!isExpanded) {
                  // Open dropdown and focus first item
                  toggle.click();
                  setTimeout(() => {
                    const firstItem = menu.querySelector('.dropdown-item');
                    if (firstItem) firstItem.focus();
                  }, 100);
                } else {
                  // Close dropdown
                  toggle.click();
                }
              } else if (e.key === 'Escape') {
                // Close dropdown and return focus to toggle
                const dropdown = toggle.closest('.dropdown');
                const menu = dropdown.querySelector('.dropdown-menu');
                if (menu.classList.contains('show')) {
                  toggle.click();
                  toggle.focus();
                }
              }
            });
          });
        }

        // Initialize keyboard navigation
        enhanceKeyboardNavigation();

        // Enhanced dropdown interactions
        function enhanceDropdownInteractions() {
          const dropdownItems = document.querySelectorAll('.navbar .dropdown-item');

          // Add ripple effect on click
          dropdownItems.forEach(item => {
            item.addEventListener('click', function(e) {
              // Create ripple element
              const ripple = document.createElement('span');
              const rect = this.getBoundingClientRect();
              const size = Math.max(rect.width, rect.height);
              const x = e.clientX - rect.left - size / 2;
              const y = e.clientY - rect.top - size / 2;

              ripple.style.width = ripple.style.height = size + 'px';
              ripple.style.left = x + 'px';
              ripple.style.top = y + 'px';
              ripple.classList.add('ripple');

              // Remove existing ripples
              const existingRipples = this.querySelectorAll('.ripple');
              existingRipples.forEach(r => r.remove());

              // Add new ripple
              this.appendChild(ripple);
              this.classList.add('ripple');

              // Remove ripple after animation
              setTimeout(() => {
                ripple.remove();
                this.classList.remove('ripple');
              }, 600);
            });

            // Enhanced hover effects
            item.addEventListener('mouseenter', function() {
              this.style.setProperty('--hover-scale', '1.02');
            });

            item.addEventListener('mouseleave', function() {
              this.style.setProperty('--hover-scale', '1');
            });
          });

          // Smooth dropdown animations
          const dropdownMenus = document.querySelectorAll('.navbar .dropdown-menu');
          dropdownMenus.forEach(menu => {
            const dropdown = menu.closest('.dropdown');
            const toggle = dropdown.querySelector('.dropdown-toggle');

            // Enhanced show/hide animations
            const observer = new MutationObserver((mutations) => {
              mutations.forEach((mutation) => {
                if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
                  if (menu.classList.contains('show')) {
                    // Stagger item animations
                    const items = menu.querySelectorAll('.dropdown-item');
                    items.forEach((item, index) => {
                      item.style.animationDelay = `${0.1 + (index * 0.05)}s`;
                    });
                  }
                }
              });
            });

            observer.observe(menu, { attributes: true });
          });
        }

        // Initialize enhanced dropdown interactions
        enhanceDropdownInteractions();

        function debounce(func, wait) {
          return function (...args) {
            clearTimeout(debounceTimeout);
            debounceTimeout = setTimeout(() => func.apply(this, args), wait);
          };
        }

        async function fetchSearchResults(query) {
          try {
            const response = await fetch(
              `/search?q=${encodeURIComponent(query)}`
            );
            if (!response.ok) throw new Error("Network response was not ok");
            const products = await response.json();
            return products;
          } catch (error) {
            console.error("Error fetching search results:", error);
            return [];
          }
        }

        function renderSearchResults(products, resultsContainer) {
          resultsContainer.innerHTML = "";
          if (products.length === 0) {
            resultsContainer.innerHTML =
              '<div class="no-results">No premium headphones found matching your search.</div>';
            resultsContainer.classList.add("show");
            return;
          }

          products.forEach((product) => {
            const item = document.createElement("a");
            item.href = `/products/${product._id}`;
            item.classList.add("search-result-item");
            item.innerHTML = `
              <img src="${
                product.mainImage || "/api/placeholder/500/600"
              }" alt="${product.model}" />
              <div>
                <div class="model">${product.model}</div>
                <div class="brand">${product.brand}</div>
              </div>
            `;
            resultsContainer.appendChild(item);
          });
          resultsContainer.classList.add("show");
        }

        searchFields.forEach((field) => {
          field.addEventListener(
            "input",
            debounce(async function () {
              const query = this.value.trim();
              const resultsContainer = this.closest(".mobile-search")
                ? mobileResults
                : desktopResults;

              if (query.length < 2) {
                resultsContainer.classList.remove("show");
                resultsContainer.innerHTML = "";
                return;
              }

              const products = await fetchSearchResults(query);
              renderSearchResults(products, resultsContainer);
            }, 300)
          );

          field.addEventListener("focus", function () {
            const resultsContainer = this.closest(".mobile-search")
              ? mobileResults
              : desktopResults;
            if (resultsContainer.innerHTML) {
              resultsContainer.classList.add("show");
            }
          });

          field.addEventListener("blur", function (e) {
            const resultsContainer = this.closest(".mobile-search")
              ? mobileResults
              : desktopResults;
            setTimeout(() => {
              if (!resultsContainer.contains(e.relatedTarget)) {
                resultsContainer.classList.remove("show");
              }
            }, 200);
          });
        });

        [desktopResults, mobileResults].forEach((container) => {
          container.addEventListener("mousedown", function (e) {
            e.preventDefault();
          });
        });

        // Active page highlighting
        function setActiveNavLink() {
          const currentPath = window.location.pathname;
          const navLinks = document.querySelectorAll(".nav-link");

          // Remove active class from all links
          navLinks.forEach((link) => link.classList.remove("active"));

          // Add active class to current page link
          navLinks.forEach((link) => {
            const linkPath = new URL(link.href).pathname;

            // Exact match for home page
            if (currentPath === "/" && linkPath === "/") {
              link.classList.add("active");
            }
            // For other pages, check if current path starts with link path
            else if (
              currentPath !== "/" &&
              linkPath !== "/" &&
              currentPath.startsWith(linkPath)
            ) {
              link.classList.add("active");
            }
            // Special cases for specific routes
            else if (
              currentPath.includes("/products") &&
              linkPath === "/shopPage"
            ) {
              link.classList.add("active");
            } else if (currentPath === "/about" && linkPath === "/about") {
              link.classList.add("active");
            } else if (currentPath === "/contact" && linkPath === "/contact") {
              link.classList.add("active");
            }
          });
        }

        // Set active link on page load
        setActiveNavLink();

        // Add smooth hover effects to icons
        const iconBtns = document.querySelectorAll(".icon-btn");
        iconBtns.forEach((btn) => {
          btn.addEventListener("mouseenter", function () {
            this.style.transform = "translateY(-3px) scale(1.05)";
          });

          btn.addEventListener("mouseleave", function () {
            this.style.transform = "translateY(0) scale(1)";
          });
        });
      });
    </script>
  </body>
</html>
