<%- include("../partials/user/header") %>

<!-- Product Details Section -->
<section class="product-details-section">
  <div class="container">
    <!-- Breadcrumb -->
    <nav class="product-breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/shopPage">Shop</a></li>
        <li class="breadcrumb-item active"><%= product.model %></li>
      </ol>
    </nav>

    <div class="row g-5">
      <!-- Left Column: Product Gallery + About Section -->
      <div class="col-lg-6">
        <!-- Product Gallery -->
        <div class="product-gallery">
          <!-- Main Image with Hover Zoom -->
          <div class="main-image-container">
            <div class="image-wrapper" id="imageWrapper">
              <img 
                src="<%= product.mainImage || '/api/placeholder/600/600' %>" 
                alt="<%= product.model %>" 
                id="mainProductImage"
                class="main-image"
              >
              <div class="zoom-lens" id="zoomLens"></div>
            </div>
            <div class="zoom-result" id="zoomResult"></div>
          </div>
          
          <!-- Thumbnail Gallery -->
          <% 
            let allImages = [product.mainImage];
            if (product.subImages && product.subImages.length > 0) {
              allImages = allImages.concat(product.subImages);
            }
          %>
          
          <% if (allImages.length > 1) { %>
          <div class="thumbnail-gallery">
            <% allImages.forEach((image, index) => { %>
            <div class="thumbnail-item">
              <img 
                src="<%= image || '/api/placeholder/150/150' %>" 
                alt="<%= product.model %> - Image <%= index + 1 %>" 
                class="thumbnail <%= index === 0 ? 'active' : '' %>" 
                onclick="changeMainImage('<%= image %>', this)"
              >
            </div>
            <% }) %>
          </div>
          <% } %>
        </div>

        <!-- About This Headphone Section -->
        <div class="about-section">
          <h3 class="about-title">About This Headphone</h3>
          <div class="about-content">
            <p class="product-description">
              <%= product.description || 'Experience premium audio quality with crystal-clear sound and exceptional comfort for extended listening sessions. These headphones deliver superior performance with advanced drivers and noise isolation technology.' %>
            </p>
            
            <!-- Key Features -->
            <div class="key-features">
              <h4>Key Features</h4>
              <ul class="features-list">
                <li><i class="ri-check-circle-fill"></i> Premium audio drivers for superior sound quality</li>
                <li><i class="ri-check-circle-fill"></i> Comfortable over-ear design for extended use</li>
                <li><i class="ri-check-circle-fill"></i> Advanced noise isolation technology</li>
                <li><i class="ri-check-circle-fill"></i> Durable build with premium materials</li>
                <li><i class="ri-check-circle-fill"></i> Compatible with all devices</li>
              </ul>
            </div>

            <!-- Product Specifications -->
            <div class="specifications">
              <h4>Specifications</h4>
              <div class="spec-grid">
                <div class="spec-item">
                  <span class="spec-label">Brand</span>
                  <span class="spec-value"><%= product.brand %></span>
                </div>
                <div class="spec-item">
                  <span class="spec-label">Model</span>
                  <span class="spec-value"><%= product.model %></span>
                </div>
                <% if (product.connectivity) { %>
                <div class="spec-item">
                  <span class="spec-label">Connectivity</span>
                  <span class="spec-value"><%= product.connectivity %></span>
                </div>
                <% } %>
                <% if (product.manufacturer) { %>
                <div class="spec-item">
                  <span class="spec-label">Manufacturer</span>
                  <span class="spec-value"><%= product.manufacturer %></span>
                </div>
                <% } %>
                <% if (product.category) { %>
                <div class="spec-item">
                  <span class="spec-label">Category</span>
                  <span class="spec-value"><%= product.category.name %></span>
                </div>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Right Column: Product Information & Purchase -->
      <div class="col-lg-6">
        <div class="product-details">
          <!-- Brand Badge -->
          <div class="brand-badge">
            <i class="ri-headphone-line"></i>
            <%= product.brand %>
          </div>
          
          <!-- Product Title -->
          <h1 class="product-title"><%= product.model %></h1>
          
          <!-- Rating & Reviews -->
          <div class="rating-section">
            <div class="rating-stars">
              <i class="ri-star-fill"></i>
              <i class="ri-star-fill"></i>
              <i class="ri-star-fill"></i>
              <i class="ri-star-fill"></i>
              <i class="ri-star-half-line"></i>
            </div>
            <span class="rating-text">(4.2)</span>
            <span class="review-count">• 128 reviews</span>
          </div>

          <!-- Price Section -->
          <div class="price-section">
            <% if (product.discountPercentage > 0) { %>
              <div class="price-main">
                <span class="current-price">₹<%= product.finalPrice.toFixed(2) %></span>
                <span class="original-price">₹<%= product.regularPrice.toFixed(2) %></span>
              </div>
              <div class="discount-info">
                <span class="discount-badge">
                  <%= Math.round(product.discountPercentage) %>% OFF
                </span>
                <span class="savings">You save ₹<%= (product.regularPrice - product.finalPrice).toFixed(0) %></span>
              </div>
              <% if (product.bestOfferTitle) { %>
                <div class="offer-banner">
                  <i class="ri-gift-line"></i>
                  <%= product.bestOfferTitle %>
                </div>
              <% } %>
            <% } else { %>
              <div class="price-main">
                <span class="current-price">₹<%= product.regularPrice.toFixed(2) %></span>
              </div>
            <% } %>
          </div>

          <!-- Stock Status -->
          <div class="stock-section">
            <% 
              const stockStatus = product.stock > 10 ? 'in-stock' : product.stock > 0 ? 'low-stock' : 'out-of-stock';
              const stockText = product.stock > 10 ? 'In Stock' : product.stock > 0 ? `Only ${product.stock} left in stock` : 'Out of Stock';
              const stockIcon = product.stock > 10 ? 'ri-checkbox-circle-line' : product.stock > 0 ? 'ri-error-warning-line' : 'ri-close-circle-line';
            %>
            <div class="stock-indicator stock-<%= stockStatus %>">
              <i class="<%= stockIcon %>"></i>
              <%= stockText %>
            </div>
          </div>

          <!-- Purchase Section -->
          <div class="purchase-section">
            <!-- Quantity Selector -->
            <div class="quantity-section">
              <label class="quantity-label">Quantity:</label>
              <div class="quantity-selector">
                <button type="button" class="quantity-btn" onclick="decreaseQuantity()">
                  <i class="ri-subtract-line"></i>
                </button>
                <input type="number" id="quantity" value="1" min="1" max="<%= product.stock %>" readonly>
                <button type="button" class="quantity-btn" onclick="increaseQuantity()">
                  <i class="ri-add-line"></i>
                </button>
              </div>
            </div>
            
            <!-- Action Buttons -->
            <div class="action-buttons">
              <button class="btn-add-to-cart" data-product-id="<%= product._id %>" <%= product.stock === 0 ? 'disabled' : '' %>>
                <i class="ri-shopping-cart-line"></i>
                <span><%= product.stock === 0 ? 'Out of Stock' : 'Add to Cart' %></span>
              </button>
              
              <button class="btn-wishlist <%= isWishlisted ? 'wishlisted' : '' %>" data-product-id="<%= product._id %>">
                <i class="<%= isWishlisted ? 'ri-heart-fill' : 'ri-heart-line' %>"></i>
              </button>
            </div>

            <!-- Additional Actions -->
            <div class="additional-actions">
              <button class="btn-buy-now" data-product-id="<%= product._id %>" <%= product.stock === 0 ? 'disabled' : '' %>>
                <i class="ri-flash-line"></i>
                Buy Now
              </button>
            </div>
          </div>

          <!-- Delivery Info -->
          <div class="delivery-info">
            <div class="delivery-item">
              <i class="ri-truck-line"></i>
              <div>
                <strong>Free Delivery</strong>
                <p>Free delivery on orders above ₹999</p>
              </div>
            </div>
            <div class="delivery-item">
              <i class="ri-arrow-go-back-line"></i>
              <div>
                <strong>Easy Returns</strong>
                <p>30-day return policy</p>
              </div>
            </div>
            <div class="delivery-item">
              <i class="ri-shield-check-line"></i>
              <div>
                <strong>Warranty</strong>
                <p>1 year manufacturer warranty</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- You Might Also Like Section -->
<% if (relatedProducts && relatedProducts.length > 0) { %>
<section class="related-products-section">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">You might also like</h2>
    </div>
    <div class="related-products-row">
      <% relatedProducts.slice(0, 4).forEach((relatedProduct) => { %>
      <div class="related-product-card">
        <div class="related-product-image">
          <a href="/products/<%= relatedProduct._id %>">
            <img src="<%= relatedProduct.mainImage || '/api/placeholder/300/300' %>" alt="<%= relatedProduct.model %>">
          </a>
          <button class="related-wishlist-btn" data-product-id="<%= relatedProduct._id %>">
            <i class="ri-heart-line"></i>
          </button>
          <% if (relatedProduct.discountPercentage > 0) { %>
          <span class="related-discount-badge">
            <%= Math.round(relatedProduct.discountPercentage) %>% OFF
          </span>
          <% } %>
        </div>
        <div class="related-product-info">
          <div class="related-brand"><%= relatedProduct.brand %></div>
          <h4 class="related-title">
            <a href="/products/<%= relatedProduct._id %>"><%= relatedProduct.model %></a>
          </h4>
          <div class="related-rating">
            <div class="related-stars">
              <i class="ri-star-fill"></i>
              <i class="ri-star-fill"></i>
              <i class="ri-star-fill"></i>
              <i class="ri-star-fill"></i>
              <i class="ri-star-half-line"></i>
            </div>
            <span class="related-rating-text">(4.2)</span>
          </div>
          <div class="related-price">
            <% if (relatedProduct.discountPercentage > 0) { %>
              <span class="related-current-price">₹<%= relatedProduct.finalPrice.toFixed(2) %></span>
              <span class="related-original-price">₹<%= relatedProduct.regularPrice.toFixed(2) %></span>
            <% } else { %>
              <span class="related-current-price">₹<%= relatedProduct.regularPrice.toFixed(2) %></span>
            <% } %>
          </div>
          <button class="related-add-cart add-to-cart" data-product-id="<%= relatedProduct._id %>">
            <i class="ri-shopping-cart-line"></i>
            Add to Cart
          </button>
        </div>
      </div>
      <% }) %>
    </div>
  </div>
</section>
<% } %>

<%- include("../partials/user/footer") %>

<script>
// Image change functionality
function changeMainImage(imageSrc, thumbnailElement) {
  document.getElementById('mainProductImage').src = imageSrc;
  
  // Update active thumbnail
  document.querySelectorAll('.thumbnail').forEach(thumb => {
    thumb.classList.remove('active');
  });
  thumbnailElement.classList.add('active');
  
  // Reinitialize zoom for new image
  initImageZoom();
}

// Quantity controls
function increaseQuantity() {
  const quantityInput = document.getElementById('quantity');
  const currentValue = parseInt(quantityInput.value);
  const maxValue = parseInt(quantityInput.max);
  
  if (currentValue < maxValue) {
    quantityInput.value = currentValue + 1;
  }
}

function decreaseQuantity() {
  const quantityInput = document.getElementById('quantity');
  const currentValue = parseInt(quantityInput.value);
  
  if (currentValue > 1) {
    quantityInput.value = currentValue - 1;
  }
}

// Image Zoom functionality (Amazon/Flipkart style)
function initImageZoom() {
  const img = document.getElementById('mainProductImage');
  const zoomLens = document.getElementById('zoomLens');
  const zoomResult = document.getElementById('zoomResult');
  const imageWrapper = document.getElementById('imageWrapper');
  
  if (!img || !zoomLens || !zoomResult || !imageWrapper) return;
  
  // Set zoom result background
  zoomResult.style.backgroundImage = `url('${img.src}')`;
  
  // Calculate zoom ratio
  const cx = zoomResult.offsetWidth / zoomLens.offsetWidth;
  const cy = zoomResult.offsetHeight / zoomLens.offsetHeight;
  
  // Set background size for zoom result
  zoomResult.style.backgroundSize = `${img.width * cx}px ${img.height * cy}px`;
  
  // Mouse move event
  function moveLens(e) {
    e.preventDefault();
    
    // Get cursor position
    const pos = getCursorPos(e);
    
    // Calculate lens position
    let x = pos.x - (zoomLens.offsetWidth / 2);
    let y = pos.y - (zoomLens.offsetHeight / 2);
    
    // Prevent lens from going outside image
    if (x > img.width - zoomLens.offsetWidth) { x = img.width - zoomLens.offsetWidth; }
    if (x < 0) { x = 0; }
    if (y > img.height - zoomLens.offsetHeight) { y = img.height - zoomLens.offsetHeight; }
    if (y < 0) { y = 0; }
    
    // Set lens position
    zoomLens.style.left = x + 'px';
    zoomLens.style.top = y + 'px';
    
    // Display zoomed area
    zoomResult.style.backgroundPosition = `-${x * cx}px -${y * cy}px`;
  }
  
  function getCursorPos(e) {
    const a = img.getBoundingClientRect();
    const x = e.pageX - a.left - window.pageXOffset;
    const y = e.pageY - a.top - window.pageYOffset;
    return { x: x, y: y };
  }
  
  function showZoom() {
    zoomLens.style.display = 'block';
    zoomResult.style.display = 'block';
  }
  
  function hideZoom() {
    zoomLens.style.display = 'none';
    zoomResult.style.display = 'none';
  }
  
  // Event listeners
  imageWrapper.addEventListener('mouseenter', showZoom);
  imageWrapper.addEventListener('mouseleave', hideZoom);
  imageWrapper.addEventListener('mousemove', moveLens);
  
  // Touch events for mobile
  imageWrapper.addEventListener('touchstart', showZoom);
  imageWrapper.addEventListener('touchend', hideZoom);
  imageWrapper.addEventListener('touchmove', function(e) {
    e.preventDefault();
    const touch = e.touches[0];
    const mouseEvent = new MouseEvent('mousemove', {
      clientX: touch.clientX,
      clientY: touch.clientY
    });
    moveLens(mouseEvent);
  });
}

document.addEventListener('DOMContentLoaded', function() {
  // Initialize image zoom
  initImageZoom();
  
  const cartCountElement = document.querySelector('.cart-count');
  const wishlistCountElement = document.querySelector('.wishlist-count');

  // Add to cart functionality
  document.querySelectorAll('.add-to-cart, .btn-add-to-cart').forEach(button => {
    button.addEventListener('click', async function() {
      const productId = this.dataset.productId;
      const quantity = document.getElementById('quantity') ? parseInt(document.getElementById('quantity').value) : 1;

      try {
        const response = await fetch('/api/cart/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId, quantity })
        });
        const result = await response.json();

        if (response.status === 401 || !result.success) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: result.message || 'Please log in to add items to your cart',
            showConfirmButton: false,
            timer: 2000
          }).then(() => {
            window.location.href = '/login';
          });
        } else if (result.success) {
          if (cartCountElement) {
            cartCountElement.textContent = result.cartCount;
            cartCountElement.dataset.count = result.cartCount;
          }

          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'success',
            title: result.message,
            showConfirmButton: false,
            timer: 1500
          });
        }
      } catch (error) {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title: 'Error adding to cart',
          showConfirmButton: false,
          timer: 1500
        });
      }
    });
  });

  // Wishlist functionality
  document.querySelectorAll('.btn-wishlist, .related-wishlist-btn').forEach(button => {
    button.addEventListener('click', async function() {
      const productId = this.dataset.productId;

      try {
        const response = await fetch('/api/wishlist/toggle', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId })
        });
        const result = await response.json();

        if (response.status === 401 || !result.success) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: result.message || 'Please log in to manage your wishlist',
            showConfirmButton: false,
            timer: 2000
          }).then(() => {
            window.location.href = '/login';
          });
        } else if (result.success) {
          const icon = this.querySelector('i');
          if (result.isWishlisted) {
            icon.className = 'ri-heart-fill';
            this.classList.add('wishlisted');
          } else {
            icon.className = 'ri-heart-line';
            this.classList.remove('wishlisted');
          }

          if (wishlistCountElement) {
            wishlistCountElement.textContent = result.wishlistCount;
            wishlistCountElement.dataset.count = result.wishlistCount;
          }

          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'success',
            title: result.message,
            showConfirmButton: false,
            timer: 1500
          });
        }
      } catch (error) {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title: 'Error managing wishlist',
          showConfirmButton: false,
          timer: 1500
        });
      }
    });
  });

  // Buy now functionality
  document.querySelectorAll('.btn-buy-now').forEach(button => {
    button.addEventListener('click', async function() {
      const productId = this.dataset.productId;
      const quantity = parseInt(document.getElementById('quantity').value);

      // Add to cart first
      try {
        const response = await fetch('/api/cart/add', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ productId, quantity })
        });
        const result = await response.json();

        if (response.status === 401 || !result.success) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: result.message || 'Please log in to continue',
            showConfirmButton: false,
            timer: 2000
          }).then(() => {
            window.location.href = '/login';
          });
        } else if (result.success) {
          // Redirect to checkout
          window.location.href = '/cart';
        }
      } catch (error) {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'error',
          title: 'Error processing request',
          showConfirmButton: false,
          timer: 1500
        });
      }
    });
  });
});
</script>
