<%- include("../partials/user/header") %>
<!-- Breadcrumb -->
<section class="py-3 bg-light">
  <div class="container">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb mb-0">
        <li class="breadcrumb-item"><a href="/" class="text-decoration-none text-muted">Home</a></li>
        <li class="breadcrumb-item"><a href="/shopPage" class="text-decoration-none text-muted">Shop</a></li>
        <li class="breadcrumb-item"><a href="/shopPage" class="text-decoration-none text-muted"><%= product.category.name %></a></li>
        <li class="breadcrumb-item active" aria-current="page"><%= product.title %></li>
      </ol>
    </nav>
  </div>
</section>

<!-- Product Details -->
<section class="py-5 bg-white">
  <div class="container">
    <div class="row g-5">
      <!-- Product Images -->
      <div class="col-lg-5">
        <div class="row">
          <!-- Thumbnails - Vertical on left side -->
          <div class="col-2">
            <div class="d-flex flex-column thumbnails-container">
              <img src="<%= product.mainImage || '/api/placeholder/600/800' %>" alt="<%= product.title %> - Main Image" class="thumbnail active" onclick="changeImage(this, '<%= product.mainImage || '/api/placeholder/600/800' %>')" />
              <% if (product.subImages && product.subImages.length > 0) { %>
                <% product.subImages.forEach((subImage, index) => { %>
                  <img src="<%= subImage || '/api/placeholder/600/800' %>" alt="<%= product.title %> - Image <%= index + 1 %>" class="thumbnail" onclick="changeImage(this, '<%= subImage || '/api/placeholder/600/800' %>')" />
                <% }) %>
              <% } %>
            </div>
          </div>

          <!-- Main Image -->
          <div class="col-10">
            <div class="mb-3 zoom-container" id="zoomContainer">
              <% if (product.activeOffer && product.discountPercentage > 0) { %>
                <span class="offer-badge"><%= product.discountPercentage %>% OFF</span>
              <% } %>
              <img src="<%= product.mainImage || '/api/placeholder/600/800' %>" alt="<%= product.title %>" class="main-image" id="mainImage" />
            </div>
          </div>
        </div>
      </div>

      <!-- Product Info -->
      <div class="col-lg-7">
        <div class="headphone-details">
          <h1 class="fs-2 fw-bold mb-1"><%= product.title %></h1>
          <p class="fs-5 mb-2">by <a href="#" class="text-decoration-none"><%= product.brand %></a></p>

          <!-- Product Rating -->
          <% if (product.reviewCount > 0) { %>
            <div class="d-flex align-items-center mb-3">
              <div class="rating-stars me-2">
                <% for (let i = 1; i <= 5; i++) { %>
                  <i class="<%= i <= Math.round(product.averageRating) ? 'ri-star-fill' : 'ri-star-line' %> text-warning"></i>
                <% } %>
              </div>
              <span class="fw-bold me-2"><%= product.averageRating.toFixed(1) %></span>
              <span class="text-muted">(<%= product.reviewCount %> review<%= product.reviewCount !== 1 ? 's' : '' %>)</span>
              <a href="#reviews" class="ms-2 text-decoration-none" onclick="document.getElementById('reviews-tab').click()">
                See all reviews
              </a>
            </div>
          <% } else { %>
            <div class="mb-3">
              <span class="text-muted">No reviews yet</span>
              <a href="#reviews" class="ms-2 text-decoration-none" onclick="document.getElementById('reviews-tab').click()">
                Be the first to review
              </a>
            </div>
          <% } %>

          <div class="headphone-meta">
            <div class="headphone-meta-item">
              <i class="ri-battery-line headphone-meta-icon"></i>
              <span> <%= product.battery_life %> hours</span>
            </div>
            <div class="headphone-meta-item">
              <i class="ri-wireless-charging-line headphone-meta-icon"></i>
              <span><%= product.connectivity %></span>
            </div>
            <div class="headphone-meta-item">
              <i class="ri-calendar-line headphone-meta-icon"></i>
              <span>Released: <%= product.release_date ? new Date(product.release_date).toLocaleDateString() : 'N/A' %></span>
            </div>
            <div class="headphone-meta-item">
              <i class="ri-barcode-line headphone-meta-icon"></i>
              <span>Model: <%= product.model_number || 'N/A' %></span>
            </div>
          </div>

          <div class="price-section mb-4">
            <% if (product.activeOffer && product.discountPercentage > 0) { %>
              <div class="d-flex align-items-baseline gap-2">
                <h2 class="fs-3 fw-bold mb-0 text-danger">₹<%= product.finalPrice.toFixed(2) %></h2>
                <span class="fs-5 text-decoration-line-through text-muted">₹<%= product.regularPrice.toFixed(2) %></span>
                <span class="badge bg-danger">-<%= Math.round(product.discountPercentage) %>% OFF</span>
              </div>
              <div class="offer-details mt-2">
                <span class="text-success d-flex align-items-center gap-1">
                  <i class="ri-price-tag-3-line"></i>
                  <%= product.activeOffer.title %>
                </span>
                <small class="text-muted">
                  You save: ₹<%= product.discountAmount.toFixed(2) %>
                </small>
              </div>
            <% } else { %>
              <h2 class="fs-3 fw-bold mb-0 text-danger">₹<%= product.regularPrice.toFixed(2) %></h2>
            <% } %>
          </div>

          <div class="mb-3">
            <% if (product.stock > 10) { %>
              <span class="stock-status in-stock">
                <i class="ri-checkbox-circle-line me-1"></i> In Stock (<%= product.stock %> units available)
              </span>
            <% } else if (product.stock > 0) { %>
              <span class="stock-status low-stock">
                <i class="ri-alert-line me-1"></i> Low Stock (<%= product.stock %> units left)
              </span>
            <% } else { %>
              <span class="stock-status out-of-stock">
                <i class="ri-close-circle-line me-1"></i> Out of Stock
              </span>
            <% } %>
          </div>

          <p class="text-muted mb-4">
            <%= product.description %>
          </p>

          <div class="d-flex flex-column gap-4">
            <div>
              <label class="form-label fw-medium mb-2">Quantity</label>
              <div class="quantity-selector">
                <button class="quantity-btn" onclick="decrementQuantity()">
                  <i class="ri-subtract-line"></i>
                </button>
                <input type="number" class="quantity-input" id="quantity" value="1" min="1" max="<%= Math.min(5, product.stock) %>" />
                <button class="quantity-btn" onclick="incrementQuantity()">
                  <i class="ri-add-line"></i>
                </button>
              </div>
            </div>

            <div class="action-buttons">
              <button class="btn btn-primary btn-add-to-cart py-3"
                      data-product-id="<%= product._id %>"
                      <%= product.stock === 0 ? 'disabled' : '' %>
                      <%= locals.isInCart ? 'data-in-cart="true"' : '' %>>
                <i class="ri-shopping-cart-line"></i>
                <span><%= locals.isInCart ? 'Added to Cart' : 'Add to Cart' %></span>
              </button>
              <button class="btn-wishlist"
                      data-product-id="<%= product._id %>"
                      <%= locals.isWishlisted ? 'data-wishlisted="true"' : '' %>>
                <i class="<%= locals.isWishlisted ? 'ri-heart-fill' : 'ri-heart-line' %>"></i>
              </button>

            </div>
          </div>
        </div>

        <!-- Social Sharing -->
        <div>
          <p class="fw-medium mb-2">Share this product:</p>
          <div class="d-flex gap-2">
            <a href="#" class="social-icon"><i class="ri-facebook-line"></i></a>
            <a href="#" class="social-icon"><i class="ri-twitter-x-line"></i></a>
            <a href="#" class="social-icon"><i class="ri-pinterest-line"></i></a>
            <a href="#" class="social-icon"><i class="ri-instagram-line"></i></a>
            <a href="#" class="social-icon"><i class="ri-mail-line"></i></a>
          </div>
        </div>
      </div>
    </div>

    <!-- Product Tabs -->
    <div class="product-tabs">
      <ul class="nav nav-tabs" id="productTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab" aria-controls="description" aria-selected="true">Description</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab" aria-controls="details" aria-selected="false">Details</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="false">Reviews</button>
        </li>
      </ul>
      <div class="tab-content" id="productTabsContent">
        <div class="tab-pane fade show active" id="description" role="tabpanel" aria-labelledby="description-tab">
          <div class="row">
            <div class="col-lg-12">
              <h3 class="fs-4 fw-bold mb-4">About the Headphones</h3>
              <p class="mb-4"><%= product.description %></p>
            </div>
          </div>
        </div>
        <div class="tab-pane fade" id="details" role="tabpanel" aria-labelledby="details-tab">
          <h3 class="fs-4 fw-bold mb-4">Headphone Specifications</h3>
          <div class="headphone-specs">
            <div class="headphone-spec">
              <span class="headphone-spec-label">Title</span>
              <span class="headphone-spec-value"><%= product.title %></span>
            </div>
            <div class="headphone-spec">
              <span class="headphone-spec-label">Brand</span>
              <span class="headphone-spec-value"><%= product.brand %></span>
            </div>
            <div class="headphone-spec">
              <span class="headphone-spec-label">Release Date</span>
              <span class="headphone-spec-value"><%= product.release_date ? new Date(product.release_date).toLocaleDateString() : 'N/A' %></span>
            </div>
            <div class="headphone-spec">
              <span class="headphone-spec-label">Connectivity</span>
              <span class="headphone-spec-value"><%= product.connectivity %></span>
            </div>
            <div class="headphone-spec">
              <span class="headphone-spec-label">Battery Life</span>
              <span class="headphone-spec-value"><%= product.battery_life %> hours</span>
            </div>
            <div class="headphone-spec">
              <span class="headphone-spec-label">Model Number</span>
              <span class="headphone-spec-value"><%= product.model_number || 'N/A' %></span>
            </div>
            <div class="headphone-spec">
              <span class="headphone-spec-label">Category</span>
              <span class="headphone-spec-value"><%= product.category.name %></span>
            </div>
            <div class="headphone-spec">
              <span class="headphone-spec-label">Manufacturer</span>
              <span class="headphone-spec-value"><%= product.manufacturer %></span>
            </div>
          </div>
        </div>
        <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
          <div class="row">
            <div class="col-lg-12">
              <!-- Reviews Header -->
              <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                  <h3 class="fs-4 fw-bold mb-0">Customer Reviews</h3>
                  <% if (product.reviewCount > 0) { %>
                    <div class="d-flex align-items-center mt-2">
                      <div class="rating-stars me-2">
                        <% for (let i = 1; i <= 5; i++) { %>
                          <i class="<%= i <= Math.round(product.averageRating) ? 'ri-star-fill' : 'ri-star-line' %> text-warning"></i>
                        <% } %>
                      </div>
                      <span class="fw-bold me-2"><%= product.averageRating.toFixed(1) %></span>
                      <span class="text-muted">(<%= product.reviewCount %> review<%= product.reviewCount !== 1 ? 's' : '' %>)</span>
                    </div>
                  <% } %>
                </div>
                <% if (locals.isAuthenticated && !userReview) { %>
                  <button class="btn btn-outline-dark" id="writeReviewBtn">Write a Review</button>
                <% } else if (!locals.isAuthenticated) { %>
                  <a href="/login" class="btn btn-outline-dark">Login to Review</a>
                <% } %>
              </div>

              <!-- Review Form (Hidden by default) -->
              <% if (locals.isAuthenticated && !userReview) { %>
                <div id="reviewForm" class="card mb-4" style="display: none;">
                  <div class="card-body">
                    <h5 class="card-title">Write Your Review</h5>
                    <form id="submitReviewForm">
                      <div class="mb-3">
                        <label class="form-label">Rating</label>
                        <div class="rating-input">
                          <% for (let i = 5; i >= 1; i--) { %>
                            <input type="radio" name="rating" value="<%= i %>" id="star<%= i %>" required>
                            <label for="star<%= i %>" class="star-label">
                              <i class="ri-star-fill"></i>
                            </label>
                          <% } %>
                        </div>
                      </div>
                      <div class="mb-3">
                        <label for="reviewText" class="form-label">Your Review</label>
                        <textarea class="form-control" id="reviewText" name="reviewText" rows="4"
                                  placeholder="Share your experience with this product..."
                                  minlength="10" maxlength="1000" required></textarea>
                        <div class="form-text">Minimum 10 characters required</div>
                      </div>
                      <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">Submit Review</button>
                        <button type="button" class="btn btn-secondary" id="cancelReviewBtn">Cancel</button>
                      </div>
                    </form>
                  </div>
                </div>
              <% } %>

              <!-- User's Existing Review -->
              <% if (userReview) { %>
                <div class="alert alert-info">
                  <h6>Your Review</h6>
                  <div class="d-flex align-items-center mb-2">
                    <div class="rating-stars me-2">
                      <% for (let i = 1; i <= 5; i++) { %>
                        <i class="<%= i <= userReview.rating ? 'ri-star-fill' : 'ri-star-line' %> text-warning"></i>
                      <% } %>
                    </div>
                    <small class="text-muted">Reviewed on <%= new Date(userReview.createdAt).toLocaleDateString() %></small>
                  </div>
                  <p class="mb-2"><%= userReview.reviewText %></p>
                  <button class="btn btn-sm btn-outline-danger" onclick="deleteReview('<%= userReview._id %>')">
                    Delete Review
                  </button>
                </div>
              <% } %>

              <!-- Reviews List -->
              <div id="reviewsList">
                <% if (recentReviews && recentReviews.length > 0) { %>
                  <% recentReviews.forEach(review => { %>
                    <div class="review-item border-bottom pb-3 mb-3">
                      <div class="d-flex align-items-start">
                        <div class="review-avatar me-3">
                          <% if (review.user.profileImage) { %>
                            <img src="<%= review.user.profileImage %>" alt="<%= review.user.fullName %>"
                                 class="rounded-circle" width="40" height="40">
                          <% } else { %>
                            <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center"
                                 style="width: 40px; height: 40px;">
                              <i class="ri-user-line text-white"></i>
                            </div>
                          <% } %>
                        </div>
                        <div class="flex-grow-1">
                          <div class="d-flex justify-content-between align-items-start mb-2">
                            <div>
                              <h6 class="mb-1"><%= review.user.fullName %></h6>
                              <div class="d-flex align-items-center">
                                <div class="rating-stars me-2">
                                  <% for (let i = 1; i <= 5; i++) { %>
                                    <i class="<%= i <= review.rating ? 'ri-star-fill' : 'ri-star-line' %> text-warning"></i>
                                  <% } %>
                                </div>
                                <% if (review.isVerifiedPurchase) { %>
                                  <span class="badge bg-success">Verified Purchase</span>
                                <% } %>
                              </div>
                            </div>
                            <small class="text-muted"><%= review.formattedDate %></small>
                          </div>
                          <p class="mb-0"><%= review.reviewText %></p>
                        </div>
                      </div>
                    </div>
                  <% }) %>

                  <% if (product.reviewCount > 3) { %>
                    <div class="text-center">
                      <button class="btn btn-outline-primary" id="loadMoreReviews">
                        Load More Reviews (<%= product.reviewCount - 3 %> remaining)
                      </button>
                    </div>
                  <% } %>
                <% } else { %>
                  <p class="text-muted text-center py-4">
                    No reviews yet. Be the first to review this product!
                  </p>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Related Products Section -->
    <div class="related-products">
      <h3 class="fs-3 fw-bold mb-4">You May Also Like</h3>
      <div class="row g-4">
        <% if (relatedProducts && relatedProducts.length > 0) { %>
          <% relatedProducts.forEach(relatedProduct => { %>
            <div class="col-sm-6 col-md-4 col-lg-3">
              <div class="product-card bg-white h-100 related-product">
                <div class="product-image-container">
                  <% if (relatedProduct.activeOffer && relatedProduct.discountPercentage > 0) { %>
                    <span class="offer-badge"><%= relatedProduct.discountPercentage %>% OFF</span>
                  <% } %>
                  <%
                    const now = new Date();
                    const createdAt = new Date(relatedProduct.createdAt);
                    const diffDays = (now - createdAt) / (1000 * 60 * 60 * 24);
                    const isNew = diffDays <= 30;
                  %>
                  <% if (isNew) { %>
                    <span class="product-tag">New</span>
                  <% } %>
                  <a href="/products/<%= relatedProduct._id %>" class="text-decoration-none">
                    <img src="<%= relatedProduct.mainImage || '/api/placeholder/600/800' %>" alt="<%= relatedProduct.title %>" class="product-image" />
                  </a>
                </div>
                <div class="p-3">
                  <h3 class="fs-5 fw-semibold mb-1">
                    <a href="/products/<%= relatedProduct._id %>" class="text-dark text-decoration-none"><%= relatedProduct.title %></a>
                  </h3>
                  <p class="text-muted small mb-2"><%= relatedProduct.brand %></p>
                  <div class="d-flex justify-content-between align-items-center">
                    <div>
                      <% if (relatedProduct.activeOffer && relatedProduct.discountPercentage > 0) { %>
                        <div class="d-flex align-items-center gap-2">
                          <span class="fw-bold text-danger">₹<%= relatedProduct.finalPrice.toFixed(2) %></span>
                          <span class="text-decoration-line-through text-muted small">₹<%= relatedProduct.regularPrice.toFixed(2) %></span>
                        </div>
                        <small class="text-success d-block"><%= relatedProduct.activeOffer.title %></small>
                      <% } else { %>
                        <span class="fw-bold">₹<%= relatedProduct.finalPrice.toFixed(2) %></span>
                      <% } %>
                    </div>
                    <div class="d-flex gap-2 align-items-center">
                      <button class="add-to-cart border-0" data-product-id="<%= relatedProduct._id %>" <%= relatedProduct.stock === 0 ? 'disabled' : '' %>>
                        <i class="ri-add-line"></i>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="col-12 text-center">
            <p class="text-muted">No related products available.</p>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</section>

<!-- Footer -->
<%- include("../partials/user/footer") %>

<style>
  /* Existing styles, added original-price */
  .offer-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: #e53935;
    color: white;
    padding: 0.25rem 0.75rem;
    font-size: 0.875rem;
    font-weight: 600;
    border-radius: 2px;
    z-index: 1;
  }

  .related-product .offer-badge {
    font-size: 0.75rem;
    padding: 0.15rem 0.5rem;
  }

  .original-price {
    text-decoration: line-through;
    color: #6b7280;
    font-size: 0.875rem;
    margin-right: 0.5rem;
  }

  .discount-badge {
    background-color: #e53935;
    color: white;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    border-radius: 2px;
    margin-left: 0.5rem;
  }

  .action-buttons {
    display: flex;
    gap: 1rem;
    align-items: center;
  }

  .btn-wishlist {
    background: none;
    border: 2px solid #ddd;
    border-radius: 8px;
    padding: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 48px;
    height: 48px;
  }

  .btn-wishlist:hover {
    border-color: #e53935;
    color: #e53935;
  }

  .btn-wishlist[data-wishlisted="true"] {
    border-color: #e53935;
    color: #e53935;
  }

  .btn-wishlist i {
    font-size: 1.2rem;
  }

  /* Reviews Section Styles */
  .rating-stars i {
    font-size: 1rem;
    margin-right: 2px;
  }

  .rating-input {
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-end;
    gap: 5px;
  }

  .rating-input input[type="radio"] {
    display: none;
  }

  .rating-input .star-label {
    cursor: pointer;
    font-size: 1.5rem;
    color: #ddd;
    transition: color 0.2s ease;
  }

  .rating-input .star-label:hover,
  .rating-input .star-label:hover ~ .star-label,
  .rating-input input[type="radio"]:checked ~ .star-label {
    color: #ffc107;
  }

  .review-item {
    transition: background-color 0.2s ease;
  }

  .review-item:hover {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 15px;
    margin: -15px;
    margin-bottom: 15px;
  }

  .review-avatar img,
  .review-avatar div {
    object-fit: cover;
  }

  .rating-stars .ri-star-fill {
    color: #ffc107;
  }

  .rating-stars .ri-star-line {
    color: #dee2e6;
  }


</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/auth-handler.js"></script>
<script src="../../js/product-zoomer.js"></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const addToCartBtn = document.querySelector('.btn-add-to-cart');
    const wishlistBtn = document.querySelector('.btn-wishlist');
    const quantityInput = document.querySelector('#quantity');
    const cartCountElement = document.querySelector('.cart-count');
    const wishlistCountElement = document.querySelector('.wishlist-count');

    // Quantity controls
    window.decrementQuantity = function () {
      let value = parseInt(quantityInput.value);
      if (value > 1) {
        quantityInput.value = value - 1;
      }
    };

    window.incrementQuantity = function () {
      let value = parseInt(quantityInput.value);
      if (value < parseInt(quantityInput.max)) {
        quantityInput.value = value + 1;
      }
    };

    // Validate quantity input
    quantityInput.addEventListener('change', function () {
      let value = parseInt(this.value);
      if (isNaN(value) || value < 1) {
        value = 1;
        this.value = 1;
      }
      if (value > parseInt(this.max)) {
        value = parseInt(this.max);
        this.value = value;
      }
    });

    // Add to cart
    if (addToCartBtn) {
      addToCartBtn.addEventListener('click', async function () {
        if (addToCartBtn.disabled) return;

        const productId = this.dataset.productId;
        const quantity = parseInt(quantityInput.value);

        try {
          const response = await fetch('/cart/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, quantity })
          });
          const result = await response.json();

          // Check if it's a 401 Unauthorized or authentication error
          if (response.status === 401 || !result.success) {
            console.log('Cart authentication error - redirecting to login');
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: result.message || 'Please log in to add items to your cart',
              showConfirmButton: false,
              timer: 2000
            }).then(() => {
              window.location.href = '/login';
            });
          } else if (result.success) {
            this.dataset.inCart = 'true';
            this.querySelector('span').textContent = 'Added to Cart';
            this.classList.add('btn-success');
            this.classList.remove('btn-primary');
            cartCountElement.textContent = result.cartCount;
            cartCountElement.dataset.count = result.cartCount;

            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: result.message,
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            // Check if it's an authentication error
            if (result.message === 'Please log in to add items to your cart' || result.requiresAuth) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 2000
              }).then(() => {
                window.location.href = '/login';
              });
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 1500
              });
            }
          }
        } catch (error) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: 'Error adding to cart',
            showConfirmButton: false,
            timer: 1500
          });
        }
      });
    }

    // Toggle wishlist
    if (wishlistBtn) {
      wishlistBtn.addEventListener('click', async function () {
        const productId = this.dataset.productId;

        try {
          const response = await fetch('/wishlist/toggle', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId })
          });
          const result = await response.json();

          if (result.success) {
            const isWishlisted = result.isWishlisted;
            this.dataset.wishlisted = isWishlisted;
            this.querySelector('i').className = isWishlisted ? 'ri-heart-fill' : 'ri-heart-line';
            wishlistCountElement.textContent = result.wishlistCount;
            wishlistCountElement.dataset.count = result.wishlistCount;

            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: result.message,
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            if (result.requiresAuth) {
              window.location.href = result.redirectTo || '/login';
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 1500
              });
            }
          }
        } catch (error) {
          console.error('Error toggling wishlist:', error);
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: 'Error updating wishlist',
            showConfirmButton: false,
            timer: 1500
          });
        }
      });
    }

    // Related products actions
    const relatedAddToCartButtons = document.querySelectorAll('.related-products .add-to-cart, .related-products .add-to-cart-btn');

    relatedAddToCartButtons.forEach(button => {
      button.addEventListener('click', async function (e) {
        e.preventDefault();
        if (button.disabled) return;

        const productId = this.dataset.productId;

        try {
          const response = await fetch('/cart/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, quantity: 1 })
          });
          const result = await response.json();

          if (result.success) {
            cartCountElement.textContent = result.cartCount;
            cartCountElement.dataset.count = result.cartCount;

            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: result.message,
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            // Check if it's an authentication error
            if (result.message === 'Please log in to add items to your cart' || result.requiresAuth) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 2000
              }).then(() => {
                window.location.href = '/login';
              });
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 1500
              });
            }
          }
        } catch (error) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: 'Error adding to cart',
            showConfirmButton: false,
            timer: 1500
          });
        }
      });
    });


  });

  // Review functionality
  document.getElementById('writeReviewBtn')?.addEventListener('click', function() {
    document.getElementById('reviewForm').style.display = 'block';
    this.style.display = 'none';
  });

  // Test function to debug form data collection
  window.testReviewForm = function() {
    const form = document.getElementById('submitReviewForm');
    if (!form) {
      console.log('Review form not found');
      return;
    }

    const formData = new FormData(form);
    console.log('Form test results:');
    console.log('- Rating:', formData.get('rating'));
    console.log('- Review Text:', formData.get('reviewText'));

    // Check if any radio button is selected
    const selectedRating = document.querySelector('input[name="rating"]:checked');
    console.log('- Selected rating element:', selectedRating);
    console.log('- Selected rating value:', selectedRating ? selectedRating.value : 'None');

    // Check textarea value
    const textarea = document.getElementById('reviewText');
    console.log('- Textarea element:', textarea);
    console.log('- Textarea value:', textarea ? textarea.value : 'Not found');
  };

  document.getElementById('cancelReviewBtn')?.addEventListener('click', function() {
    document.getElementById('reviewForm').style.display = 'none';
    document.getElementById('writeReviewBtn').style.display = 'block';
  });

  // Submit review form
  document.getElementById('submitReviewForm')?.addEventListener('submit', async function(e) {
    e.preventDefault();

    const formData = new FormData(this);
    const reviewData = {
      rating: formData.get('rating'),
      reviewText: formData.get('reviewText')
    };

    // Debug logging
    console.log('Review form submission:');
    console.log('- Form element:', this);
    console.log('- FormData entries:', Array.from(formData.entries()));
    console.log('- Form data rating:', formData.get('rating'));
    console.log('- Form data reviewText:', formData.get('reviewText'));
    console.log('- Review data object:', reviewData);
    console.log('- Product ID from URL:', '<%= product._id %>');

    // Check selected radio button
    const selectedRating = document.querySelector('input[name="rating"]:checked');
    console.log('- Selected rating element:', selectedRating);
    console.log('- Selected rating value:', selectedRating ? selectedRating.value : 'None');

    // Validate data before sending
    if (!reviewData.rating) {
      console.error('Rating validation failed - no rating selected');
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Please select a rating'
      });
      return;
    }

    if (!reviewData.reviewText || reviewData.reviewText.trim().length < 10) {
      console.error('Review text validation failed:', {
        text: reviewData.reviewText,
        length: reviewData.reviewText ? reviewData.reviewText.trim().length : 0
      });
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Please write a review with at least 10 characters'
      });
      return;
    }

    try {
      const response = await fetch(`/products/<%= product._id %>/reviews`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(reviewData)
      });

      const result = await response.json();

      if (result.success) {
        Swal.fire({
          icon: 'success',
          title: 'Review Submitted!',
          text: 'Thank you for your review. The page will reload to show your review.',
          confirmButtonText: 'OK'
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Failed to submit review'
        });
      }
    } catch (error) {
      console.error('Error submitting review:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Failed to submit review. Please try again.'
      });
    }
  });

  // Load more reviews
  document.getElementById('loadMoreReviews')?.addEventListener('click', async function() {
    try {
      const response = await fetch(`/products/<%= product._id %>/reviews?page=2`);
      const result = await response.json();

      if (result.success && result.reviews.length > 0) {
        const reviewsList = document.getElementById('reviewsList');
        const loadMoreBtn = this;

        result.reviews.forEach(review => {
          const reviewHtml = createReviewHTML(review);
          loadMoreBtn.parentElement.insertAdjacentHTML('beforebegin', reviewHtml);
        });

        // Update or hide load more button
        const remaining = result.pagination.totalReviews - (3 + result.reviews.length);
        if (remaining > 0) {
          loadMoreBtn.textContent = `Load More Reviews (${remaining} remaining)`;
        } else {
          loadMoreBtn.style.display = 'none';
        }
      }
    } catch (error) {
      console.error('Error loading more reviews:', error);
    }
  });

  // Helper function to create review HTML
  function createReviewHTML(review) {
    const stars = Array.from({length: 5}, (_, i) =>
      `<i class="${i < review.rating ? 'ri-star-fill' : 'ri-star-line'} text-warning"></i>`
    ).join('');

    const avatar = review.user.profileImage
      ? `<img src="${review.user.profileImage}" alt="${review.user.fullName}" class="rounded-circle" width="40" height="40">`
      : `<div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
           <i class="ri-user-line text-white"></i>
         </div>`;

    const verifiedBadge = review.isVerifiedPurchase
      ? '<span class="badge bg-success">Verified Purchase</span>'
      : '';

    return `
      <div class="review-item border-bottom pb-3 mb-3">
        <div class="d-flex align-items-start">
          <div class="review-avatar me-3">${avatar}</div>
          <div class="flex-grow-1">
            <div class="d-flex justify-content-between align-items-start mb-2">
              <div>
                <h6 class="mb-1">${review.user.fullName}</h6>
                <div class="d-flex align-items-center">
                  <div class="rating-stars me-2">${stars}</div>
                  ${verifiedBadge}
                </div>
              </div>
              <small class="text-muted">${review.formattedDate}</small>
            </div>
            <p class="mb-0">${review.reviewText}</p>
          </div>
        </div>
      </div>
    `;
  }

  window.changeImage = function(element, imageUrl) {
    document.querySelectorAll('.thumbnail').forEach(thumb => {
      thumb.classList.remove('active');
    });

    element.classList.add('active');

    document.getElementById('mainImage').src = imageUrl;
  };

  // Delete review function
  window.deleteReview = async function(reviewId) {
    const result = await Swal.fire({
      title: 'Delete Review?',
      text: 'Are you sure you want to delete your review? This action cannot be undone.',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, delete it!'
    });

    if (result.isConfirmed) {
      try {
        const response = await fetch(`/reviews/${reviewId}`, {
          method: 'DELETE'
        });

        const deleteResult = await response.json();

        if (deleteResult.success) {
          Swal.fire({
            icon: 'success',
            title: 'Deleted!',
            text: 'Your review has been deleted.',
            confirmButtonText: 'OK'
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: deleteResult.message || 'Failed to delete review'
          });
        }
      } catch (error) {
        console.error('Error deleting review:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to delete review. Please try again.'
        });
      }
    }
  };
</script>