<%- include("../partials/user/header") %>
<style>
  /* Shop Banner Styles */
  .shop-banner-section {
    background-image: url('/assets/shopPageBanner.jpeg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    position: relative;
    height: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  .shop-banner-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(26, 26, 26, 0.7), rgba(0, 0, 0, 0.5));
    z-index: 1;
  }

  .shop-banner-content {
    position: relative;
    z-index: 10;
    color: #ffffff;
    text-align: center;
    animation: fadeInUp 1s ease-out;
  }

  .shop-banner-title {
    font-size: 3.5rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7);
    letter-spacing: -0.02em;
    line-height: 1.1;
  }

  .shop-banner-subtitle {
    font-size: 1.25rem;
    font-weight: 400;
    margin-bottom: 2rem;
    text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.6);
    opacity: 0.95;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .shop-breadcrumb .breadcrumb {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border-radius: 25px;
    padding: 0.75rem 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .shop-breadcrumb .breadcrumb-item a {
    color: #ffffff;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
  }

  .shop-breadcrumb .breadcrumb-item a:hover {
    color: #f8f9fa;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }

  .shop-breadcrumb .breadcrumb-item.active {
    color: #cccccc;
    font-weight: 500;
  }

  .shop-breadcrumb .breadcrumb-item + .breadcrumb-item::before {
    color: #cccccc;
    content: "›";
    font-weight: 600;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .shop-banner-section {
      height: 300px;
      background-attachment: scroll;
    }

    .shop-banner-title {
      font-size: 2.5rem;
      margin-bottom: 1rem;
    }

    .shop-banner-subtitle {
      font-size: 1.1rem;
      margin-bottom: 1.5rem;
    }
  }

  @media (max-width: 576px) {
    .shop-banner-section {
      height: 250px;
    }

    .shop-banner-title {
      font-size: 2rem;
      line-height: 1.2;
    }

    .shop-banner-subtitle {
      font-size: 1rem;
      padding: 0 1rem;
    }

    .shop-breadcrumb .breadcrumb {
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
    }
  }

  /* Enhanced integration with dark navigation */
  .shop-banner-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 100px;
    background: linear-gradient(180deg, rgba(26, 26, 26, 0.3) 0%, transparent 100%);
    z-index: 2;
    pointer-events: none;
  }

  /* Subtle parallax effect on scroll */
  .shop-banner-section {
    transition: transform 0.1s ease-out;
  }

  /* Enhanced text effects */
  .shop-banner-title {
    background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    filter: drop-shadow(2px 2px 8px rgba(0, 0, 0, 0.7));
  }

  /* Smooth transition for mobile */
  @media (max-width: 768px) {
    .shop-banner-title {
      background: #ffffff;
      -webkit-text-fill-color: #ffffff;
      filter: none;
      text-shadow: 2px 2px 8px rgba(0, 0, 0, 0.7);
    }
  }

  /* Existing styles */
  .offer-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: #e53935;
    color: white;
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    font-weight: 600;
    border-radius: 2px;
    z-index: 1;
  }
  .original-price {
    text-decoration: line-through;
    color: #6b7280;
    font-size: 0.875rem;
    margin-right: 0.5rem;
  }

  /* Shop Page Pricing Styles */
  .shop-product-price .current-price {
    font-weight: 700;
    color: #e53935;
    font-size: 1rem;
  }

  .shop-product-price .original-price {
    font-size: 0.85rem;
    color: #6c757d;
    text-decoration: line-through;
    margin-right: 0.5rem;
  }

  /* Enhanced Offer Badge for Shop Page */
  .offer-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background: linear-gradient(135deg, #e53935, #c62828);
    color: white;
    padding: 0.3rem 0.6rem;
    font-size: 0.75rem;
    font-weight: 700;
    border-radius: 15px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 6px rgba(229, 57, 53, 0.3);
    z-index: 2;
    border: 1px solid rgba(255, 255, 255, 0.2);
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0% { box-shadow: 0 2px 6px rgba(229, 57, 53, 0.3); }
    50% { box-shadow: 0 4px 12px rgba(229, 57, 53, 0.5); }
    100% { box-shadow: 0 2px 6px rgba(229, 57, 53, 0.3); }
  }

  /* Mobile Responsive Badge */
  @media (max-width: 576px) {
    .offer-badge {
      top: 8px;
      right: 8px;
      padding: 0.25rem 0.5rem;
      font-size: 0.7rem;
    }
  }
</style>
<!-- Shop Banner Section -->
<section class="shop-banner-section">
  <div class="shop-banner-overlay"></div>
  <div class="container">
    <div class="row align-items-center justify-content-center text-center">
      <div class="col-lg-8">
        <div class="shop-banner-content">
          <h1 class="shop-banner-title">Discover Premium Headphones</h1>
          <p class="shop-banner-subtitle">Immerse yourself in superior sound quality with our curated collection</p>
          <nav aria-label="breadcrumb" class="shop-breadcrumb">
            <ol class="breadcrumb justify-content-center mb-0">
              <li class="breadcrumb-item"><a href="/" class="text-decoration-none">Home</a></li>
              <li class="breadcrumb-item active" aria-current="page">Shop</li>
            </ol>
          </nav>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Shop Content -->
<section class="py-5 bg-white">
  <div class="container">
    <div class="row g-4">
      <!-- Filters Sidebar -->
      <div class="col-lg-3">
        <div class="filters-container">
          <div class="filter-card">
            <div class="filter-header">
              <h3 class="filter-title">
                <i class="ri-filter-3-line me-2"></i>Filters
              </h3>
              <button class="filter-toggle d-lg-none" onclick="toggleFilters()">
                <i class="ri-arrow-down-s-line"></i>
              </button>
            </div>

            <div class="filter-content" id="filterContent">
              <!-- Category Filter -->
              <div class="filter-section">
                <h4 class="filter-section-title">
                  <i class="ri-folder-line me-2"></i>Categories
                </h4>
                <div class="filter-dropdown-container">
                  <select class="filter-dropdown" id="categorySelect" multiple>
                    <option value="">All Categories</option>
                    <% if (categories && categories.length > 0) { %>
                      <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"><%= category.name %></option>
                      <% }) %>
                    <% } %>
                  </select>
                  <i class="ri-arrow-down-s-line dropdown-arrow"></i>
                </div>
              </div>

              <!-- Brand Filter -->
              <div class="filter-section">
                <h4 class="filter-section-title">
                  <i class="ri-price-tag-3-line me-2"></i>Brands
                </h4>
                <div class="filter-dropdown-container">
                  <select class="filter-dropdown" id="brandSelect" multiple>
                    <option value="">All Brands</option>
                    <% if (brands && brands.length > 0) { %>
                      <% brands.forEach(brand => { %>
                        <option value="<%= brand %>"><%= brand %></option>
                      <% }) %>
                    <% } %>
                  </select>
                  <i class="ri-arrow-down-s-line dropdown-arrow"></i>
                </div>
              </div>

              <!-- Price Range Filter -->
              <div class="filter-section">
                <h4 class="filter-section-title">
                  <i class="ri-money-rupee-circle-line me-2"></i>Price Range
                </h4>
                <div class="price-filter">
                  <div class="price-inputs">
                    <div class="price-input-group">
                      <span class="price-currency">₹</span>
                      <input type="number" class="price-input" id="minPriceInput" placeholder="Min" min="0" max="50000" value="0">
                    </div>
                    <div class="price-separator">-</div>
                    <div class="price-input-group">
                      <span class="price-currency">₹</span>
                      <input type="number" class="price-input" id="maxPriceInput" placeholder="Max" min="0" max="50000" value="50000">
                    </div>
                  </div>
                </div>
              </div>

              <!-- Filter Actions -->
              <div class="filter-actions">
                <button class="btn-apply" onclick="applyFilters()">
                  <i class="ri-check-line me-2"></i>Apply Filters
                </button>
                <button class="btn-reset" onclick="resetFilters()">
                  <i class="ri-refresh-line me-2"></i>Reset
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Products Grid -->
      <div class="col-lg-9">
        <!-- Sort and View Options -->
        <div class="shop-controls">
          <div class="sort-section">
            <div class="sort-label">
              <i class="ri-sort-desc me-2"></i>Sort by:
            </div>
            <div class="sort-dropdown">
              <select class="custom-select" id="sortSelect" onchange="sortProducts()">
                <option value="recommended" <%= sortOption === 'recommended' ? 'selected' : '' %>>Recommended</option>
                <option value="price-asc" <%= sortOption === 'price-asc' ? 'selected' : '' %>>Price: Low to High</option>
                <option value="price-desc" <%= sortOption === 'price-desc' ? 'selected' : '' %>>Price: High to Low</option>
                <option value="date-desc" <%= sortOption === 'date-desc' ? 'selected' : '' %>>New Arrivals</option>
                <option value="stock-desc" <%= sortOption === 'stock-desc' ? 'selected' : '' %>>Best Selling</option>
                <option value="name-asc" <%= sortOption === 'name-asc' ? 'selected' : '' %>>Name: A to Z</option>
                <option value="name-desc" <%= sortOption === 'name-desc' ? 'selected' : '' %>>Name: Z to A</option>
              </select>
              <i class="ri-arrow-down-s-line sort-arrow"></i>
            </div>
          </div>
          <div class="view-section">
            <div class="view-label d-none d-sm-block">
              <i class="ri-layout-grid-line me-2"></i>View:
            </div>
            <div class="view-options">
              <button type="button" class="view-btn active" data-view="grid">
                <i class="ri-grid-line"></i>
              </button>
              <button type="button" class="view-btn" data-view="list">
                <i class="ri-list-check"></i>
              </button>
            </div>
          </div>
        </div>

        <!-- Products -->
        <div class="row g-4" id="productGrid">
          <% if (products && products.length > 0) { %>
            <% products.forEach(product => { %>
              <div class="col-sm-6 col-md-4 product-item"
                   data-category="<%= product.category._id %>"
                   data-price="<%= product.finalPrice %>"
                   data-date="<%= new Date(product.createdAt).getTime() %>"
                   data-stock="<%= product.stock %>">
                <div class="product-card bg-white h-100">
                  <div class="product-image-container">
                    <%
                      const now = new Date();
                      const createdAt = new Date(product.createdAt);
                      const diffDays = (now - createdAt) / (1000 * 60 * 60 * 24);
                      const isNew = diffDays <= 30;
                    %>
                    <% if (isNew) { %>
                      <span class="product-tag">New</span>
                    <% } %>

                    <% if (product.discountPercentage > 0) { %>
                      <span class="offer-badge"><%= Math.round(product.discountPercentage) %>% OFF</span>
                    <% } %>

                    <a href="/products/<%= product._id %>" class="text-decoration-none">
                      <img src="<%= product.mainImage || '/api/placeholder/500/600' %>" alt="<%= product.model %>" class="product-image" />
                    </a>
                  </div>
                  <div class="p-3">
                    <h3 class="fs-5 fw-semibold mb-1">
                      <a href="/products/<%= product._id %>" class="text-dark text-decoration-none"><%= product.model %></a>
                    </h3>
                    <p class="text-muted small mb-2"><%= product.brand %></p>
                    <div class="d-flex justify-content-between align-items-center">
                      <div class="shop-product-price">
                        <% if (product.discountPercentage > 0) { %>
                          <div class="d-flex align-items-center gap-1 flex-wrap">
                            <span class="original-price">₹<%= product.regularPrice.toFixed(2) %></span>
                            <span class="current-price">₹<%= product.finalPrice.toFixed(2) %></span>
                          </div>
                          <% if (product.bestOfferTitle) { %>
                            <small class="d-block text-success mt-1"><%= product.bestOfferTitle %></small>
                          <% } %>
                        <% } else { %>
                          <span class="current-price">₹<%= product.finalPrice.toFixed(2) %></span>
                        <% } %>
                      </div>
                      <div class="d-flex gap-2 align-items-center">
                        <button class="btn-wishlist-shop" data-product-id="<%= product._id %>">
                          <i class="ri-heart-line"></i>
                        </button>
                        <button class="add-to-cart border-0" data-product-id="<%= product._id %>" <%= product.stock === 0 ? 'disabled' : '' %>>
                          <i class="ri-shopping-cart-line"></i>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="col-12 text-center">
              <p class="text-muted">No products available at the moment.</p>
            </div>
          <% } %>
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-5">
          <nav aria-label="Page navigation">
            <ul class="pagination">
              <li class="page-item <%= pagination.hasPrevPage ? '' : 'disabled' %>">
                <a class="page-link" href="<%= pagination.hasPrevPage ? `?page=${pagination.prevPage}${queryString}` : '#' %>" aria-label="Previous">
                  <span aria-hidden="true">«</span>
                </a>
              </li>

              <% if (pagination.currentPage > 3 && pagination.totalPages > 5) { %>
                <li class="page-item">
                  <a class="page-link" href="?page=1<%= queryString %>">1</a>
                </li>
                <% if (pagination.currentPage > 4) { %>
                  <li class="page-item disabled">
                    <a class="page-link" href="#">...</a>
                  </li>
                <% } %>
              <% } %>

              <% pagination.pages.forEach(page => { %>
                <li class="page-item <%= page === pagination.currentPage ? 'active' : '' %>">
                  <a class="page-link" href="?page=<%= page %><%= queryString %>"><%= page %></a>
                </li>
              <% }) %>

              <% if (pagination.currentPage < pagination.totalPages - 2 && pagination.totalPages > 5) { %>
                <% if (pagination.currentPage < pagination.totalPages - 3) { %>
                  <li class="page-item disabled">
                    <a class="page-link" href="#">...</a>
                  </li>
                <% } %>
                <li class="page-item">
                  <a class="page-link" href="?page=<%= pagination.totalPages %><%= queryString %>"><%= pagination.totalPages %></a>
                </li>
              <% } %>

              <li class="page-item <%= pagination.hasNextPage ? '' : 'disabled' %>">
                <a class="page-link" href="<%= pagination.hasNextPage ? `?page=${pagination.nextPage}${queryString}` : '#' %>" aria-label="Next">
                  <span aria-hidden="true">»</span>
                </a>
              </li>
            </ul>
          </nav>
        </div>

        <!-- Product Count Information -->
        <div class="text-center text-muted mt-2">
          <% const startItem = (pagination.currentPage - 1) * 12 + 1; %>
          <% const endItem = Math.min(pagination.currentPage * 12, totalProducts); %>
          Showing <%= startItem %> to <%= endItem %> of <%= totalProducts %> products
        </div>
      </div>
    </div>
  </div>
</section>

<%- include("../partials/user/footer") %>

<style>
  /* ===== ENHANCED FILTER & SORT STYLING ===== */
  
  /* Filter Container */
  .filters-container {
    position: sticky;
    top: 90px;
    margin-bottom: 2rem;
  }

  .filter-card {
    background: #ffffff;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid rgba(0, 0, 0, 0.06);
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .filter-card:hover {
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  }

  /* Filter Header */
  .filter-header {
    background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
    color: white;
    padding: 1.25rem 1.5rem;
    display: flex;
    justify-content: between;
    align-items: center;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .filter-title {
    font-size: 1.1rem;
    font-weight: 600;
    margin: 0;
    display: flex;
    align-items: center;
    letter-spacing: -0.02em;
  }

  .filter-toggle {
    background: none;
    border: none;
    color: white;
    font-size: 1.2rem;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 4px;
    transition: all 0.2s ease;
  }

  .filter-toggle:hover {
    background: rgba(255, 255, 255, 0.1);
  }

  /* Filter Content */
  .filter-content {
    padding: 1.5rem;
  }

  /* Filter Sections */
  .filter-section {
    margin-bottom: 2rem;
  }

  .filter-section:last-child {
    margin-bottom: 0;
  }

  .filter-section-title {
    font-size: 0.95rem;
    font-weight: 600;
    color: #2d2d2d;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    letter-spacing: -0.01em;
  }

  /* Filter Dropdown Styles */
  .filter-dropdown-container {
    position: relative;
  }

  .filter-dropdown {
    width: 100%;
    appearance: none;
    background: #f8fafc;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    padding: 0.75rem 2.5rem 0.75rem 1rem;
    font-size: 0.9rem;
    font-weight: 500;
    color: #2d2d2d;
    cursor: pointer;
    transition: all 0.2s ease;
    min-height: 45px;
  }

  .filter-dropdown:focus {
    outline: none;
    border-color: #1a1a1a;
    box-shadow: 0 0 0 3px rgba(26, 26, 26, 0.1);
  }

  .filter-dropdown:hover {
    border-color: #cbd5e0;
  }

  .dropdown-arrow {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6b7280;
    pointer-events: none;
    font-size: 1.1rem;
    transition: transform 0.2s ease;
  }

  .filter-dropdown:focus + .dropdown-arrow {
    transform: translateY(-50%) rotate(180deg);
  }

  /* Multi-select dropdown styling */
  .filter-dropdown option {
    padding: 0.5rem;
    font-size: 0.9rem;
    color: #2d2d2d;
  }

  .filter-dropdown option:checked {
    background: #1a1a1a;
    color: white;
  }

  /* Price Filter */
  .price-filter {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }

  /* Price Inputs */
  .price-inputs {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .price-input-group {
    flex: 1;
    position: relative;
    display: flex;
    align-items: center;
    background: #f8fafc;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.2s ease;
  }

  .price-input-group:focus-within {
    border-color: #1a1a1a;
    box-shadow: 0 0 0 3px rgba(26, 26, 26, 0.1);
  }

  .price-currency {
    background: #e2e8f0;
    color: #4a5568;
    padding: 0.75rem;
    font-weight: 600;
    font-size: 0.9rem;
  }

  .price-input {
    border: none;
    background: transparent;
    padding: 0.75rem;
    font-size: 0.9rem;
    color: #2d2d2d;
    font-weight: 500;
    width: 100%;
    outline: none;
  }

  .price-input::placeholder {
    color: #9ca3af;
  }

  .price-separator {
    color: #6b7280;
    font-weight: 600;
    font-size: 0.9rem;
  }

  /* Filter Actions */
  .filter-actions {
    display: flex;
    gap: 0.75rem;
    margin-top: 1.5rem;
    padding-top: 1.5rem;
    border-top: 1px solid #f1f5f9;
  }

  .btn-apply {
    flex: 1;
    background: linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
    color: white;
    border: none;
    padding: 0.875rem 1.25rem;
    border-radius: 8px;
    font-weight: 600;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .btn-apply:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(26, 26, 26, 0.3);
  }

  .btn-reset {
    flex: 1;
    background: white;
    color: #6b7280;
    border: 1px solid #e2e8f0;
    padding: 0.875rem 1.25rem;
    border-radius: 8px;
    font-weight: 600;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .btn-reset:hover {
    background: #f8fafc;
    border-color: #cbd5e0;
    color: #4a5568;
  }

  /* Shop Controls */
  .shop-controls {
    background: white;
    border-radius: 12px;
    padding: 1.25rem 1.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.06);
    border: 1px solid rgba(0, 0, 0, 0.04);
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
  }

  /* Sort Section */
  .sort-section {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .sort-label {
    font-size: 0.95rem;
    font-weight: 600;
    color: #4a5568;
    display: flex;
    align-items: center;
    white-space: nowrap;
  }

  .sort-dropdown {
    position: relative;
  }

  .custom-select {
    appearance: none;
    background: #f8fafc;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    padding: 0.75rem 2.5rem 0.75rem 1rem;
    font-size: 0.9rem;
    font-weight: 500;
    color: #2d2d2d;
    cursor: pointer;
    transition: all 0.2s ease;
    min-width: 200px;
  }

  .custom-select:focus {
    outline: none;
    border-color: #1a1a1a;
    box-shadow: 0 0 0 3px rgba(26, 26, 26, 0.1);
  }

  .sort-arrow {
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6b7280;
    pointer-events: none;
    font-size: 1.1rem;
  }

  /* View Section */
  .view-section {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .view-label {
    font-size: 0.95rem;
    font-weight: 600;
    color: #4a5568;
    display: flex;
    align-items: center;
    white-space: nowrap;
  }

  .view-options {
    display: flex;
    background: #f8fafc;
    border-radius: 8px;
    padding: 0.25rem;
    border: 1px solid #e2e8f0;
  }

  .view-btn {
    background: transparent;
    border: none;
    padding: 0.5rem 0.75rem;
    border-radius: 6px;
    color: #6b7280;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
  }

  .view-btn:hover {
    color: #4a5568;
    background: rgba(26, 26, 26, 0.05);
  }

  .view-btn.active {
    background: #1a1a1a;
    color: white;
    box-shadow: 0 2px 4px rgba(26, 26, 26, 0.1);
  }

  /* Mobile Responsive */
  @media (max-width: 991.98px) {
    .filters-container {
      position: relative;
      top: 0;
      margin-bottom: 1.5rem;
    }

    .filter-content {
      display: none;
    }

    .filter-content.show {
      display: block;
    }

    .shop-controls {
      flex-direction: column;
      align-items: stretch;
      gap: 1.5rem;
    }

    .sort-section,
    .view-section {
      justify-content: space-between;
    }

    .custom-select {
      min-width: auto;
      flex: 1;
    }
  }

  @media (max-width: 576px) {
    .filter-header {
      padding: 1rem 1.25rem;
    }

    .filter-content {
      padding: 1.25rem;
    }

    .filter-actions {
      flex-direction: column;
    }

    .shop-controls {
      padding: 1rem;
    }

    .sort-section,
    .view-section {
      flex-direction: column;
      align-items: stretch;
      gap: 0.75rem;
    }

    .view-section {
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
    }

    .price-inputs {
      flex-direction: column;
      gap: 0.5rem;
    }

    .price-separator {
      display: none;
    }
  }

  /* Product styles */
  .product-actions {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.9);
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.5rem;
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.3s ease;
  }

  .product-card:hover .product-actions {
    opacity: 1;
    transform: translateY(0);
  }

  .action-btn {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    border: none;
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
  }

  .action-btn:hover {
    background-color: #000;
    color: #fff;
  }

  .page-link {
    color: #000;
    border-radius: 0.25rem;
    margin: 0 0.2rem;
  }

  .page-item.active .page-link {
    background-color: #000;
    border-color: #000;
  }

  .filters-container {
    position: sticky;
    top: 90px;
  }

  @media (max-width: 991.98px) {
    .filters-container {
      position: relative;
      top: 0;
    }
  }

  .add-to-cart {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    background-color: #000;
    color: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .add-to-cart:hover {
    background-color: #333;
  }

  .btn-wishlist-shop {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    background-color: #fff;
    color: #000;
    border: 2px solid #000;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .btn-wishlist-shop:hover {
    background-color: #000;
    color: #fff;
  }

  .btn-wishlist-shop.wishlisted {
    background-color: #dc3545;
    border-color: #dc3545;
    color: #fff;
  }

  .btn-wishlist-shop.wishlisted:hover {
    background-color: #c82333;
    border-color: #c82333;
  }

  @media (max-width: 767.98px) {
    .product-actions {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .product-image-container {
    position: relative;
    overflow: hidden;
  }

  .product-image {
    width: 100%;
    height: auto;
    aspect-ratio: 1/1.2;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .product-card:hover .product-image {
    transform: scale(1.05);
  }

  .product-tag {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: #000;
    color: #fff;
    padding: 0.25rem 0.75rem;
    font-size: 0.75rem;
    font-weight: 600;
    border-radius: 2px;
    z-index: 1;
  }
</style>

<script>
  // Filter functions for server-side filtering and pagination
  function applyFilters() {
    const url = new URL(window.location.href);
    const params = url.searchParams;

    params.set('page', '1');

    // Handle category filters from dropdown
    const categorySelect = document.getElementById('categorySelect');
    const selectedCategories = Array.from(categorySelect.selectedOptions)
      .map(option => option.value)
      .filter(value => value !== '');

    params.delete('category');

    if (selectedCategories.length > 0) {
      selectedCategories.forEach(cat => params.append('category', cat));
    }

    // Handle brand filters from dropdown
    const brandSelect = document.getElementById('brandSelect');
    const selectedBrands = Array.from(brandSelect.selectedOptions)
      .map(option => option.value)
      .filter(value => value !== '');

    params.delete('brand');

    if (selectedBrands.length > 0) {
      selectedBrands.forEach(brand => params.append('brand', brand));
    }

    const minPrice = parseInt(document.getElementById('minPriceInput').value) || 0;
    const maxPrice = parseInt(document.getElementById('maxPriceInput').value) || 50000;
    params.set('minPrice', minPrice);
    params.set('maxPrice', maxPrice);

    const sortValue = document.getElementById('sortSelect').value;
    params.set('sort', sortValue);

    window.location.href = url.toString();
  }

  function sortProducts() {
    const sortValue = document.getElementById('sortSelect').value;

    const url = new URL(window.location.href);
    url.searchParams.set('sort', sortValue);

    window.location.href = url.toString();
  }

  // Reset all filters function
  function resetFilters() {
    // Reset category dropdown
    const categorySelect = document.getElementById('categorySelect');
    categorySelect.selectedIndex = 0; // Select "All Categories"
    
    // Reset brand dropdown
    const brandSelect = document.getElementById('brandSelect');
    brandSelect.selectedIndex = 0; // Select "All Brands"

    // Reset price range
    document.getElementById('minPriceInput').value = 0;
    document.getElementById('maxPriceInput').value = 50000;

    // Reset sort to recommended
    document.getElementById('sortSelect').value = 'recommended';

    // Redirect to shop page without any filters
    window.location.href = '/shopPage';
  }

  // Toggle filters on mobile
  function toggleFilters() {
    const filterContent = document.getElementById('filterContent');
    const filterToggle = document.querySelector('.filter-toggle i');
    
    if (filterContent.classList.contains('show')) {
      filterContent.classList.remove('show');
      filterToggle.className = 'ri-arrow-down-s-line';
    } else {
      filterContent.classList.add('show');
      filterToggle.className = 'ri-arrow-up-s-line';
    }
  }

  // Initialize filters from URL parameters
  document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    
    // Set category selections
    const categoryParams = urlParams.getAll('category');
    const categorySelect = document.getElementById('categorySelect');
    
    if (categoryParams.length > 0) {
      // Clear default selection
      categorySelect.selectedIndex = -1;
      
      // Select the categories from URL
      Array.from(categorySelect.options).forEach(option => {
        if (categoryParams.includes(option.value)) {
          option.selected = true;
        }
      });
    }

    // Set brand selections
    const brandParams = urlParams.getAll('brand');
    const brandSelect = document.getElementById('brandSelect');
    
    if (brandParams.length > 0) {
      // Clear default selection
      brandSelect.selectedIndex = -1;
      
      // Select the brands from URL
      Array.from(brandSelect.options).forEach(option => {
        if (brandParams.includes(option.value)) {
          option.selected = true;
        }
      });
    }

    // Set price values
    const minPrice = urlParams.get('minPrice');
    const maxPrice = urlParams.get('maxPrice');

    if (minPrice) {
      document.getElementById('minPriceInput').value = minPrice;
    }

    if (maxPrice) {
      document.getElementById('maxPriceInput').value = maxPrice;
    }

    const sortValue = urlParams.get('sort');
    if (sortValue) {
      document.getElementById('sortSelect').value = sortValue;
    }

    // Cart and Wishlist functionality
    const cartCountElement = document.querySelector('.cart-count');
    const wishlistCountElement = document.querySelector('.wishlist-count');

    // Add to cart functionality
    document.querySelectorAll('.add-to-cart').forEach(button => {
      button.addEventListener('click', async function() {
        const productId = this.dataset.productId;

        try {
          const response = await fetch('/api/cart/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, quantity: 1 })
          });
          const result = await response.json();

          if (response.status === 401 || !result.success) {
            console.log('Shop cart authentication error - redirecting to login');
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: result.message || 'Please log in to add items to your cart',
              showConfirmButton: false,
              timer: 2000
            }).then(() => {
              window.location.href = '/login';
            });
          } else if (result.success) {
            if (cartCountElement) {
              cartCountElement.textContent = result.cartCount;
              cartCountElement.dataset.count = result.cartCount;
            }

            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: result.message,
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            if (result.message === 'Please log in to add items to your cart' || result.requiresAuth) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 2000
              }).then(() => {
                window.location.href = '/login';
              });
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 1500
              });
            }
          }
        } catch (error) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: 'Error adding to cart',
            showConfirmButton: false,
            timer: 1500
          });
        }
      });
    });

    // Wishlist functionality
    document.querySelectorAll('.btn-wishlist-shop').forEach(button => {
      button.addEventListener('click', async function() {
        const productId = this.dataset.productId;

        try {
          const response = await fetch('/api/wishlist/toggle', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId })
          });
          const result = await response.json();

          if (response.status === 401 || !result.success) {
            console.log('Shop wishlist authentication error - redirecting to login');
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: result.message || 'Please log in to manage your wishlist',
              showConfirmButton: false,
              timer: 2000
            }).then(() => {
              window.location.href = '/login';
            });
          } else if (result.success) {
            const icon = this.querySelector('i');
            if (result.isWishlisted) {
              icon.className = 'ri-heart-fill';
              this.classList.add('wishlisted');
            } else {
              icon.className = 'ri-heart-line';
              this.classList.remove('wishlisted');
            }

            if (wishlistCountElement) {
              wishlistCountElement.textContent = result.wishlistCount;
              wishlistCountElement.dataset.count = result.wishlistCount;
            }

            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: result.message,
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            if (result.message === 'Please log in to manage your wishlist' || result.requiresAuth) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 2000
              }).then(() => {
                window.location.href = '/login';
              });
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 1500
              });
            }
          }
        } catch (error) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: 'Error managing wishlist',
            showConfirmButton: false,
            timer: 1500
          });
        }
      });
    });
  });
</script>