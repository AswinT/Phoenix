<%- include("../partials/user/header") %>

<!-- Include Modern Product Card Styles -->
<link rel="stylesheet" href="/styles/user/modern-product-card.css">

<!-- Shop Banner Section -->
<section class="shop-banner-section">
  <div class="audio-visualizer-shop">
    <div class="frequency-bar-shop" style="--delay: 0s; --height: 15px;"></div>
    <div class="frequency-bar-shop" style="--delay: 0.2s; --height: 25px;"></div>
    <div class="frequency-bar-shop" style="--delay: 0.4s; --height: 20px;"></div>
    <div class="frequency-bar-shop" style="--delay: 0.6s; --height: 30px;"></div>
    <div class="frequency-bar-shop" style="--delay: 0.8s; --height: 18px;"></div>
  </div>
  <div class="container">
    <div class="row align-items-center justify-content-center text-center">
      <div class="col-lg-8">
        <div class="shop-banner-content">
          <h1 class="shop-banner-title">Discover Premium Headphones</h1>
          <p class="shop-banner-subtitle">Immerse yourself in superior sound quality with our curated collection</p>
          <nav aria-label="breadcrumb" class="shop-breadcrumb">
            <ol class="breadcrumb justify-content-center mb-0">
              <li class="breadcrumb-item"><a href="/" class="text-decoration-none">Home</a></li>
              <li class="breadcrumb-item active" aria-current="page">Shop</li>
            </ol>
          </nav>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Shop Content -->
<section class="shop-content-section">
  <div class="container">
    <div class="row g-4">
      <!-- Filters Sidebar -->
      <div class="col-lg-3">
        <div class="filters-container">
          <div class="filter-card floating-card">
            <div class="filter-header">
              <h3 class="filter-title">
                <i class="ri-equalizer-line me-2"></i>Filters
              </h3>
              <button class="filter-toggle d-lg-none" onclick="toggleFilters()">
                <i class="ri-arrow-down-s-line"></i>
              </button>
            </div>

            <div class="filter-content" id="filterContent">
              <!-- Category Filter -->
              <div class="filter-section">
                <h4 class="filter-section-title">
                  <i class="ri-folder-music-line me-2"></i>Categories
                </h4>
                <div class="filter-dropdown-container">
                  <select class="filter-dropdown" id="categorySelect" multiple>
                    <option value="">All Categories</option>
                    <% if (categories && categories.length > 0) { %>
                      <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"><%= category.name %></option>
                      <% }) %>
                    <% } %>
                  </select>
                  <i class="ri-arrow-down-s-line dropdown-arrow"></i>
                </div>
              </div>

              <!-- Brand Filter -->
              <div class="filter-section">
                <h4 class="filter-section-title">
                  <i class="ri-headphone-line me-2"></i>Brands
                </h4>
                <div class="filter-dropdown-container">
                  <select class="filter-dropdown" id="brandSelect" multiple>
                    <option value="">All Brands</option>
                    <% if (brands && brands.length > 0) { %>
                      <% brands.forEach(brand => { %>
                        <option value="<%= brand %>"><%= brand %></option>
                      <% }) %>
                    <% } %>
                  </select>
                  <i class="ri-arrow-down-s-line dropdown-arrow"></i>
                </div>
              </div>

              <!-- Price Range Filter -->
              <div class="filter-section">
                <h4 class="filter-section-title">
                  <i class="ri-money-rupee-circle-line me-2"></i>Price Range
                </h4>
                <div class="price-filter">
                  <div class="price-inputs">
                    <div class="price-input-group">
                      <span class="price-currency">₹</span>
                      <input type="number" class="price-input" id="minPriceInput" placeholder="Min" min="0" max="50000" value="0">
                    </div>
                    <div class="price-separator">-</div>
                    <div class="price-input-group">
                      <span class="price-currency">₹</span>
                      <input type="number" class="price-input" id="maxPriceInput" placeholder="Max" min="0" max="50000" value="50000">
                    </div>
                  </div>
                </div>
              </div>

              <!-- Filter Actions -->
              <div class="filter-actions">
                <button class="btn-apply-filters" onclick="applyFilters()">
                  <i class="ri-check-line me-2"></i>Apply Filters
                </button>
                <button class="btn-reset-filters" onclick="resetFilters()">
                  <i class="ri-refresh-line me-2"></i>Reset
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Products Grid -->
      <div class="col-lg-9">
        <!-- Sort and View Options -->
        <div class="shop-controls floating-card">
          <div class="sort-section">
            <div class="sort-label">
              <i class="ri-sound-module-line me-2"></i>Sort by:
            </div>
            <div class="sort-dropdown">
              <select class="custom-select" id="sortSelect" onchange="sortProducts()">
                <option value="recommended" <%= sortOption === 'recommended' ? 'selected' : '' %>>Recommended</option>
                <option value="price-asc" <%= sortOption === 'price-asc' ? 'selected' : '' %>>Price: Low to High</option>
                <option value="price-desc" <%= sortOption === 'price-desc' ? 'selected' : '' %>>Price: High to Low</option>
                <option value="date-desc" <%= sortOption === 'date-desc' ? 'selected' : '' %>>New Arrivals</option>
                <option value="stock-desc" <%= sortOption === 'stock-desc' ? 'selected' : '' %>>Best Selling</option>
                <option value="name-asc" <%= sortOption === 'name-asc' ? 'selected' : '' %>>Name: A to Z</option>
                <option value="name-desc" <%= sortOption === 'name-desc' ? 'selected' : '' %>>Name: Z to A</option>
              </select>
              <i class="ri-arrow-down-s-line sort-arrow"></i>
            </div>
          </div>
          <div class="view-section">
            <div class="view-label d-none d-sm-block">
              <i class="ri-layout-grid-line me-2"></i>View:
            </div>
            <div class="view-options">
              <button type="button" class="view-btn active" data-view="grid">
                <i class="ri-grid-line"></i>
              </button>
              <button type="button" class="view-btn" data-view="list">
                <i class="ri-list-check"></i>
              </button>
            </div>
          </div>
        </div>

        <!-- Products -->
        <div class="modern-products-grid shop-layout" id="productGrid">
          <% if (products && products.length > 0) { %>
            <% products.forEach(product => { %>
              <%
                const now = new Date();
                const createdAt = new Date(product.createdAt);
                const diffDays = (now - createdAt) / (1000 * 60 * 60 * 24);
                const isNew = diffDays <= 30;
                const stockStatus = product.stock > 10 ? 'in-stock' : product.stock > 0 ? 'low-stock' : 'out-of-stock';
                const stockText = product.stock > 10 ? 'In Stock' : product.stock > 0 ? `Only ${product.stock} left` : 'Out of Stock';
              %>
              <div class="product-item"
                   data-category="<%= product.category._id %>"
                   data-price="<%= product.finalPrice %>"
                   data-date="<%= new Date(product.createdAt).getTime() %>"
                   data-stock="<%= product.stock %>">
                <div class="modern-product-card">
                  <!-- Product Image Section -->
                  <div class="modern-product-image-section">
                    <!-- Product Badges -->
                    <div class="modern-product-badges">
                      <% if (isNew) { %>
                      <span class="modern-product-badge modern-badge-new">New</span>
                      <% } %>
                      <% if (product.discountPercentage > 0) { %>
                      <span class="modern-product-badge modern-badge-offer">
                        <%= Math.round(product.discountPercentage) %>% OFF
                      </span>
                      <% } %>
                    </div>

                    <!-- Wishlist Button -->
                    <button class="modern-wishlist-btn btn-wishlist-shop" data-product-id="<%= product._id %>">
                      <i class="ri-heart-line"></i>
                    </button>

                    <!-- Product Image -->
                    <a href="/products/<%= product._id %>">
                      <img
                        src="<%= product.mainImage || '/api/placeholder/500/600' %>"
                        alt="<%= product.model %>"
                        class="modern-product-image"
                      />
                    </a>

                    <!-- Quick View Overlay -->
                    <div class="modern-quick-view-overlay">
                      <button class="modern-quick-view-btn" onclick="window.location.href='/products/<%= product._id %>'">
                        Quick View
                      </button>
                    </div>
                  </div>

                  <!-- Product Info Section -->
                  <div class="modern-product-info">
                    <!-- Brand -->
                    <div class="modern-product-brand"><%= product.brand %></div>

                    <!-- Title -->
                    <h3 class="modern-product-title">
                      <a href="/products/<%= product._id %>"><%= product.model %></a>
                    </h3>

                    <!-- Rating (placeholder for future implementation) -->
                    <div class="modern-product-rating">
                      <div class="modern-rating-stars">
                        <i class="ri-star-fill modern-rating-star"></i>
                        <i class="ri-star-fill modern-rating-star"></i>
                        <i class="ri-star-fill modern-rating-star"></i>
                        <i class="ri-star-fill modern-rating-star"></i>
                        <i class="ri-star-line modern-rating-star empty"></i>
                      </div>
                      <span class="modern-rating-count">(4.2)</span>
                    </div>

                    <!-- Price -->
                    <div class="modern-product-price">
                      <% if (product.discountPercentage > 0) { %>
                      <div class="modern-price-group">
                        <span class="modern-current-price">₹<%= product.finalPrice.toFixed(2) %></span>
                        <span class="modern-original-price">₹<%= product.regularPrice.toFixed(2) %></span>
                        <span class="modern-discount-badge">Save ₹<%= (product.regularPrice - product.finalPrice).toFixed(0) %></span>
                      </div>
                      <% if (product.bestOfferTitle) { %>
                      <p class="modern-offer-text"><%= product.bestOfferTitle %></p>
                      <% } %>
                      <% } else { %>
                      <div class="modern-price-group">
                        <span class="modern-current-price">₹<%= product.finalPrice.toFixed(2) %></span>
                      </div>
                      <% } %>
                    </div>

                    <!-- Stock Status -->
                    <div class="modern-stock-status">
                      <span class="modern-stock-indicator modern-stock-<%= stockStatus %>">
                        <%= stockText %>
                      </span>
                    </div>

                    <!-- Action Buttons -->
                    <div class="modern-product-actions">
                      <button 
                        class="modern-add-to-cart-btn add-to-cart" 
                        data-product-id="<%= product._id %>"
                        <%= product.stock === 0 ? 'disabled' : '' %>
                      >
                        <i class="ri-shopping-cart-line"></i>
                        <span><%= product.stock === 0 ? 'Out of Stock' : 'Add to Cart' %></span>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="empty-state">
              <i class="ri-headphone-line"></i>
              <p>No products available at the moment.</p>
            </div>
          <% } %>
        </div>

        <!-- Pagination -->
        <div class="pagination-container">
          <nav aria-label="Page navigation">
            <ul class="pagination">
              <li class="page-item <%= pagination.hasPrevPage ? '' : 'disabled' %>">
                <a class="page-link" href="<%= pagination.hasPrevPage ? `?page=${pagination.prevPage}${queryString}` : '#' %>" aria-label="Previous">
                  <span aria-hidden="true">«</span>
                </a>
              </li>

              <% if (pagination.currentPage > 3 && pagination.totalPages > 5) { %>
                <li class="page-item">
                  <a class="page-link" href="?page=1<%= queryString %>">1</a>
                </li>
                <% if (pagination.currentPage > 4) { %>
                  <li class="page-item disabled">
                    <a class="page-link" href="#">...</a>
                  </li>
                <% } %>
              <% } %>

              <% pagination.pages.forEach(page => { %>
                <li class="page-item <%= page === pagination.currentPage ? 'active' : '' %>">
                  <a class="page-link" href="?page=<%= page %><%= queryString %>"><%= page %></a>
                </li>
              <% }) %>

              <% if (pagination.currentPage < pagination.totalPages - 2 && pagination.totalPages > 5) { %>
                <% if (pagination.currentPage < pagination.totalPages - 3) { %>
                  <li class="page-item disabled">
                    <a class="page-link" href="#">...</a>
                  </li>
                <% } %>
                <li class="page-item">
                  <a class="page-link" href="?page=<%= pagination.totalPages %><%= queryString %>"><%= pagination.totalPages %></a>
                </li>
              <% } %>

              <li class="page-item <%= pagination.hasNextPage ? '' : 'disabled' %>">
                <a class="page-link" href="<%= pagination.hasNextPage ? `?page=${pagination.nextPage}${queryString}` : '#' %>" aria-label="Next">
                  <span aria-hidden="true">»</span>
                </a>
              </li>
            </ul>
          </nav>

          <!-- Product Count Information -->
          <div class="product-count-info">
            <% const startItem = (pagination.currentPage - 1) * 12 + 1; %>
            <% const endItem = Math.min(pagination.currentPage * 12, totalProducts); %>
            Showing <%= startItem %> to <%= endItem %> of <%= totalProducts %> products
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<%- include("../partials/user/footer") %>

<script>
  // Filter functions for server-side filtering and pagination
  function applyFilters() {
    const url = new URL(window.location.href);
    const params = url.searchParams;

    params.set('page', '1');

    // Handle category filters from dropdown
    const categorySelect = document.getElementById('categorySelect');
    const selectedCategories = Array.from(categorySelect.selectedOptions)
      .map(option => option.value)
      .filter(value => value !== '');

    params.delete('category');

    if (selectedCategories.length > 0) {
      selectedCategories.forEach(cat => params.append('category', cat));
    }

    // Handle brand filters from dropdown
    const brandSelect = document.getElementById('brandSelect');
    const selectedBrands = Array.from(brandSelect.selectedOptions)
      .map(option => option.value)
      .filter(value => value !== '');

    params.delete('brand');

    if (selectedBrands.length > 0) {
      selectedBrands.forEach(brand => params.append('brand', brand));
    }

    const minPrice = parseInt(document.getElementById('minPriceInput').value) || 0;
    const maxPrice = parseInt(document.getElementById('maxPriceInput').value) || 50000;
    params.set('minPrice', minPrice);
    params.set('maxPrice', maxPrice);

    const sortValue = document.getElementById('sortSelect').value;
    params.set('sort', sortValue);

    window.location.href = url.toString();
  }

  function sortProducts() {
    const sortValue = document.getElementById('sortSelect').value;

    const url = new URL(window.location.href);
    url.searchParams.set('sort', sortValue);

    window.location.href = url.toString();
  }

  // Reset all filters function
  function resetFilters() {
    // Reset category dropdown
    const categorySelect = document.getElementById('categorySelect');
    categorySelect.selectedIndex = 0;
    
    // Reset brand dropdown
    const brandSelect = document.getElementById('brandSelect');
    brandSelect.selectedIndex = 0;

    // Reset price range
    document.getElementById('minPriceInput').value = 0;
    document.getElementById('maxPriceInput').value = 50000;

    // Reset sort to recommended
    document.getElementById('sortSelect').value = 'recommended';

    // Redirect to shop page without any filters
    window.location.href = '/shopPage';
  }

  // Toggle filters on mobile
  function toggleFilters() {
    const filterContent = document.getElementById('filterContent');
    const filterToggle = document.querySelector('.filter-toggle i');
    
    if (filterContent.classList.contains('show')) {
      filterContent.classList.remove('show');
      filterToggle.className = 'ri-arrow-down-s-line';
    } else {
      filterContent.classList.add('show');
      filterToggle.className = 'ri-arrow-up-s-line';
    }
  }

  // Initialize filters from URL parameters
  document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    
    // Set category selections
    const categoryParams = urlParams.getAll('category');
    const categorySelect = document.getElementById('categorySelect');
    
    if (categoryParams.length > 0) {
      categorySelect.selectedIndex = -1;
      
      Array.from(categorySelect.options).forEach(option => {
        if (categoryParams.includes(option.value)) {
          option.selected = true;
        }
      });
    }

    // Set brand selections
    const brandParams = urlParams.getAll('brand');
    const brandSelect = document.getElementById('brandSelect');
    
    if (brandParams.length > 0) {
      brandSelect.selectedIndex = -1;
      
      Array.from(brandSelect.options).forEach(option => {
        if (brandParams.includes(option.value)) {
          option.selected = true;
        }
      });
    }

    // Set price values
    const minPrice = urlParams.get('minPrice');
    const maxPrice = urlParams.get('maxPrice');

    if (minPrice) {
      document.getElementById('minPriceInput').value = minPrice;
    }

    if (maxPrice) {
      document.getElementById('maxPriceInput').value = maxPrice;
    }

    const sortValue = urlParams.get('sort');
    if (sortValue) {
      document.getElementById('sortSelect').value = sortValue;
    }

    // Cart and Wishlist functionality
    const cartCountElement = document.querySelector('.cart-count');
    const wishlistCountElement = document.querySelector('.wishlist-count');

    // Add to cart functionality
    document.querySelectorAll('.add-to-cart').forEach(button => {
      button.addEventListener('click', async function() {
        const productId = this.dataset.productId;

        try {
          const response = await fetch('/api/cart/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId, quantity: 1 })
          });
          const result = await response.json();

          if (response.status === 401 || !result.success) {
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: result.message || 'Please log in to add items to your cart',
              showConfirmButton: false,
              timer: 2000
            }).then(() => {
              window.location.href = '/login';
            });
          } else if (result.success) {
            if (cartCountElement) {
              cartCountElement.textContent = result.cartCount;
              cartCountElement.dataset.count = result.cartCount;
            }

            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: result.message,
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            if (result.message === 'Please log in to add items to your cart' || result.requiresAuth) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 2000
              }).then(() => {
                window.location.href = '/login';
              });
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 1500
              });
            }
          }
        } catch (error) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: 'Error adding to cart',
            showConfirmButton: false,
            timer: 1500
          });
        }
      });
    });

    // Wishlist functionality
    document.querySelectorAll('.btn-wishlist-shop').forEach(button => {
      button.addEventListener('click', async function() {
        const productId = this.dataset.productId;

        try {
          const response = await fetch('/api/wishlist/toggle', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ productId })
          });
          const result = await response.json();

          if (response.status === 401 || !result.success) {
            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'error',
              title: result.message || 'Please log in to manage your wishlist',
              showConfirmButton: false,
              timer: 2000
            }).then(() => {
              window.location.href = '/login';
            });
          } else if (result.success) {
            const icon = this.querySelector('i');
            if (result.isWishlisted) {
              icon.className = 'ri-heart-fill';
              this.classList.add('wishlisted');
            } else {
              icon.className = 'ri-heart-line';
              this.classList.remove('wishlisted');
            }

            if (wishlistCountElement) {
              wishlistCountElement.textContent = result.wishlistCount;
              wishlistCountElement.dataset.count = result.wishlistCount;
            }

            Swal.fire({
              toast: true,
              position: 'top-end',
              icon: 'success',
              title: result.message,
              showConfirmButton: false,
              timer: 1500
            });
          } else {
            if (result.message === 'Please log in to manage your wishlist' || result.requiresAuth) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 2000
              }).then(() => {
                window.location.href = '/login';
              });
            } else {
              Swal.fire({
                toast: true,
                position: 'top-end',
                icon: 'error',
                title: result.message,
                showConfirmButton: false,
                timer: 1500
              });
            }
          }
        } catch (error) {
          Swal.fire({
            toast: true,
            position: 'top-end',
            icon: 'error',
            title: 'Error managing wishlist',
            showConfirmButton: false,
            timer: 1500
          });
        }
      });
    });
  });
</script>
