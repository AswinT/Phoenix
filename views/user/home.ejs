<%- include("../partials/user/header") %>

<!-- Include Modern Product Card Styles -->
<link rel="stylesheet" href="/styles/user/modern-product-card.css">

<!-- Hero Section without Color Mask -->
<section class="hero-section">
  <div class="audio-visualizer">
    <div class="frequency-bar" style="--delay: 0s; --height: 20px"></div>
    <div class="frequency-bar" style="--delay: 0.1s; --height: 35px"></div>
    <div class="frequency-bar" style="--delay: 0.2s; --height: 25px"></div>
    <div class="frequency-bar" style="--delay: 0.3s; --height: 40px"></div>
    <div class="frequency-bar" style="--delay: 0.4s; --height: 15px"></div>
    <div class="frequency-bar" style="--delay: 0.5s; --height: 30px"></div>
    <div class="frequency-bar" style="--delay: 0.6s; --height: 45px"></div>
    <div class="frequency-bar" style="--delay: 0.7s; --height: 25px"></div>
    <div class="frequency-bar" style="--delay: 0.8s; --height: 35px"></div>
    <div class="frequency-bar" style="--delay: 0.9s; --height: 20px"></div>
  </div>
  <div class="container">
    <div class="hero-content">
      <div class="hero-badge">PREMIUM AUDIO EXPERIENCE</div>
      <h1 class="hero-title">Discover Sound That Moves You</h1>
      <p class="hero-subtitle">
        Experience crystal-clear audio with our curated collection of premium
        headphones
      </p>
      <div class="hero-buttons">
        <a href="/shopPage" class="btn-premium">
          <span class="btn-text">Explore Collections</span>
          <div class="btn-bg"></div>
        </a>
      </div>
    </div>
  </div>
</section>

<!-- Featured Categories (All in One Line) -->
<section class="categories-section">
  <div class="container">
    <div class="section-header">
      <div class="section-title-group">
        <h2 class="section-title">Browse Categories</h2>
        <div class="title-underline"></div>
      </div>
    </div>
    <div class="categories-container">
      <div class="categories-grid">
        <% if (categories && categories.length > 0) { %> <%
        categories.forEach((category, index) => { %>
        <div
          class="category-card floating-card"
          data-aos="fade-up"
          data-aos-delay="<%= index * 100 %>"
        >
          <div class="category-image">
            <img src="<%= category.image %>" alt="<%= category.name %>" />
            <div class="category-overlay">
              <div class="sound-pulse">
                <div class="pulse-ring"></div>
                <div class="pulse-ring"></div>
                <div class="pulse-ring"></div>
              </div>
            </div>
          </div>
          <div class="category-content">
            <h3 class="category-name"><%= category.name %></h3>
            <a
              href="/shopPage?category=<%= category._id %>"
              class="category-link"
            >
              Explore Collection
              <i class="ri-headphone-line"></i>
            </a>
          </div>
        </div>
        <% }) %> <% } else { %>
        <div class="empty-state">
          <i class="ri-headphone-line"></i>
          <p>No categories available at the moment.</p>
        </div>
        <% } %>
      </div>
    </div>
  </div>
</section>

<!-- New Arrivals Carousel -->
<section class="products-section">
  <div class="container">
    <div class="section-header">
      <div class="section-title-group">
        <h2 class="section-title">New Arrivals</h2>
        <div class="title-underline"></div>
      </div>
      <div class="carousel-top-controls">
        <div class="carousel-indicators" id="carouselIndicators"></div>
      </div>
    </div>
    
    <div class="carousel-container">
      <!-- Left Side Navigation Button -->
      <button class="carousel-side-btn carousel-prev" id="prevBtn">
        <i class="ri-arrow-left-line"></i>
      </button>
      
      <!-- Right Side Navigation Button -->
      <button class="carousel-side-btn carousel-next" id="nextBtn">
        <i class="ri-arrow-right-line"></i>
      </button>
      
      <!-- Loading State -->
      <div class="carousel-loading" id="carouselLoading" style="display: none;">
        <div class="loading-spinner">
          <div class="spinner-ring"></div>
          <div class="spinner-ring"></div>
          <div class="spinner-ring"></div>
        </div>
        <p class="loading-text">Loading products...</p>
      </div>
      
      <div class="carousel-wrapper" id="carouselWrapper">
        <!-- Create multiple slides from newArrivals -->
        <% if (newArrivals && newArrivals.length > 0) { %>
          <% 
            const slidesCount = Math.ceil(newArrivals.length / 3);
            for (let slideIndex = 0; slideIndex < slidesCount; slideIndex++) {
              const startIndex = slideIndex * 3;
              const slideProducts = newArrivals.slice(startIndex, startIndex + 3);
          %>
          <div class="carousel-slide <%= slideIndex === 0 ? 'active' : '' %>" data-slide="<%= slideIndex %>">
            <div class="standard-products-grid">
              <% slideProducts.forEach((product, index) => { %>
                <%
                  const now = new Date();
                  const createdAt = new Date(product.createdAt);
                  const diffDays = (now - createdAt) / (1000 * 60 * 60 * 24);
                  const isNew = diffDays <= 30;
                  const stockStatus = product.stock > 10 ? 'in-stock' : product.stock > 0 ? 'low-stock' : 'out-of-stock';
                  const stockText = product.stock > 10 ? 'In Stock' : product.stock > 0 ? `Only ${product.stock} left` : 'Out of Stock';
                %>
                <div class="standard-product-card card-animate" data-aos="fade-up" data-aos-delay="<%= index * 100 %>">
                  <div class="card-image-container">
                    <% if (isNew) { %>
                    <span class="card-badge new-badge">New</span>
                    <% } %>
                    <% if (product.activeOffer && product.discountPercentage > 0) { %>
                    <span class="card-badge discount-badge"><%= Math.round(product.discountPercentage) %>% OFF</span>
                    <% } %>
                    
                    <button class="wishlist-btn btn-wishlist" data-product-id="<%= product._id %>">
                      <i class="ri-heart-line"></i>
                    </button>
                    
                    <a href="/products/<%= product._id %>" class="card-image-link">
                      <img src="<%= product.mainImage || '/api/placeholder/600/800' %>" alt="<%= product.model %>" class="card-image">
                    </a>
                  </div>
                  
                  <div class="card-content">
                    <div class="card-brand"><%= product.brand %></div>
                    <h3 class="card-title">
                      <a href="/products/<%= product._id %>"><%= product.model %></a>
                    </h3>
                    
                    <div class="card-rating">
                      <div class="rating-stars">
                        <i class="ri-star-fill"></i>
                        <i class="ri-star-fill"></i>
                        <i class="ri-star-fill"></i>
                        <i class="ri-star-fill"></i>
                        <i class="ri-star-line"></i>
                      </div>
                      <span class="rating-text">(4.2)</span>
                    </div>
                    
                    <div class="card-price">
                      <% if (product.activeOffer && product.discountPercentage > 0) { %>
                      <span class="current-price">₹<%= product.finalPrice.toFixed(2) %></span>
                      <span class="original-price">₹<%= product.regularPrice.toFixed(2) %></span>
                      <% } else { %>
                      <span class="current-price">₹<%= product.regularPrice.toFixed(2) %></span>
                      <% } %>
                    </div>
                    
                    <div class="card-stock">
                      <span class="stock-status stock-<%= stockStatus %>"><%= stockText %></span>
                    </div>
                    
                    <button class="card-add-to-cart add-to-cart" data-product-id="<%= product._id %>" <%= product.stock === 0 ? 'disabled' : '' %>>
                      <i class="ri-shopping-cart-line"></i>
                      <%= product.stock === 0 ? 'Out of Stock' : 'Add to Cart' %>
                    </button>
                  </div>
                </div>
              <% }) %>
            </div>
          </div>
          <% } %>
        <% } else { %>
          <div class="carousel-slide active">
            <div class="empty-state">
              <i class="ri-headphone-line"></i>
              <p>No new arrivals available at the moment.</p>
            </div>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</section>

<!-- Enhanced Music Player Section -->
<section class="music-player-section">
  <div class="container">
    <div class="music-player-content">
      <h2 class="player-title">Feel the Beat</h2>
      <div class="music-player-interface">
        <div class="player-left">
          <div class="track-info">
            <div class="track-title">Premium Sound Experience</div>
            <div class="track-artist">Phoenix Audio</div>
          </div>
          <div class="player-controls">
            <button class="control-btn prev-track">
              <i class="ri-skip-back-line"></i>
            </button>
            <button class="control-btn play-btn-main">
              <i class="ri-play-fill"></i>
            </button>
            <button class="control-btn next-track">
              <i class="ri-skip-forward-line"></i>
            </button>
          </div>
          <div class="progress-container">
            <div class="progress-bar">
              <div class="progress-fill"></div>
            </div>
            <div class="time-display">
              <span class="current-time">1:23</span>
              <span class="total-time">3:45</span>
            </div>
          </div>
        </div>
        <div class="player-right">
          <div class="equalizer">
            <div class="eq-bar" style="--delay: 0s"></div>
            <div class="eq-bar" style="--delay: 0.1s"></div>
            <div class="eq-bar" style="--delay: 0.2s"></div>
            <div class="eq-bar" style="--delay: 0.3s"></div>
            <div class="eq-bar" style="--delay: 0.4s"></div>
            <div class="eq-bar" style="--delay: 0.5s"></div>
            <div class="eq-bar" style="--delay: 0.6s"></div>
            <div class="eq-bar" style="--delay: 0.7s"></div>
            <div class="eq-bar" style="--delay: 0.8s"></div>
            <div class="eq-bar" style="--delay: 0.9s"></div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Simple Newsletter Section -->
<section class="newsletter-section">
  <div class="container">
    <div class="newsletter-content">
      <h3 class="newsletter-title">Stay Updated</h3>
      <p class="newsletter-text">
        Get the latest headphone releases and exclusive offers
      </p>
      <form class="newsletter-form">
        <input
          type="email"
          class="newsletter-input"
          placeholder="Your email address"
        />
        <button type="submit" class="newsletter-btn">Subscribe</button>
      </form>
    </div>
  </div>
</section>

<%- include("../partials/user/footer") %>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Initialize AOS
    if (typeof AOS !== "undefined") {
      AOS.init({
        duration: 800,
        once: true,
        offset: 100,
      });
    }

    // Music player animation
    const playBtnMain = document.querySelector(".play-btn-main");
    const eqBars = document.querySelectorAll(".eq-bar");
    const progressFill = document.querySelector(".progress-fill");
    let isPlaying = false;
    let progressInterval;

    if (playBtnMain) {
      playBtnMain.addEventListener("click", () => {
        isPlaying = !isPlaying;
        const icon = playBtnMain.querySelector("i");

        if (isPlaying) {
          icon.className = "ri-pause-fill";
          eqBars.forEach((bar) => bar.classList.add("playing"));
          startProgress();
        } else {
          icon.className = "ri-play-fill";
          eqBars.forEach((bar) => bar.classList.remove("playing"));
          stopProgress();
        }
      });
    }

    function startProgress() {
      let progress = 0;
      progressInterval = setInterval(() => {
        progress += 0.5;
        if (progress >= 100) {
          progress = 0;
        }
        if (progressFill) {
          progressFill.style.width = progress + "%";
        }
      }, 100);
    }

    function stopProgress() {
      if (progressInterval) {
        clearInterval(progressInterval);
      }
    }

    // Cart and Wishlist functionality
    const cartCountElement = document.querySelector(".cart-count");
    const wishlistCountElement = document.querySelector(".wishlist-count");

    // Add to cart functionality
    document.querySelectorAll(".add-to-cart").forEach((button) => {
      button.addEventListener("click", async function () {
        const productId = this.dataset.productId;
        const originalText = this.innerHTML;
        this.innerHTML = '<i class="ri-loader-4-line animate-spin"></i> Adding...';
        this.disabled = true;

        try {
          const response = await fetch("/api/cart/add", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ productId, quantity: 1 }),
          });

          const result = await response.json();

          if (response.status === 401 || !result.success) {
            Swal.fire({
              toast: true,
              position: "top-end",
              icon: "error",
              title:
                result.message || "Please log in to add items to your cart",
              showConfirmButton: false,
              timer: 2000,
            }).then(() => {
              window.location.href = "/login";
            });
          } else if (result.success) {
            if (cartCountElement) {
              cartCountElement.textContent = result.cartCount;
              cartCountElement.dataset.count = result.cartCount;
            }

            Swal.fire({
              toast: true,
              position: "top-end",
              icon: "success",
              title: result.message,
              showConfirmButton: false,
              timer: 1500,
            });
          } else {
            Swal.fire({
              toast: true,
              position: "top-end",
              icon: "error",
              title: result.message,
              showConfirmButton: false,
              timer: 1500,
            });
          }
        } catch (error) {
          Swal.fire({
            toast: true,
            position: "top-end",
            icon: "error",
            title: "Error adding to cart",
            showConfirmButton: false,
            timer: 1500,
          });
        } finally {
          this.innerHTML = originalText;
          this.disabled = false;
        }
      });
    });

    // Wishlist functionality
    document.querySelectorAll(".btn-wishlist").forEach((button) => {
      button.addEventListener("click", async function () {
        const productId = this.dataset.productId;
        const icon = this.querySelector("i");
        const originalClass = icon.className;
        icon.className = "ri-loader-4-line animate-spin";

        try {
          const response = await fetch("/api/wishlist/toggle", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ productId }),
          });

          const result = await response.json();

          if (response.status === 401 || !result.success) {
            Swal.fire({
              toast: true,
              position: "top-end",
              icon: "error",
              title: result.message || "Please log in to manage your wishlist",
              showConfirmButton: false,
              timer: 2000,
            }).then(() => {
              window.location.href = "/login";
            });
          } else if (result.success) {
            if (result.isWishlisted) {
              icon.className = "ri-heart-fill";
              this.classList.add("wishlisted");
            } else {
              icon.className = "ri-heart-line";
              this.classList.remove("wishlisted");
            }

            if (wishlistCountElement) {
              wishlistCountElement.textContent = result.wishlistCount;
              wishlistCountElement.dataset.count = result.wishlistCount;
            }

            Swal.fire({
              toast: true,
              position: "top-end",
              icon: "success",
              title: result.message,
              showConfirmButton: false,
              timer: 1500,
            });
          } else {
            icon.className = originalClass;
            Swal.fire({
              toast: true,
              position: "top-end",
              icon: "error",
              title: result.message,
              showConfirmButton: false,
              timer: 1500,
            });
          }
        } catch (error) {
          icon.className = originalClass;
          Swal.fire({
            toast: true,
            position: "top-end",
            icon: "error",
            title: "Error managing wishlist",
            showConfirmButton: false,
            timer: 1500,
          });
        }
      });
    });

    // Simple Working Carousel Functionality
    const carouselWrapper = document.getElementById('carouselWrapper');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    const carouselIndicators = document.getElementById('carouselIndicators');
    
    let currentSlide = 0;
    let autoSlideInterval;
    const autoSlideDelay = 5000; // 5 seconds

    // Create indicators for existing slides
    function createIndicators() {
      const slides = carouselWrapper.querySelectorAll('.carousel-slide');
      carouselIndicators.innerHTML = '';
      slides.forEach((_, index) => {
        const indicator = document.createElement('div');
        indicator.className = `carousel-indicator ${index === 0 ? 'active' : ''}`;
        indicator.addEventListener('click', () => goToSlide(index));
        carouselIndicators.appendChild(indicator);
      });
    }

    // Update indicators
    function updateIndicators() {
      const indicators = carouselIndicators.querySelectorAll('.carousel-indicator');
      indicators.forEach((indicator, index) => {
        indicator.classList.toggle('active', index === currentSlide);
      });
    }

    // Go to specific slide
    function goToSlide(slideIndex) {
      const slides = carouselWrapper.querySelectorAll('.carousel-slide');
      if (slideIndex >= slides.length || slideIndex < 0) return;

      // Hide current slide
      slides[currentSlide].classList.remove('active');
      
      // Update current slide index
      currentSlide = slideIndex;
      
      // Show new slide
      slides[currentSlide].classList.add('active');
      
      // Update indicators
      updateIndicators();
      
      // Reset auto-slide timer
      resetAutoSlide();
    }

    // Next slide
    function nextSlide() {
      const slides = carouselWrapper.querySelectorAll('.carousel-slide');
      if (slides.length === 0) return;
      const nextIndex = (currentSlide + 1) % slides.length;
      goToSlide(nextIndex);
    }

    // Previous slide
    function prevSlide() {
      const slides = carouselWrapper.querySelectorAll('.carousel-slide');
      if (slides.length === 0) return;
      const prevIndex = (currentSlide - 1 + slides.length) % slides.length;
      goToSlide(prevIndex);
    }

    // Auto slide functionality
    function startAutoSlide() {
      const slides = carouselWrapper.querySelectorAll('.carousel-slide');
      if (slides.length > 1) {
        autoSlideInterval = setInterval(nextSlide, autoSlideDelay);
      }
    }

    function stopAutoSlide() {
      if (autoSlideInterval) {
        clearInterval(autoSlideInterval);
      }
    }

    function resetAutoSlide() {
      stopAutoSlide();
      startAutoSlide();
    }

    // Initialize carousel
    function initializeCarousel() {
      const slides = carouselWrapper.querySelectorAll('.carousel-slide');
      
      if (slides.length > 0) {
        createIndicators();
        
        // Event listeners for navigation buttons
        if (nextBtn) {
          nextBtn.addEventListener('click', nextSlide);
        }
        
        if (prevBtn) {
          prevBtn.addEventListener('click', prevSlide);
        }

        // Pause auto-slide on hover
        if (carouselWrapper) {
          carouselWrapper.addEventListener('mouseenter', stopAutoSlide);
          carouselWrapper.addEventListener('mouseleave', startAutoSlide);
        }

        // Touch/swipe support for mobile
        let startX = 0;
        let endX = 0;

        carouselWrapper.addEventListener('touchstart', (e) => {
          startX = e.touches[0].clientX;
        });

        carouselWrapper.addEventListener('touchend', (e) => {
          endX = e.changedTouches[0].clientX;
          handleSwipe();
        });

        function handleSwipe() {
          const swipeThreshold = 50;
          const diff = startX - endX;

          if (Math.abs(diff) > swipeThreshold) {
            if (diff > 0) {
              nextSlide(); // Swipe left - next slide
            } else {
              prevSlide(); // Swipe right - previous slide
            }
          }
        }

        // Start auto-slide
        startAutoSlide();
        
        // Hide navigation if only one slide
        if (slides.length <= 1) {
          if (prevBtn) prevBtn.style.display = 'none';
          if (nextBtn) nextBtn.style.display = 'none';
          carouselIndicators.style.display = 'none';
        }
      }
    }

    // Initialize carousel when page loads
    if (carouselWrapper) {
      initializeCarousel();
    }
  });
</script>