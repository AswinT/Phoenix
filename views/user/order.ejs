<%- include("../partials/user/header") %>

<!-- Include Phoenix Design System CSS -->
<link rel="stylesheet" href="/styles/phoenix-design-system.css">

<div class="phoenix-container">
  <div class="container-fluid">
    <!-- Breadcrumbs -->
    <nav aria-label="breadcrumb" class="mb-4">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/profile">My Account</a></li>
        <li class="breadcrumb-item active" aria-current="page">My Orders</li>
      </ol>
    </nav>

    <div class="row g-4">
      <%- include("../partials/user/accountSidebar") %>
      
      <!-- Main Content -->
      <div class="col-lg-10">
        <div class="phoenix-main-content">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
              <h1 class="phoenix-main-title">My Orders</h1>
              <p class="phoenix-main-subtitle">Track and manage your orders.</p>
            </div>
            <div class="d-flex gap-2">
              <div class="dropdown">
                <button class="btn phoenix-btn-secondary btn-sm dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                  <%= filterDisplay %>
                </button>
                <ul class="dropdown-menu" aria-labelledby="filterDropdown">
                  <li><a class="dropdown-item <%= currentFilter === 'All' ? 'active' : '' %>" href="/orders?sort=<%= currentSort %>">All Orders</a></li>
                  <li><a class="dropdown-item <%= currentFilter === 'Delivered' ? 'active' : '' %>" href="/orders?filter=Delivered&sort=<%= currentSort %>">Delivered Orders</a></li>
                  <li><a class="dropdown-item <%= currentFilter === 'Processing' ? 'active' : '' %>" href="/orders?filter=Processing&sort=<%= currentSort %>">Processing Orders</a></li>
                  <li><a class="dropdown-item <%= currentFilter === 'Shipped' ? 'active' : '' %>" href="/orders?filter=Shipped&sort=<%= currentSort %>">Shipped Orders</a></li>
                  <li><a class="dropdown-item <%= currentFilter === 'Placed' ? 'active' : '' %>" href="/orders?filter=Placed&sort=<%= currentSort %>">Placed Orders</a></li>
                  <li><a class="dropdown-item <%= currentFilter === 'Cancelled' ? 'active' : '' %>" href="/orders?filter=Cancelled&sort=<%= currentSort %>">Cancelled Orders</a></li>
                  <li><a class="dropdown-item <%= currentFilter === 'Returned' ? 'active' : '' %>" href="/orders?filter=Returned&sort=<%= currentSort %>">Returned Orders</a></li>
                </ul>
              </div>
              <div class="dropdown">
                <button class="btn phoenix-btn-secondary btn-sm dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                  <%= sortDisplay %>
                </button>
                <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                  <li><a class="dropdown-item <%= currentSort === 'createdAt-desc' ? 'active' : '' %>" href="/orders?filter=<%= currentFilter %>&sort=createdAt-desc">Newest First</a></li>
                  <li><a class="dropdown-item <%= currentSort === 'createdAt-asc' ? 'active' : '' %>" href="/orders?filter=<%= currentFilter %>&sort=createdAt-asc">Oldest First</a></li>
                  <li><a class="dropdown-item <%= currentSort === 'total-desc' ? 'active' : '' %>" href="/orders?filter=<%= currentFilter %>&sort=total-desc">Price: High to Low</a></li>
                  <li><a class="dropdown-item <%= currentSort === 'total-asc' ? 'active' : '' %>" href="/orders?filter=<%= currentFilter %>&sort=total-asc">Price: Low to High</a></li>
                </ul>
              </div>
            </div>
          </div>
          
          <!-- Orders List -->
            <div class="orders-list">
            <% if (orders && orders.length > 0) { %>
              <% orders.forEach(order => { %>
                <div class="order-card mb-4">
                  <div class="order-header d-flex justify-content-between align-items-center p-3 border-bottom">
                    <div>
                      <p class="mb-0 text-muted small">Order placed</p>
                      <p class="mb-0 fw-medium"><%= order.formattedDate %></p>
                    </div>
                    <div>
                      <p class="mb-0 text-muted small">Order number</p>
                      <p class="mb-0 fw-medium"><%= order.orderNumber %></p>
                    </div>
                    <div>
                      <p class="mb-0 text-muted small">Total</p>
                      <p class="mb-0 fw-medium"><%= order.formattedTotal %></p>
                    </div>
                    <div>
                      <p class="mb-0 text-muted small">Estimated Delivery</p>
                      <p class="mb-0 fw-medium"><%= order.estimatedDeliveryDate || 'N/A' %></p>
                    </div>
                    <div class="d-none d-md-block">
                      <% if (order.orderStatus === 'Delivered') { %>
                        <span class="badge bg-success">Delivered</span>
                      <% } else if (order.orderStatus === 'Shipped') { %>
                        <span class="badge bg-primary">Shipped</span>
                      <% } else if (order.orderStatus === 'Processing') { %>
                        <span class="badge bg-warning text-dark">Processing</span>
                      <% } else if (order.orderStatus === 'Cancelled') { %>
                        <span class="badge bg-secondary">Cancelled</span>
                      <% } else if (order.orderStatus === 'Partially Cancelled') { %>
                        <span class="badge bg-secondary">Partially Cancelled</span>
                      <% } else if (order.orderStatus === 'Placed') { %>
                        <span class="badge bg-info">Placed</span>
                      <% } else if (order.orderStatus === 'Returned') { %>
                        <span class="badge bg-danger">Returned</span>
                      <% } else if (order.orderStatus === 'Partially Returned') { %>
                        <span class="badge bg-danger">Partially Returned</span>
                      <% } else if (order.orderStatus === 'Pending Payment') { %>
                        <span class="badge bg-danger">
                          <i class="ri-error-warning-line"></i> Payment Pending
                        </span>
                      <% } %>
                    </div>
                  </div>
                  <div class="order-body p-3">
                    <div class="row g-3">
                      <div class="col-md-8">
                        <% order.items.forEach((item, index) => { %>
                          <div class="d-flex flex-column flex-md-row gap-3 <%= index > 0 ? 'mt-3 pt-3 border-top' : '' %>">
                            <div class="order-item-image">
                              <img 
                                src="<%= item.image || 'https://via.placeholder.com/120x160' %>" 
                                alt="<%= item.model || item.title || 'Product' %>" 
                                class="img-fluid rounded"
                                onerror="this.src='https://via.placeholder.com/120x160'"
                              >
                            </div>
                            <div class="order-item-details">
                              <h5 class="fs-6 fw-semibold mb-1">
                                <%= item.model || item.title || 'Unknown Product' %>
                                <% if (item.status === 'Cancelled') { %>
                                  <span class="item-status cancelled">Cancelled</span>
                                <% } else if (item.status === 'Returned') { %>
                                  <span class="item-status returned">Returned</span>
                                <% } else if (item.status === 'Active') { %>
                                  <span class="item-status active">Active</span>
                                <% } %>
                              </h5>
                              <p class="mb-1">Qty: <%= item.quantity || 1 %></p>
                              <p class="fw-medium mb-0">
                                <% if (item.discountedPrice && item.discountedPrice < item.price) { %>
                                  <span class="text-decoration-line-through text-muted me-2">₹<%= item.price.toFixed(2) %></span>
                                  <span>₹<%= item.discountedPrice.toFixed(2) %></span>
                                  <% if (item.couponProportion > 0) { %>
                                    <small class="text-success ms-2">
                                      (<%= (item.couponProportion * 100).toFixed(1) %>% of total coupon applied)
                                    </small>
                                  <% } %>
                                <% } else { %>
                                  <%= item.formattedPrice %>
                                <% } %>
                              </p>
                              <% if (item.offerTitle) { %>
                                <p class="mb-0 text-success">
                                  <small><i class="bi bi-tag-fill me-1"></i><%= item.offerTitle %></small>
                                </p>
                              <% } %>
                              <div class="d-block d-md-none mt-2">
                                <% if (order.orderStatus === 'Delivered') { %>
                                  <span class="badge bg-success">Delivered</span>
                                <% } else if (order.orderStatus === 'Shipped') { %>
                                  <span class="badge bg-primary">Shipped</span>
                                <% } else if (order.orderStatus === 'Processing') { %>
                                  <span class="badge bg-warning text-dark">Processing</span>
                                <% } else if (order.orderStatus === 'Cancelled') { %>
                                  <span class="badge bg-secondary">Cancelled</span>
                                <% } else if (order.orderStatus === 'Partially Cancelled') { %>
                                  <span class="badge bg-secondary">Partially Cancelled</span>
                                <% } else if (order.orderStatus === 'Placed') { %>
                                  <span class="badge bg-info">Placed</span>
                                <% } else if (order.orderStatus === 'Returned') { %>
                                  <span class="badge bg-danger">Returned</span>
                                <% } else if (order.orderStatus === 'Partially Returned') { %>
                                  <span class="badge bg-danger">Partially Returned</span>
                                <% } else if (order.orderStatus === 'Pending Payment') { %>
                                  <span class="badge bg-danger">
                                    <i class="ri-error-warning-line"></i> Payment Pending
                                  </span>
                                <% } %>
                              </div>
                            </div>
                          </div>
                        <% }) %>
                      </div>
                      <div class="col-md-4">
                        <div class="order-actions d-flex flex-column gap-2">
                          <a href="/orders/<%= order._id %>" class="btn btn-dark btn-sm">View Order Details</a>
                          <% if (order.orderStatus === 'Pending Payment') { %>
                            <button class="btn btn-danger btn-sm" onclick="retryPayment('<%= order._id %>')">
                              <i class="ri-refresh-line me-1"></i>Retry Payment
                            </button>
                          <% } %>
                          <% if (['Shipped', 'Delivered'].includes(order.orderStatus)) { %>
                            <a href="/orders/<%= order._id %>/track" class="btn btn-outline-dark btn-sm">Track Package</a>
                          <% } %>
                          <% if (order.orderStatus !== 'Pending Payment') { %>
                            <a href="/orders/<%= order._id %>/invoice/download" class="btn btn-outline-dark btn-sm" onclick="downloadInvoice(event, '<%= order._id %>', '<%= order.orderNumber %>')">Download Invoice</a>
                          <% } %>
                          <% if (order.orderStatus === 'Delivered' || order.orderStatus === 'Partially Returned') { %>
                            <a href="#" class="btn btn-outline-dark btn-sm">Write a Review</a>
                          <% } %>
                          <% if (order.orderStatus !== 'Pending Payment') { %>
                            <button class="btn btn-outline-dark btn-sm" onclick="reorder('<%= order._id %>')">Buy Again</button>
                          <% } %>
                          <% if (['Placed', 'Processing'].includes(order.orderStatus)) { %>
                            <a href="/orders/<%= order._id %>" class="btn btn-outline-danger btn-sm">Cancel Order</a>
                          <% } %>
                          <div class="mt-2 text-center">
                            <%
                              let paymentStatusDisplay = '';
                              let paymentStatusClass = '';

                              if (order.paymentMethod === 'COD') {
                                if (order.orderStatus === 'Cancelled') {
                                  paymentStatusDisplay = 'No Payment Required';
                                  paymentStatusClass = 'bg-secondary';
                                } else if (order.orderStatus === 'Delivered') {
                                  paymentStatusDisplay = 'Paid (Cash)';
                                  paymentStatusClass = 'bg-success';
                                } else {
                                  paymentStatusDisplay = 'Pay on Delivery';
                                  paymentStatusClass = 'bg-warning';
                                }
                              } else {
                                switch (order.paymentStatus) {
                                  case 'Paid':
                                    paymentStatusDisplay = 'Paid';
                                    paymentStatusClass = 'bg-success';
                                    break;
                                  case 'Pending':
                                    paymentStatusDisplay = 'Payment Pending';
                                    paymentStatusClass = 'bg-warning';
                                    break;
                                  case 'Failed':
                                    paymentStatusDisplay = 'Payment Failed';
                                    paymentStatusClass = 'bg-danger';
                                    break;
                                  case 'Refunded':
                                    paymentStatusDisplay = 'Refunded';
                                    paymentStatusClass = 'bg-info';
                                    break;
                                  case 'Partially Refunded':
                                    paymentStatusDisplay = 'Partially Refunded';
                                    paymentStatusClass = 'bg-info';
                                    break;
                                  case 'Refund Processing':
                                    paymentStatusDisplay = 'Refund Processing';
                                    paymentStatusClass = 'bg-warning';
                                    break;
                                  case 'Refund Initiated':
                                    paymentStatusDisplay = 'Refund Initiated';
                                    paymentStatusClass = 'bg-warning';
                                    break;
                                  case 'Pending Payment':
                                    paymentStatusDisplay = 'Payment Required';
                                    paymentStatusClass = 'bg-danger';
                                    break;
                                  default:
                                    paymentStatusDisplay = order.paymentStatus || 'Unknown';
                                    paymentStatusClass = 'bg-secondary';
                                }
                              }
                            %>
                            <span class="badge <%= paymentStatusClass %>">
                              <%= paymentStatusDisplay %>
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              <% }) %>
            <% } else { %>
              <div class="text-center py-5">
                <i class="bi bi-box-seam text-muted" style="font-size: 3rem;"></i>
                <h5 class="text-muted mt-3">No orders found</h5>
                <p class="text-muted mb-4">
                  <% if (currentFilter === 'All') { %>
                    You haven't placed any orders yet.
                  <% } else { %>
                    No <%= currentFilter.toLowerCase() %> orders found.
                  <% } %>
                </p>
                <a href="/shopPage" class="btn btn-dark">Start Shopping</a>
              </div>
            <% } %>
          </div>
          
          <!-- Pagination -->
          <% if (pagination.totalPages > 1) { %>
            <nav aria-label="Orders pagination" class="mt-4">
              <ul class="pagination justify-content-center">
                <li class="page-item <%= !pagination.hasPrev ? 'disabled' : '' %>">
                  <a class="page-link" href="/orders?page=<%= pagination.prevPage %>&filter=<%= currentFilter %>&sort=<%= currentSort %>" tabindex="-1" aria-disabled="<%= !pagination.hasPrev %>">Previous</a>
                </li>
                <% pagination.pages.forEach(page => { %>
                  <li class="page-item <%= pagination.currentPage === page ? 'active' : '' %>">
                    <a class="page-link" href="/orders?page=<%= page %>&filter=<%= currentFilter %>&sort=<%= currentSort %>"><%= page %></a>
                  </li>
                <% }) %>
                <li class="page-item <%= !pagination.hasNext ? 'disabled' : '' %>">
                  <a class="page-link" href="/orders?page=<%= pagination.nextPage %>&filter=<%= currentFilter %>&sort=<%= currentSort %>" aria-disabled="<%= !pagination.hasNext %>">Next</a>
                </li>
              </ul>
            </nav>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Toast container for notifications -->
<div class="toast-container"></div>

<style>
  /* ════════════════════════════════════════════════════════════════════════════════════════ */
  /* PHOENIX ORDERS PAGE SPECIFIC STYLES */
  /* ═══════════════════════════════════════════════════════════════════════════════════════════ */
  :root {
    /* Phoenix Color Palette */
    --phoenix-primary: #1b3c53;
    --phoenix-secondary: #456882;
    --phoenix-beige: #d2c1b6;
    --phoenix-cream: #f9f3ef;
    --phoenix-white: #ffffff;
    --phoenix-dark: #2d3748;
    --phoenix-success: #00b894;
    --phoenix-warning: #fdcb6e;
    --phoenix-danger: #d63031;

    /* Gradients */
    --phoenix-gradient-main: linear-gradient(
      135deg,
      var(--phoenix-primary) 0%,
      var(--phoenix-secondary) 100%
    );
    --phoenix-gradient-soft: linear-gradient(
      135deg,
      var(--phoenix-cream) 0%,
      var(--phoenix-beige) 100%
    );
    --phoenix-gradient-card: linear-gradient(
      145deg,
      rgba(249, 243, 239, 0.95) 0%,
      rgba(210, 193, 182, 0.85) 100%
    );

    /* Shadows & Effects */
    --phoenix-shadow-soft: 0 8px 32px rgba(27, 60, 83, 0.12);
    --phoenix-shadow-medium: 0 12px 40px rgba(27, 60, 83, 0.18);
    --phoenix-shadow-strong: 0 16px 48px rgba(27, 60, 83, 0.25);
    --phoenix-blur: blur(16px);

    /* Typography */
    --phoenix-font-brand: "Audiowide", cursive;
    --phoenix-font-heading: "Montserrat", sans-serif;
    --phoenix-font-body: "Raleway", sans-serif;

    /* Spacing */
    --phoenix-radius-sm: 12px;
    --phoenix-radius-md: 16px;
    --phoenix-radius-lg: 20px;
    --phoenix-radius-xl: 24px;
  }

  /* ═══ GLOBAL STYLES ═══ */
  body {
    font-family: var(--phoenix-font-body);
    background: linear-gradient(
      135deg,
      var(--phoenix-cream) 0%,
      #f0ebe5 50%,
      var(--phoenix-beige) 100%
    );
    min-height: 100vh;
    color: var(--phoenix-dark);
  }

  .phoenix-container {
    background: var(--phoenix-gradient-card);
    min-height: 100vh;
    padding: 2rem 0;
  }

  /* ═══ BREADCRUMB STYLING ═══ */
  .breadcrumb-item + .breadcrumb-item::before {
    content: "›";
    font-weight: bold;
    color: var(--phoenix-secondary);
  }

  .breadcrumb a {
    color: var(--phoenix-primary);
    text-decoration: none;
    font-family: var(--phoenix-font-heading);
    font-weight: 500;
  }

  .breadcrumb a:hover {
    color: var(--phoenix-secondary);
    text-decoration: underline;
  }

  .breadcrumb-item.active {
    color: var(--phoenix-secondary);
    font-family: var(--phoenix-font-heading);
    font-weight: 600;
  }

  /* ═══ ORDER CARD STYLING ═══ */
  .order-card {
    background: rgba(255, 255, 255, 0.95);
    border-radius: var(--phoenix-radius-lg);
    overflow: hidden;
    box-shadow: var(--phoenix-shadow-soft);
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    border: 1px solid rgba(210, 193, 182, 0.3);
    backdrop-filter: var(--phoenix-blur);
  }

  .order-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--phoenix-shadow-medium);
  }

  .order-header {
    background: var(--phoenix-gradient-soft);
    color: var(--phoenix-primary);
    font-family: var(--phoenix-font-heading);
    font-weight: 600;
  }

  .order-item-image {
    min-width: 80px;
    max-width: 120px;
    border-radius: var(--phoenix-radius-sm);
    overflow: hidden;
  }

  /* ═══ ITEM STATUS BADGES ═══ */
  .item-status {
    display: inline-block;
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: var(--phoenix-radius-sm);
    margin-left: 0.5rem;
    font-family: var(--phoenix-font-heading);
    font-weight: 600;
  }

  .item-status.cancelled {
    background-color: rgba(214, 48, 49, 0.1);
    color: var(--phoenix-danger);
  }

  .item-status.returned {
    background-color: rgba(253, 203, 110, 0.2);
    color: var(--phoenix-warning);
  }

  .item-status.active {
    background-color: rgba(0, 184, 148, 0.1);
    color: var(--phoenix-success);
  }

  /* ═══ BADGE STYLING ═══ */
  .badge {
    font-weight: 600;
    padding: 0.5em 0.75em;
    border-radius: var(--phoenix-radius-sm);
    font-family: var(--phoenix-font-heading);
  }

  .badge.bg-success {
    background: var(--phoenix-success) !important;
    color: var(--phoenix-white);
  }

  .badge.bg-primary {
    background: var(--phoenix-primary) !important;
    color: var(--phoenix-white);
  }

  .badge.bg-warning {
    background: var(--phoenix-warning) !important;
    color: var(--phoenix-dark);
  }

  .badge.bg-secondary {
    background: var(--phoenix-secondary) !important;
    color: var(--phoenix-white);
  }

  .badge.bg-info {
    background: var(--phoenix-secondary) !important;
    color: var(--phoenix-white);
  }

  .badge.bg-danger {
    background: var(--phoenix-danger) !important;
    color: var(--phoenix-white);
  }

  /* ═══ BUTTON STYLING ═══ */
  .btn-dark {
    background: var(--phoenix-gradient-main);
    border: none;
    color: var(--phoenix-white);
    font-family: var(--phoenix-font-heading);
    font-weight: 600;
    border-radius: var(--phoenix-radius-sm);
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  .btn-dark:hover {
    background: linear-gradient(
      135deg,
      var(--phoenix-secondary) 0%,
      var(--phoenix-beige) 100%
    );
    color: var(--phoenix-white);
    transform: translateY(-2px);
    box-shadow: var(--phoenix-shadow-medium);
  }

  .btn-outline-dark {
    color: var(--phoenix-primary);
    border-color: rgba(210, 193, 182, 0.4);
    background: rgba(255, 255, 255, 0.9);
    font-family: var(--phoenix-font-heading);
    font-weight: 500;
    border-radius: var(--phoenix-radius-sm);
  }

  .btn-outline-dark:hover {
    background: var(--phoenix-gradient-soft);
    color: var(--phoenix-primary);
    border-color: var(--phoenix-secondary);
  }

  .btn-outline-danger {
    color: var(--phoenix-danger);
    border-color: rgba(214, 48, 49, 0.3);
    background: rgba(255, 255, 255, 0.9);
    font-family: var(--phoenix-font-heading);
    font-weight: 500;
    border-radius: var(--phoenix-radius-sm);
  }

  .btn-outline-danger:hover {
    background: var(--phoenix-danger);
    color: var(--phoenix-white);
    border-color: var(--phoenix-danger);
  }

  .btn-danger {
    background: var(--phoenix-danger);
    border-color: var(--phoenix-danger);
    color: var(--phoenix-white);
    font-family: var(--phoenix-font-heading);
    font-weight: 600;
    border-radius: var(--phoenix-radius-sm);
  }

  .btn-danger:hover {
    background: #b91c1c;
    border-color: #b91c1c;
    color: var(--phoenix-white);
  }

  /* ═══ PAGINATION STYLING ═══ */
  .pagination .page-link {
    color: var(--phoenix-primary);
    border: 1px solid rgba(210, 193, 182, 0.4);
    background: rgba(255, 255, 255, 0.9);
    font-family: var(--phoenix-font-heading);
    font-weight: 500;
    border-radius: var(--phoenix-radius-sm);
    margin: 0 0.25rem;
  }

  .pagination .page-item.active .page-link {
    background: var(--phoenix-gradient-main);
    border-color: var(--phoenix-primary);
    color: var(--phoenix-white);
  }

  .pagination .page-item.disabled .page-link {
    color: var(--phoenix-secondary);
    background: rgba(210, 193, 182, 0.2);
  }

  .pagination .page-link:hover {
    background: var(--phoenix-gradient-soft);
    border-color: var(--phoenix-secondary);
    color: var(--phoenix-primary);
  }

  /* ═══ DROPDOWN STYLING ═══ */
  .dropdown-menu {
    border-radius: var(--phoenix-radius-md);
    box-shadow: var(--phoenix-shadow-medium);
    border: 1px solid rgba(210, 193, 182, 0.3);
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: var(--phoenix-blur);
  }

  .dropdown-item {
    font-family: var(--phoenix-font-body);
    color: var(--phoenix-dark);
    transition: all 0.3s ease;
  }

  .dropdown-item:hover {
    background: var(--phoenix-gradient-soft);
    color: var(--phoenix-primary);
  }

  .dropdown-item.active {
    background: var(--phoenix-gradient-main);
    color: var(--phoenix-white);
  }

  /* ═══ RESPONSIVE DESIGN ═══ */
  @media (max-width: 767.98px) {
    .order-header {
      flex-wrap: wrap;
      gap: 0.5rem;
    }
    
    .order-header > div {
      flex: 1 1 40%;
    }
    
    .order-item-image {
      max-width: 80px;
    }

    .phoenix-container {
      padding: 1rem 0;
    }
  }

  @media (max-width: 991px) {
    .phoenix-sidebar {
      margin-bottom: 2rem;
    }
  }
  
  /* ═══ TOAST NOTIFICATION STYLES ═══ */
  .toast-container {
    position: fixed;
    top: 20px;
    right: 20px;
    z-index: 9999;
  }
  
  .toast {
    min-width: 300px;
    border-radius: var(--phoenix-radius-md);
    backdrop-filter: var(--phoenix-blur);
  }
  
  .toast-success {
    background: rgba(0, 184, 148, 0.1);
    color: var(--phoenix-success);
    border: 1px solid rgba(0, 184, 148, 0.3);
  }
  
  .toast-error {
    background: rgba(214, 48, 49, 0.1);
    color: var(--phoenix-danger);
    border: 1px solid rgba(214, 48, 49, 0.3);
  }
  
  .toast-warning {
    background: rgba(253, 203, 110, 0.1);
    color: var(--phoenix-warning);
    border: 1px solid rgba(253, 203, 110, 0.3);
  }
  
  .toast-info {
    background: rgba(69, 104, 130, 0.1);
    color: var(--phoenix-secondary);
    border: 1px solid rgba(69, 104, 130, 0.3);
  }

  /* ═══ ORDER SPECIFIC STYLING ═══ */
  .order-body {
    padding: 1.5rem;
  }

  .order-actions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .order-actions .btn {
    font-size: 0.875rem;
    padding: 0.5rem 1rem;
  }

  .text-muted {
    color: var(--phoenix-secondary) !important;
  }

  .fw-medium, .fw-semibold {
    font-family: var(--phoenix-font-heading);
    color: var(--phoenix-primary);
  }

  .small {
    font-family: var(--phoenix-font-body);
    color: var(--phoenix-secondary);
  }
</style>

<script>
  // Function to reorder (buy again)
  function reorder(orderId) {
    // Show processing toast
    showToast('Adding items to cart...', 'info');
    
    // Send reorder request
    fetch(`/orders/${orderId}/reorder`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        showToast(data.message, 'success');
        
        // Redirect to cart after a short delay
        setTimeout(() => {
          window.location.href = data.redirectUrl;
        }, 1500);
      } else {
        showToast(data.message, 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showToast('An error occurred while processing your request.', 'error');
    });
  }

  // Download invoice function
  function downloadInvoice(event, orderId, orderNumber) {
    event.preventDefault();

    // Show loading toast
    showToast('Preparing your invoice download...', 'info');

    // Create a temporary link element
    const link = document.createElement('a');
    link.href = `/orders/${orderId}/invoice/download`;
    link.download = `invoice-${orderNumber}.pdf`;
    link.style.display = 'none';

    // Add to DOM, click, and remove
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);

    // Show success message after a short delay
    setTimeout(() => {
      showToast('Invoice download started!', 'success');
    }, 500);
  }

  // Function to show toast notifications
  function showToast(message, type = 'info') {
    const toastContainer = document.querySelector('.toast-container');
    const toast = document.createElement('div');
    toast.className = `toast align-items-center text-white bg-${type} border-0`;
    toast.setAttribute('role', 'alert');
    toast.setAttribute('aria-live', 'assertive');
    toast.setAttribute('aria-atomic', 'true');
    
    toast.innerHTML = `
      <div class="d-flex">
        <div class="toast-body">
          ${message}
        </div>
        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    `;
    
    toastContainer.appendChild(toast);
    const bsToast = new bootstrap.Toast(toast);
    bsToast.show();
    
    // Remove toast after it's hidden
    toast.addEventListener('hidden.bs.toast', () => {
      toast.remove();
    });
  }

  // Function to retry payment
  function retryPayment(orderId) {
    showToast('Redirecting to payment...', 'info');

    // Redirect to order details page where retry payment functionality is available
    setTimeout(() => {
      window.location.href = `/orders/${orderId}`;
    }, 1000);
  }
</script>

<%- include("../partials/user/footer") %>