<%- include("../partials/user/header") %>

<!-- Include Phoenix Design System CSS -->
<link rel="stylesheet" href="/styles/phoenix-design-system.css">

<div class="phoenix-container">
  <div class="container-fluid">
    <!-- Breadcrumbs -->
    <nav aria-label="breadcrumb" class="mb-4">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/profile">My Account</a></li>
        <li class="breadcrumb-item active" aria-current="page">Wallet</li>
      </ol>
    </nav>

    <div class="row g-4">
      <%- include("../partials/user/accountSidebar") %>

      <!-- Main Content -->
      <div class="col-lg-10">
        <div class="phoenix-main-content">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
              <h1 class="phoenix-main-title">My Wallet</h1>
              <p class="phoenix-main-subtitle">Manage your wallet balance and transactions.</p>
            </div>
          </div>

          <div class="wallet-content">
      <!-- Wallet Balance Card with Animation -->
      <div class="card border-0 shadow-sm mb-4 wallet-card">
        <div class="card-header bg-white p-4 border-0">
          <div class="d-flex align-items-center">
            <div class="wallet-icon me-3">
              <i class="bi bi-wallet2"></i>
            </div>
            <h4 class="mb-0">My Wallet</h4>
          </div>
        </div>
        <div class="card-body p-4">
          <div class="text-center py-4">
            <div class="wallet-animation-container mb-4">
              <div class="wallet-visual">
                <div class="wallet-body">
                  <div class="wallet-fold"></div>
                  <div class="wallet-bills">
                    <div class="bill bill-1"></div>
                    <div class="bill bill-2"></div>
                    <div class="bill bill-3"></div>
                  </div>
                  <div class="wallet-coins">
                    <div class="coin coin-1"></div>
                    <div class="coin coin-2"></div>
                  </div>
                </div>
              </div>
            </div>
            <div class="mb-3">
              <span class="display-6 fw-bold balance-amount" data-balance="<%= wallet.balance %>">₹<%= wallet.balance.toFixed(2) %></span>
            </div>
            <div class="text-center mt-3">
              <p class="text-muted mb-0">
                <i class="bi bi-info-circle me-1"></i>
                Wallet balance is credited through refunds and referral bonuses
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Transaction History Card -->
      <div class="card border-0 shadow-sm transaction-card">
        <div class="card-header bg-white p-4 border-0 d-flex justify-content-between align-items-center">
          <h4 class="mb-0">Transaction History</h4>
          <div class="dropdown">
            <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
              <i class="bi bi-funnel me-1"></i>Filter
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="filterDropdown">
              <li><a class="dropdown-item filter-link <%= wallet.filter === 'credit' ? 'active' : '' %>" href="?page=1&filter=credit"><i class="bi bi-arrow-up me-2"></i>Credits</a></li>
              <li><a class="dropdown-item filter-link <%= wallet.filter === 'debit' ? 'active' : '' %>" href="?page=1&filter=debit"><i class="bi bi-arrow-down me-2"></i>Debits</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item filter-link <%= wallet.filter === 'all' ? 'active' : '' %>" href="?page=1&filter=all"><i class="bi bi-filter-circle me-2"></i>All Transactions</a></li>
            </ul>
          </div>
        </div>
        <div class="card-body p-0">
          <div class="table-responsive">
            <table class="table table-hover mb-0">
              <thead class="table-light">
                <tr>
                  <th scope="col" class="ps-4">Date</th>
                  <th scope="col">Description</th>
                  <th scope="col">Type</th>
                  <th scope="col" class="text-end pe-4">Amount</th>
                  <th scope="col" class="text-center">Details</th>
                </tr>
              </thead>
              <tbody>
                <% if (wallet.transactions && wallet.transactions.length > 0) { %>
                  <% wallet.transactions.forEach(transaction => { %>
                    <tr class="transaction-row" data-type="<%= transaction.type %>">
                      <td class="ps-4">
                        <div class="transaction-date"><%= transaction.date %></div>
                        <small class="transaction-time"><%= transaction.time %></small>
                      </td>
                      <td>
                        <div class="transaction-description">
                          <div class="fw-medium"><%= transaction.reason %></div>
                          <% if (transaction.orderId) { %>
                            <small class="text-muted">Order #<%= transaction.orderId %></small>
                          <% } %>
                        </div>
                      </td>
                      <td>
                        <% if (transaction.type === 'credit') { %>
                          <% if (transaction.refundType) { %>
                            <span class="badge bg-success-subtle text-success">
                              <i class="bi bi-arrow-return-left me-1"></i>
                              <%= transaction.refundType === 'cancellation' ? 'Cancellation' : 'Return' %> Refund
                            </span>
                          <% } else { %>
                            <span class="badge bg-success-subtle text-success">
                              <i class="bi bi-plus-circle me-1"></i>Credit
                            </span>
                          <% } %>
                        <% } else if (transaction.type === 'debit') { %>
                          <span class="badge bg-danger-subtle text-danger">
                            <i class="bi bi-dash-circle me-1"></i>Debit
                          </span>
                        <% } else { %>
                          <span class="badge bg-primary-subtle text-primary">
                            <i class="bi bi-wallet me-1"></i>Add
                          </span>
                        <% } %>
                      </td>
                      <td class="text-end pe-4">
                        <div class="fw-bold <%= transaction.type === 'credit' || transaction.type === 'add' ? 'text-success' : 'text-danger' %>">
                          <%
                            // **FIX: Ensure amount is a number and handle all edge cases**
                            let displayAmount = 0;
                            try {
                              displayAmount = typeof transaction.amount === 'number'
                                ? transaction.amount
                                : parseFloat(transaction.amount) || 0;

                              // **ADDITIONAL SAFETY: Handle NaN and Infinity**
                              if (isNaN(displayAmount) || !isFinite(displayAmount)) {
                                displayAmount = 0;
                              }
                            } catch (e) {
                              displayAmount = 0;
                            }
                          %>
                          <%= transaction.type === 'credit' || transaction.type === 'add' ? '+' : '-' %>₹<%= displayAmount.toFixed(2) %>
                        </div>
                      </td>
                      <td class="text-center">
                        <% if (transaction.refundBreakdowns && transaction.refundBreakdowns.length > 0) { %>
                          <button class="btn btn-sm btn-outline-info" type="button" data-bs-toggle="collapse" data-bs-target="#breakdown-<%= transaction._id || Math.random().toString(36).substr(2, 9) %>" aria-expanded="false">
                            <i class="bi bi-info-circle"></i>
                          </button>
                        <% } else { %>
                          <span class="text-muted">-</span>
                        <% } %>
                      </td>
                    </tr>

                    <!-- **ENHANCED REFUND BREAKDOWN ROW** -->
                    <% if (transaction.refundBreakdowns && transaction.refundBreakdowns.length > 0) { %>
                      <tr class="collapse" id="breakdown-<%= transaction._id || Math.random().toString(36).substr(2, 9) %>">
                        <td colspan="5" class="p-0">
                          <div class="refund-breakdown-container">
                            <div class="row g-3 p-3">
                              <div class="col-md-6">
                                <div class="refund-summary-card">
                                  <h6 class="mb-2"><i class="bi bi-calculator me-2"></i>Refund Breakdown</h6>
                                  <%
                                    let totalBase = 0;
                                    let totalTax = 0;
                                    transaction.refundBreakdowns.forEach(breakdown => {
                                      totalBase += breakdown.finalPrice || 0;
                                      totalTax += breakdown.taxRefundAmount || 0;
                                    });
                                  %>
                                  <div class="breakdown-item">
                                    <span class="breakdown-label">Base Amount:</span>
                                    <span class="breakdown-value text-primary">₹<%= (totalBase || 0).toFixed(2) %></span>
                                  </div>
                                  <div class="breakdown-item">
                                    <span class="breakdown-label">Tax Refund:</span>
                                    <span class="breakdown-value text-info">₹<%= (totalTax || 0).toFixed(2) %></span>
                                  </div>
                                  <hr class="my-2">
                                  <div class="breakdown-item fw-bold">
                                    <span class="breakdown-label">Total Credited:</span>
                                    <span class="breakdown-value text-success">₹<%= displayAmount.toFixed(2) %></span>
                                  </div>
                                </div>
                              </div>
                              <div class="col-md-6">
                                <div class="refund-info-card">
                                  <h6 class="mb-2"><i class="bi bi-info-circle me-2"></i>Refund Information</h6>
                                  <div class="info-item">
                                    <small class="text-muted">Refund Type:</small>
                                    <div class="fw-medium">
                                      <% if (transaction.refundType === 'cancellation') { %>
                                        <i class="bi bi-x-circle text-warning me-1"></i>Pre-shipment Cancellation
                                      <% } else { %>
                                        <i class="bi bi-arrow-return-left text-info me-1"></i>Post-delivery Return
                                      <% } %>
                                    </div>
                                  </div>
                                  <div class="info-item mt-2">
                                    <small class="text-muted">Tax Handling:</small>
                                    <div class="fw-medium">
                                      <% if (transaction.refundBreakdowns[0] && transaction.refundBreakdowns[0].isFullOrderRefund) { %>
                                        <i class="bi bi-check-circle text-success me-1"></i>Full tax refunded
                                      <% } else { %>
                                        <i class="bi bi-pie-chart text-primary me-1"></i>Proportional tax refund
                                      <% } %>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </td>
                      </tr>
                    <% } %>
                  <% }); %>
                <% } else { %>
                  <tr>
                    <td colspan="5" class="text-center py-4">No transactions found</td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
        <!-- Pagination -->
        <% if (wallet.totalPages > 1) { %>
        <div class="card-footer bg-white p-3">
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <small class="text-muted">
                Showing <%= ((wallet.currentPage - 1) * wallet.transactionsPerPage) + 1 %> to
                <%= Math.min(wallet.currentPage * wallet.transactionsPerPage, wallet.totalTransactions) %>
                of <%= wallet.totalTransactions %> transactions
              </small>
            </div>
            <nav aria-label="Transaction pagination">
              <ul class="pagination pagination-sm mb-0">
                <!-- Previous Button -->
                <li class="page-item <%= !wallet.hasPrevPage ? 'disabled' : '' %>">
                  <a class="page-link" href="?page=<%= wallet.currentPage - 1 %>&filter=<%= wallet.filter %>">
                    <i class="bi bi-chevron-left"></i>
                  </a>
                </li>

                <!-- Page Numbers -->
                <%
                let startPage = Math.max(1, wallet.currentPage - 2);
                let endPage = Math.min(wallet.totalPages, wallet.currentPage + 2);
                %>

                <% if (startPage > 1) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=1&filter=<%= wallet.filter %>">1</a>
                  </li>
                  <% if (startPage > 2) { %>
                    <li class="page-item disabled">
                      <span class="page-link">...</span>
                    </li>
                  <% } %>
                <% } %>

                <% for (let i = startPage; i <= endPage; i++) { %>
                  <li class="page-item <%= i === wallet.currentPage ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>&filter=<%= wallet.filter %>"><%= i %></a>
                  </li>
                <% } %>

                <% if (endPage < wallet.totalPages) { %>
                  <% if (endPage < wallet.totalPages - 1) { %>
                    <li class="page-item disabled">
                      <span class="page-link">...</span>
                    </li>
                  <% } %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= wallet.totalPages %>&filter=<%= wallet.filter %>"><%= wallet.totalPages %></a>
                  </li>
                <% } %>

                <!-- Next Button -->
                <li class="page-item <%= !wallet.hasNextPage ? 'disabled' : '' %>">
                  <a class="page-link" href="?page=<%= wallet.currentPage + 1 %>&filter=<%= wallet.filter %>">
                    <i class="bi bi-chevron-right"></i>
                  </a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
        <% } %>
      </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>



<!-- Add Bootstrap Icons CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"/>
<!-- Add SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
  /* ════════════════════════════════════════════════════════════════════════════════════════ */
  /* PHOENIX WALLET PAGE SPECIFIC STYLES */
  /* ═══════════════════════════════════════════════════════════════════════════════════════════ */
  :root {
    /* Phoenix Color Palette */
    --phoenix-primary: #1b3c53;
    --phoenix-secondary: #456882;
    --phoenix-beige: #d2c1b6;
    --phoenix-cream: #f9f3ef;
    --phoenix-white: #ffffff;
    --phoenix-dark: #2d3748;
    --phoenix-success: #00b894;
    --phoenix-warning: #fdcb6e;
    --phoenix-danger: #d63031;

    /* Gradients */
    --phoenix-gradient-main: linear-gradient(
      135deg,
      var(--phoenix-primary) 0%,
      var(--phoenix-secondary) 100%
    );
    --phoenix-gradient-soft: linear-gradient(
      135deg,
      var(--phoenix-cream) 0%,
      var(--phoenix-beige) 100%
    );
    --phoenix-gradient-card: linear-gradient(
      145deg,
      rgba(249, 243, 239, 0.95) 0%,
      rgba(210, 193, 182, 0.85) 100%
    );

    /* Shadows & Effects */
    --phoenix-shadow-soft: 0 8px 32px rgba(27, 60, 83, 0.12);
    --phoenix-shadow-medium: 0 12px 40px rgba(27, 60, 83, 0.18);
    --phoenix-shadow-strong: 0 16px 48px rgba(27, 60, 83, 0.25);
    --phoenix-blur: blur(16px);

    /* Typography */
    --phoenix-font-brand: "Audiowide", cursive;
    --phoenix-font-heading: "Montserrat", sans-serif;
    --phoenix-font-body: "Raleway", sans-serif;

    /* Spacing */
    --phoenix-radius-sm: 12px;
    --phoenix-radius-md: 16px;
    --phoenix-radius-lg: 20px;
    --phoenix-radius-xl: 24px;
  }

  /* ═══ GLOBAL STYLES ═══ */
  body {
    font-family: var(--phoenix-font-body);
    background: linear-gradient(
      135deg,
      var(--phoenix-cream) 0%,
      #f0ebe5 50%,
      var(--phoenix-beige) 100%
    );
    min-height: 100vh;
    color: var(--phoenix-dark);
  }

  .phoenix-container {
    background: var(--phoenix-gradient-card);
    min-height: 100vh;
    padding: 2rem 0;
  }

  /* ═══ BREADCRUMB STYLING ═══ */
  .breadcrumb-item + .breadcrumb-item::before {
    content: "›";
    font-weight: bold;
    color: var(--phoenix-secondary);
  }

  .breadcrumb a {
    color: var(--phoenix-primary);
    text-decoration: none;
    font-family: var(--phoenix-font-heading);
    font-weight: 500;
  }

  .breadcrumb a:hover {
    color: var(--phoenix-secondary);
    text-decoration: underline;
  }

  .breadcrumb-item.active {
    color: var(--phoenix-secondary);
    font-family: var(--phoenix-font-heading);
    font-weight: 600;
  }

  /* ═══ CARD STYLING WITH ANIMATIONS ═══ */
  .card {
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    border-radius: var(--phoenix-radius-xl);
    border: 1px solid rgba(210, 193, 182, 0.3);
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: var(--phoenix-blur);
    box-shadow: var(--phoenix-shadow-soft);
  }

  .wallet-card {
    animation: slideInUp 0.6s ease-out;
  }

  .transaction-card {
    animation: slideInUp 0.8s ease-out;
  }

  .card:hover {
    transform: translateY(-4px);
    box-shadow: var(--phoenix-shadow-medium);
  }

  .card-header {
    border-radius: var(--phoenix-radius-xl) var(--phoenix-radius-xl) 0 0 !important;
    background: var(--phoenix-gradient-main);
    color: var(--phoenix-white);
    border-bottom: none;
  }

  /* ═══ WALLET ICON ANIMATION ═══ */
  .wallet-icon {
    width: 40px;
    height: 40px;
    background: var(--phoenix-gradient-main);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--phoenix-white);
    font-size: 1.2rem;
    animation: pulse 2s infinite;
  }

  /* ═══ WALLET VISUAL ANIMATION ═══ */
  .wallet-animation-container {
    perspective: 1000px;
  }

  .wallet-visual {
    width: 120px;
    height: 80px;
    margin: 0 auto;
    position: relative;
    transform-style: preserve-3d;
    animation: floatWallet 3s ease-in-out infinite;
  }

  .wallet-body {
    width: 100%;
    height: 100%;
    background: var(--phoenix-gradient-main);
    border-radius: var(--phoenix-radius-sm);
    position: relative;
    box-shadow: var(--phoenix-shadow-medium);
    overflow: hidden;
  }

  .wallet-fold {
    position: absolute;
    top: 0;
    right: 0;
    width: 30px;
    height: 100%;
    background: linear-gradient(135deg, var(--phoenix-secondary), var(--phoenix-primary));
    border-radius: 0 var(--phoenix-radius-sm) var(--phoenix-radius-sm) 0;
    transform: rotateY(-10deg);
    transform-origin: left center;
  }

  .wallet-bills {
    position: absolute;
    top: 15px;
    left: 15px;
    right: 35px;
  }

  .bill {
    width: 100%;
    height: 8px;
    border-radius: 2px;
    margin-bottom: 3px;
    animation: shimmer 2s infinite;
  }

  .bill-1 {
    background: linear-gradient(90deg, var(--phoenix-success), #2ecc71);
    animation-delay: 0s;
  }

  .bill-2 {
    background: linear-gradient(90deg, var(--phoenix-secondary), #5dade2);
    animation-delay: 0.3s;
    width: 80%;
  }

  .bill-3 {
    background: linear-gradient(90deg, var(--phoenix-warning), #f39c12);
    animation-delay: 0.6s;
    width: 60%;
  }

  .wallet-coins {
    position: absolute;
    bottom: 10px;
    right: 10px;
  }

  .coin {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    position: absolute;
    animation: coinSpin 2s linear infinite;
  }

  .coin-1 {
    background: radial-gradient(circle, var(--phoenix-warning), #f39c12);
    bottom: 0;
    right: 0;
  }

  .coin-2 {
    background: radial-gradient(circle, var(--phoenix-beige), #d4a574);
    bottom: 5px;
    right: 8px;
    animation-delay: 1s;
  }

  /* ═══ BALANCE AMOUNT ANIMATION ═══ */
  .balance-amount {
    background: var(--phoenix-gradient-main);
    background-size: 200% 200%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientShift 3s ease-in-out infinite;
    font-family: var(--phoenix-font-brand);
  }

  /* ═══ DATE/TIME STYLING ═══ */
  .transaction-date {
    font-weight: 600;
    color: var(--phoenix-primary);
    font-size: 0.9rem;
    font-family: var(--phoenix-font-heading);
  }

  .transaction-time {
    font-size: 0.8rem;
    color: var(--phoenix-secondary);
    font-weight: 500;
    font-family: var(--phoenix-font-body);
  }

  /* ═══ TRANSACTION ROW ANIMATIONS ═══ */
  .transaction-row {
    animation: slideInLeft 0.5s ease-out;
    transition: all 0.3s ease;
  }

  .transaction-row:nth-child(odd) {
    animation-delay: 0.1s;
  }

  .transaction-row:nth-child(even) {
    animation-delay: 0.2s;
  }

  .transaction-row:hover {
    background: var(--phoenix-gradient-soft) !important;
    transform: translateX(5px);
  }

  .transaction-amount {
    transition: all 0.3s ease;
    font-family: var(--phoenix-font-heading);
  }

  .transaction-row:hover .transaction-amount {
    font-weight: 600 !important;
    font-size: 1.05em;
  }

  /* ═══ BADGE STYLING ═══ */
  .badge {
    font-weight: 600;
    padding: 0.4em 0.6em;
    transition: all 0.3s ease;
    border-radius: var(--phoenix-radius-sm);
    font-family: var(--phoenix-font-heading);
  }

  .bg-success-subtle {
    background-color: rgba(0, 184, 148, 0.1);
    color: var(--phoenix-success);
  }

  .bg-danger-subtle {
    background-color: rgba(214, 48, 49, 0.1);
    color: var(--phoenix-danger);
  }

  .bg-primary-subtle {
    background-color: rgba(27, 60, 83, 0.1);
    color: var(--phoenix-primary);
  }

  /* ═══ BUTTON STYLING ═══ */
  .btn-outline-info {
    border-color: var(--phoenix-secondary);
    color: var(--phoenix-secondary);
    font-size: 0.8rem;
    padding: 0.25rem 0.5rem;
    border-radius: var(--phoenix-radius-sm);
    font-family: var(--phoenix-font-heading);
    font-weight: 500;
  }

  .btn-outline-info:hover {
    background-color: var(--phoenix-secondary);
    border-color: var(--phoenix-secondary);
    color: var(--phoenix-white);
  }

  /* ═��═ PAGINATION STYLING ═══ */
  .pagination .page-link {
    color: var(--phoenix-primary);
    border: 1px solid rgba(210, 193, 182, 0.4);
    background: rgba(255, 255, 255, 0.9);
    font-family: var(--phoenix-font-heading);
    font-weight: 500;
    border-radius: var(--phoenix-radius-sm);
    margin: 0 0.25rem;
  }

  .pagination .page-item.active .page-link {
    background: var(--phoenix-gradient-main);
    border-color: var(--phoenix-primary);
    color: var(--phoenix-white);
  }

  .pagination .page-item.disabled .page-link {
    color: var(--phoenix-secondary);
    background: rgba(210, 193, 182, 0.2);
  }

  .pagination .page-link:hover {
    background: var(--phoenix-gradient-soft);
    border-color: var(--phoenix-secondary);
    color: var(--phoenix-primary);
  }

  /* ═══ DROPDOWN STYLING ═══ */
  .dropdown-menu {
    border-radius: var(--phoenix-radius-md);
    box-shadow: var(--phoenix-shadow-medium);
    border: 1px solid rgba(210, 193, 182, 0.3);
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: var(--phoenix-blur);
  }

  .dropdown-item {
    font-family: var(--phoenix-font-body);
    color: var(--phoenix-dark);
    transition: all 0.3s ease;
  }

  .dropdown-item:hover {
    background: var(--phoenix-gradient-soft);
    color: var(--phoenix-primary);
  }

  .dropdown-item.active {
    background: var(--phoenix-gradient-main);
    color: var(--phoenix-white);
  }

  /* ═══ ENHANCED REFUND BREAKDOWN STYLING ═══ */
  .refund-breakdown-container {
    background: var(--phoenix-gradient-soft);
    border-top: 3px solid rgba(210, 193, 182, 0.5);
    margin: 0;
  }

  .refund-summary-card, .refund-info-card {
    background: rgba(255, 255, 255, 0.95);
    border-radius: var(--phoenix-radius-sm);
    padding: 1rem;
    box-shadow: var(--phoenix-shadow-soft);
    border: 1px solid rgba(210, 193, 182, 0.3);
  }

  .refund-summary-card h6, .refund-info-card h6 {
    color: var(--phoenix-primary);
    font-weight: 600;
    margin-bottom: 0.75rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid rgba(210, 193, 182, 0.3);
    font-family: var(--phoenix-font-heading);
  }

  .breakdown-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.25rem 0;
  }

  .breakdown-label {
    color: var(--phoenix-secondary);
    font-size: 0.9rem;
    font-family: var(--phoenix-font-body);
  }

  .breakdown-value {
    font-weight: 600;
    font-size: 0.95rem;
    font-family: var(--phoenix-font-heading);
  }

  .info-item {
    margin-bottom: 0.5rem;
  }

  .info-item small {
    display: block;
    margin-bottom: 0.25rem;
    color: var(--phoenix-secondary);
  }

  .transaction-description {
    line-height: 1.4;
    font-family: var(--phoenix-font-body);
  }

  .transaction-row:hover .refund-breakdown-container {
    background: linear-gradient(135deg, #f1f3f4 0%, #e8eaed 100%);
  }

  /* ═══ TABLE STYLING ═══ */
  .table {
    font-family: var(--phoenix-font-body);
  }

  .table thead th {
    background: var(--phoenix-gradient-soft);
    color: var(--phoenix-primary);
    font-family: var(--phoenix-font-heading);
    font-weight: 600;
    border: none;
  }

  .table-hover tbody tr:hover {
    background: var(--phoenix-gradient-soft);
  }

  /* ═══ TEXT STYLING ═══ */
  .text-muted {
    color: var(--phoenix-secondary) !important;
  }

  .text-success {
    color: var(--phoenix-success) !important;
  }

  .text-danger {
    color: var(--phoenix-danger) !important;
  }

  .text-primary {
    color: var(--phoenix-primary) !important;
  }

  .text-info {
    color: var(--phoenix-secondary) !important;
  }

  .fw-bold, .fw-semibold, .fw-medium {
    font-family: var(--phoenix-font-heading);
  }

  /* ═══ KEYFRAME ANIMATIONS ═══ */
  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInLeft {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }

  @keyframes floatWallet {
    0%, 100% {
      transform: translateY(0px) rotateX(5deg);
    }
    50% {
      transform: translateY(-10px) rotateX(-5deg);
    }
  }

  @keyframes shimmer {
    0%, 100% {
      opacity: 0.8;
    }
    50% {
      opacity: 1;
      box-shadow: 0 0 10px currentColor;
    }
  }

  @keyframes coinSpin {
    0% {
      transform: rotateY(0deg);
    }
    100% {
      transform: rotateY(360deg);
    }
  }

  @keyframes gradientShift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  @keyframes countUp {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* ═══ LOADING ANIMATION FOR BALANCE ═══ */
  .balance-loading {
    animation: countUp 2s ease-out;
  }

  /* ═══ COLLAPSE ANIMATION ═══ */
  .collapse {
    transition: all 0.3s ease;
  }

  .collapsing {
    transition: height 0.3s ease;
  }

  /* ═══ RESPONSIVE DESIGN ═══ */
  @media (max-width: 991px) {
    .phoenix-sidebar {
      margin-bottom: 2rem;
    }
  }

  @media (max-width: 575.98px) {
    .phoenix-container {
      padding: 1rem 0;
    }
  }
</style>

<script>
// Toast configuration
const Toast = Swal.mixin({
  toast: true,
  position: "bottom-end",
  showConfirmButton: false,
  timer: 3000,
  timerProgressBar: true,
  didOpen: (toast) => {
    toast.addEventListener("mouseenter", Swal.stopTimer);
    toast.addEventListener("mouseleave", Swal.resumeTimer);
  },
});

// Validation helper functions
function setInvalid(element, errorElement, message) {
  element.classList.add("is-invalid");
  element.classList.remove("is-valid");
  errorElement.textContent = message;
}

function setValid(element, errorElement) {
  element.classList.add("is-valid");
  element.classList.remove("is-invalid");
  errorElement.textContent = "";
}

function clearValidation(element, errorElement) {
  element.classList.remove("is-invalid", "is-valid");
  errorElement.textContent = "";
}

// Animated balance counter
function animateBalance() {
  const balanceElement = document.querySelector('.balance-amount');
  const targetBalance = parseInt(balanceElement.dataset.balance);
  let currentBalance = 0;
  const increment = targetBalance / 50;
  const timer = setInterval(() => {
    currentBalance += increment;
    if (currentBalance >= targetBalance) {
      currentBalance = targetBalance;
      clearInterval(timer);
    }
    balanceElement.textContent = `₹${currentBalance.toFixed(2)}`;
  }, 40);
  
  balanceElement.classList.add('balance-loading');
}

// Simple wallet JavaScript
document.addEventListener('DOMContentLoaded', function() {
  // Animate balance on load
  const balanceElement = document.querySelector('.balance-amount');
  if (balanceElement) {
    const targetBalance = parseFloat(balanceElement.getAttribute('data-balance'));
    animateBalance(0, targetBalance, balanceElement);
  }
});



function animateBalance(start, end, element) {
  const duration = 1000;
  const startTime = performance.now();

  function update(currentTime) {
    const elapsed = currentTime - startTime;
    const progress = Math.min(elapsed / duration, 1);

    const current = start + (end - start) * progress;
    element.textContent = `₹${current.toFixed(2)}`;

    if (progress < 1) {
      requestAnimationFrame(update);
    }
  }

  requestAnimationFrame(update);
}



</script>

<%- include("../partials/user/footer") %>