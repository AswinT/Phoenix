<%- include('../partials/admin/sidebar') %>

<!-- Main Content -->
<div class="main-content">
  <div class="page-header d-flex justify-content-between align-items-center">
    <div>
      <h1 class="page-title">Sales Report</h1>
      <p class="text-muted mb-0">Track and analyze your sales performance with detailed reports.</p>
    </div>
    <button class="toggle-sidebar d-lg-none">
      <i class="ri-menu-line"></i>
    </button>
  </div>

  <!-- Filter Section -->
  <div class="row mb-4">
    <div class="col-12">
      <div class="chart-card">
        <div class="chart-header">
          <h2 class="chart-title">Report Filters</h2>
          <div class="export-buttons">
            <button class="btn btn-success btn-sm me-2" id="downloadExcel">
              <i class="ri-file-excel-line me-1"></i>Excel
            </button>
            <button class="btn btn-danger btn-sm" id="downloadPdf">
              <i class="ri-file-pdf-line me-1"></i>PDF
            </button>
          </div>
        </div>
        <div class="row g-3">
          <div class="col-md-3">
            <label class="form-label">Report Type</label>
            <select class="form-select" id="reportType">
              <option value="daily" <%= reportType === 'daily' ? 'selected' : '' %>>Daily</option>
              <option value="weekly" <%= reportType === 'weekly' ? 'selected' : '' %>>Weekly</option>
              <option value="monthly" <%= reportType === 'monthly' ? 'selected' : '' %>>Monthly</option>
              <option value="yearly" <%= reportType === 'yearly' ? 'selected' : '' %>>Yearly</option>
              <option value="custom" <%= reportType === 'custom' ? 'selected' : '' %>>Custom Date Range</option>
            </select>
          </div>
          <div class="col-md-3">
            <label class="form-label">From Date</label>
            <input type="date" class="form-control" id="fromDate" value="<%= fromDate %>" <%= reportType !== 'custom' ? 'disabled' : '' %>>
          </div>
          <div class="col-md-3">
            <label class="form-label">To Date</label>
            <input type="date" class="form-control" id="toDate" value="<%= toDate %>" <%= reportType !== 'custom' ? 'disabled' : '' %>>
          </div>
          <div class="col-md-3">
            <label class="form-label">Quick Filter</label>
            <select class="form-select" id="quickFilter">
              <option value="">Select Period</option>
              <option value="today" <%= quickFilter === 'today' ? 'selected' : '' %>>Today</option>
              <option value="yesterday" <%= quickFilter === 'yesterday' ? 'selected' : '' %>>Yesterday</option>
              <option value="last7days" <%= quickFilter === 'last7days' ? 'selected' : '' %>>Last 7 Days</option>
              <option value="last30days" <%= quickFilter === 'last30days' ? 'selected' : '' %>>Last 30 Days</option>
              <option value="thismonth" <%= quickFilter === 'thismonth' ? 'selected' : '' %>>This Month</option>
              <option value="lastmonth" <%= quickFilter === 'lastmonth' ? 'selected' : '' %>>Last Month</option>
              <option value="thisyear" <%= quickFilter === 'thisyear' ? 'selected' : '' %>>This Year</option>
            </select>
          </div>
          <% if (reportType === 'custom') { %>
          <div class="col-md-12 mt-3 text-end">
            <button type="button" class="btn btn-primary btn-sm" onclick="applyDateFilter()">
              <i class="ri-filter-3-line me-1"></i>Apply Filter
            </button>
          </div>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <!-- Summary Stats -->
  <div class="row g-4 mb-4">
    <div class="col-sm-6 col-lg-3">
      <div class="stat-card">
        <div class="icon sales">
          <i class="ri-money-dollar-circle-line"></i>
        </div>
        <h2 class="stat-title">Total Sales</h2>
        <p class="stat-value" id="totalSales"><%= summaryStats.totalSales %></p>
        <div class="text-muted small">
          <i class="ri-calendar-line"></i> Selected period
        </div>
      </div>
    </div>

    <div class="col-sm-6 col-lg-3">
      <div class="stat-card">
        <div class="icon orders">
          <i class="ri-shopping-bag-line"></i>
        </div>
        <h2 class="stat-title">Total Orders</h2>
        <p class="stat-value" id="totalOrders"><%= summaryStats.totalOrders %></p>
        <div class="text-muted small">
          <i class="ri-calendar-line"></i> Selected period
        </div>
      </div>
    </div>

    <div class="col-sm-6 col-lg-3">
      <div class="stat-card">
        <div class="icon pending">
          <i class="ri-coupon-2-line"></i>
        </div>
        <h2 class="stat-title">Total Discounts</h2>
        <p class="stat-value" id="totalDiscounts"><%= summaryStats.totalDiscounts %></p>
        <div class="text-muted small">
          <i class="ri-calendar-line"></i> Selected period
        </div>
      </div>
    </div>

    <div class="col-sm-6 col-lg-3">
      <div class="stat-card">
        <div class="icon users">
          <i class="ri-bar-chart-line"></i>
        </div>
        <h2 class="stat-title">Average Order Value</h2>
        <p class="stat-value" id="avgOrderValue"><%= summaryStats.avgOrderValue %></p>
        <div class="text-muted small">
          <i class="ri-calculator-line"></i> Per order
        </div>
      </div>
    </div>
  </div>

  <!-- Detailed Sales Report Table -->
  <div class="row">
    <div class="col-12">
      <div class="chart-card">
        <div class="chart-header">
          <h2 class="chart-title">Detailed Sales Report</h2>
          <div class="d-flex align-items-center gap-2">
            <span class="small text-muted">Show:</span>
            <select class="form-select form-select-sm" id="entriesPerPage" style="width: auto;" onchange="changeLimit(this.value)">
              <option value="10" <%= limit === 10 ? 'selected' : '' %>>10</option>
              <option value="25" <%= limit === 25 ? 'selected' : '' %>>25</option>
              <option value="50" <%= limit === 50 ? 'selected' : '' %>>50</option>
              <option value="100" <%= limit === 100 ? 'selected' : '' %>>100</option>
            </select>
            <span class="small text-muted">entries</span>
          </div>
        </div>

        <div class="table-responsive">
          <table class="table table-hover align-middle" id="salesTable">
            <thead class="table-light">
              <tr>
                <th>Date</th>
                <th>Order ID</th>
                <th>Customer</th>
                <th class="d-none-mobile">Items</th>
                <th>Amount</th>
                <th class="d-none-mobile">Discount</th>
                <th class="d-none-mobile">Coupon</th>
                <th class="d-none d-lg-table-cell">Payment</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody id="salesTableBody">
              <% if (salesTableData && salesTableData.orders && salesTableData.orders.length > 0) { %>
                <% salesTableData.orders.forEach(order => { %>
                  <tr>
                    <td>
                      <div><%= order.date %></div>
                      <div class="small text-muted d-md-none">Items: <%= order.totalItems %></div>
                    </td>
                    <td>
                      <div class="fw-semibold"><%= order.orderNumber %></div>
                      <div class="small text-muted d-lg-none"><%= order.paymentMethod %></div>
                    </td>
                    <td>
                      <div><%= order.customerName %></div>
                      <div class="small text-muted d-md-none">
                        <% if (order.discount !== 'â‚¹0') { %>Disc: <%= order.discount %><% } %>
                        <% if (order.couponCode !== '-') { %>| <%= order.couponCode %><% } %>
                      </div>
                    </td>
                    <td class="d-none-mobile"><%= order.totalItems %></td>
                    <td><%= order.netAmount %></td>
                    <td class="d-none-mobile"><%= order.discount %></td>
                    <td class="d-none-mobile"><%= order.couponCode %></td>
                    <td class="d-none d-lg-table-cell"><%= order.paymentMethod %></td>
                    <td><%- order.status %></td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="9" class="text-center text-muted py-4">
                    <i class="ri-inbox-line fs-1 d-block mb-2"></i>
                    No sales data found for the selected period
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>

        <!-- Pagination -->
        <% if (salesTableData && salesTableData.pagination) { %>
        <div class="d-flex justify-content-between align-items-center mt-3">
          <div class="text-muted small">
            Showing <span id="showingStart"><%= salesTableData.pagination.showingStart %></span> to <span id="showingEnd"><%= salesTableData.pagination.showingEnd %></span> of <span id="totalEntries"><%= salesTableData.pagination.totalOrders %></span> entries
          </div>
          <nav>
            <ul class="pagination pagination-sm mb-0">
              <li class="page-item <%= !salesTableData.pagination.hasPrev ? 'disabled' : '' %>">
                <a class="page-link" href="javascript:void(0)" onclick="goToPage(<%= salesTableData.pagination.prevPage %>)" tabindex="-1">Previous</a>
              </li>

              <%
                const startPage = Math.max(1, salesTableData.pagination.currentPage - 2);
                const endPage = Math.min(salesTableData.pagination.totalPages, salesTableData.pagination.currentPage + 2);
              %>

              <% for (let i = startPage; i <= endPage; i++) { %>
                <li class="page-item <%= i === salesTableData.pagination.currentPage ? 'active' : '' %>">
                  <a class="page-link" href="javascript:void(0)" onclick="goToPage(<%= i %>)"><%= i %></a>
                </li>
              <% } %>

              <li class="page-item <%= !salesTableData.pagination.hasNext ? 'disabled' : '' %>">
                <a class="page-link" href="javascript:void(0)" onclick="goToPage(<%= salesTableData.pagination.nextPage %>)">Next</a>
              </li>
            </ul>
          </nav>
        </div>
        <% } %>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

<script>
// Mobile navigation is handled by the sidebar partial

// Helper function for pagination
function goToPage(page) {
  const params = new URLSearchParams(window.location.search);
  params.set('page', page);
  
  window.location.href = window.location.pathname + '?' + params.toString();
}

// Date range functionality
document.getElementById('reportType').addEventListener('change', function() {
  const reportType = this.value;
  const customRange = reportType === 'custom';

  // Enable/disable date inputs based on selection
  document.getElementById('fromDate').disabled = !customRange;
  document.getElementById('toDate').disabled = !customRange;

  // If not custom, clear the quick filter and apply the report type
  if (!customRange) {
    document.getElementById('quickFilter').value = '';

    // Build query parameters for predefined report types
    const params = new URLSearchParams(window.location.search);
    params.set('reportType', reportType);
    params.delete('quickFilter');
    params.delete('fromDate');
    params.delete('toDate');
    params.set('page', '1'); // Reset to first page on filter change
    
    // Keep the entries per page setting
    const currentLimit = document.getElementById('entriesPerPage').value;
    params.set('limit', currentLimit);

    // Reload page with new report type
    window.location.href = window.location.pathname + '?' + params.toString();
  }
});

// Quick filter functionality
document.getElementById('quickFilter').addEventListener('change', function() {
  const value = this.value;
  if (!value) return;
  
  const today = new Date();
  let fromDate, toDate;

  switch(value) {
    case 'today':
      fromDate = toDate = today.toISOString().split('T')[0];
      break;
    case 'yesterday':
      const yesterday = new Date(today);
      yesterday.setDate(yesterday.getDate() - 1);
      fromDate = toDate = yesterday.toISOString().split('T')[0];
      break;
    case 'last7days':
      toDate = today.toISOString().split('T')[0];
      const sevenDaysAgo = new Date(today);
      sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 6);
      fromDate = sevenDaysAgo.toISOString().split('T')[0];
      break;
    case 'last30days':
      toDate = new Date().toISOString().split('T')[0];
      const thirtyDaysAgo = new Date();
      thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 29);
      fromDate = thirtyDaysAgo.toISOString().split('T')[0];
      break;
    case 'thismonth':
      const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);
      fromDate = firstDay.toISOString().split('T')[0];
      toDate = today.toISOString().split('T')[0];
      break;
    case 'lastmonth':
      const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
      const lastDayOfLastMonth = new Date(today.getFullYear(), today.getMonth(), 0);
      fromDate = lastMonth.toISOString().split('T')[0];
      toDate = lastDayOfLastMonth.toISOString().split('T')[0];
      break;
    case 'thisyear':
      fromDate = new Date(today.getFullYear(), 0, 1).toISOString().split('T')[0];
      toDate = today.toISOString().split('T')[0];
      break;
  }

  if (fromDate && toDate) {
    document.getElementById('fromDate').value = fromDate;
    document.getElementById('toDate').value = toDate;

    // Apply the filter
    applyDateFilter();
  }
});

// Function to apply date filters
function applyDateFilter() {
  const fromDate = document.getElementById('fromDate').value;
  const toDate = document.getElementById('toDate').value;
  const quickFilter = document.getElementById('quickFilter').value;
  const reportType = document.getElementById('reportType').value;
  const currentLimit = document.getElementById('entriesPerPage').value;

  // Build query parameters
  const params = new URLSearchParams();
  params.set('page', '1'); // Reset to first page on filter change
  params.set('limit', currentLimit);

  if (fromDate && toDate && reportType === 'custom') {
    // Custom date range
    params.append('fromDate', fromDate);
    params.append('toDate', toDate);
    params.append('reportType', 'custom');
  } else if (quickFilter) {
    // Quick filter (overrides report type)
    params.append('quickFilter', quickFilter);
  } else if (reportType && reportType !== 'custom') {
    // Predefined report type
    params.append('reportType', reportType);
  }

  // Reload page with new parameters
  window.location.href = window.location.pathname + '?' + params.toString();
}

// PDF Download functionality
document.getElementById('downloadPdf').addEventListener('click', function() {
  // Build current filter parameters
  const params = new URLSearchParams();
  const fromDate = document.getElementById('fromDate').value;
  const toDate = document.getElementById('toDate').value;
  const quickFilter = document.getElementById('quickFilter').value;
  const reportType = document.getElementById('reportType').value;

  if (fromDate && toDate && reportType === 'custom') {
    params.append('fromDate', fromDate);
    params.append('toDate', toDate);
    params.append('reportType', 'custom');
  } else if (quickFilter) {
    params.append('quickFilter', quickFilter);
  } else if (reportType && reportType !== 'custom') {
    params.append('reportType', reportType);
  }

  // Open PDF export in new window
  const exportUrl = '/admin/sales/export/pdf?' + params.toString();
  window.open(exportUrl, '_blank');
});

// Excel Download functionality
document.getElementById('downloadExcel').addEventListener('click', function() {
  // Build current filter parameters
  const params = new URLSearchParams();
  const fromDate = document.getElementById('fromDate').value;
  const toDate = document.getElementById('toDate').value;
  const quickFilter = document.getElementById('quickFilter').value;
  const reportType = document.getElementById('reportType').value;

  if (fromDate && toDate && reportType === 'custom') {
    params.append('fromDate', fromDate);
    params.append('toDate', toDate);
    params.append('reportType', 'custom');
  } else if (quickFilter) {
    params.append('quickFilter', quickFilter);
  } else if (reportType && reportType !== 'custom') {
    params.append('reportType', reportType);
  }

  // Trigger Excel download
  const exportUrl = '/admin/sales/export/excel?' + params.toString();
  window.location.href = exportUrl;
});

// Function to change entries per page
function changeLimit(newLimit) {
  const params = new URLSearchParams(window.location.search);
  params.set('limit', newLimit);
  params.set('page', '1'); // Reset to first page when changing limit
  window.location.href = window.location.pathname + '?' + params.toString();
}
</script>

<style>
/* Enhanced styles for sales page */

.stat-card {
  background: #fff;
  border-radius: 8px;
  padding: 1.25rem;
  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  margin-bottom: 1.5rem;
}

.stat-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
}

.stat-card .icon {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 15px;
  color: #fff;
  font-size: 1.5rem;
}

.icon.sales {
  background: linear-gradient(45deg, #4361ee, #3a0ca3);
}

.icon.orders {
  background: linear-gradient(45deg, #4cc9f0, #4895ef);
}

.icon.pending {
  background: linear-gradient(45deg, #f72585, #b5179e);
}

.icon.users {
  background: linear-gradient(45deg, #ff9e00, #ff7a00);
}

.stat-title {
  font-size: 0.875rem;
  color: #6c757d;
  margin-bottom: 5px;
}

.stat-value {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 5px;
  color: #212529;
}

.chart-card {
  background: #fff;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  margin-bottom: 1.5rem;
}

.chart-header {
  padding: 1rem;
  background: #f8f9fa;
  border-bottom: 1px solid #eaeaea;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.chart-title {
  margin: 0;
  font-size: 1rem;
  font-weight: 600;
  color: #212529;
}

.table {
  margin-bottom: 0;
}

.table th {
  font-weight: 600;
  padding: 0.75rem 1rem;
  background-color: #f8f9fa;
  color: #495057;
  white-space: nowrap;
}

.table td {
  padding: 0.75rem 1rem;
  vertical-align: middle;
}

.table tr:hover {
  background-color: rgba(67, 97, 238, 0.05);
}

.badge {
  font-size: 0.75rem;
  font-weight: 500;
  padding: 0.35em 0.65em;
}

.page-link {
  color: #4361ee;
  padding: 0.375rem 0.75rem;
}

.page-item.active .page-link {
  background-color: #4361ee;
  border-color: #4361ee;
}

.form-select:focus, .form-control:focus {
  border-color: #4361ee;
  box-shadow: 0 0 0 0.2rem rgba(67, 97, 238, 0.25);
}

.btn-primary {
  background-color: #4361ee;
  border-color: #4361ee;
}

.btn-primary:hover {
  background-color: #3a56d6;
  border-color: #3a56d6;
}

@media (max-width: 768px) {
  .d-none-mobile {
    display: none;
  }

  .chart-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }

  .chart-header .d-flex {
    margin-top: 0.5rem;
  }
}
</style>