<%- include('../partials/admin/sidebar') %>

<div class="main-content">
  <!-- Success/Error Messages -->
  <% if (typeof successMessage !== 'undefined' && successMessage) { %>
    <div class="alert alert-success alert-dismissible fade show" role="alert">
      <i class="ri-check-circle-line"></i>
      <%= successMessage %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>
  
  <% if (typeof errorMessage !== 'undefined' && errorMessage) { %>
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
      <i class="ri-error-warning-line"></i>
      <%= errorMessage %>
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  <% } %>

  <div class="page-header">
    <div>
      <h1 class="page-title">Product Management</h1>
      <p class="page-subtitle">Add, edit and manage your headphone inventory</p>
    </div>
    <div class="header-actions">
      <a href="/admin/products/add" class="btn-primary">
        <i class="ri-add-line"></i>
        Add New Product
      </a>
    </div>
  </div>

  <div class="content-card">
    <div class="search-container mb-3">
      <input
        type="text"
        class="search-input"
        placeholder="Search products, brands, categories..."
        value="<%= search %>"
      />
      <i class="ri-search-line search-icon"></i>
      <% if (search && search.length > 0) { %>
      <button class="clear-search-btn" type="button" title="Clear search">
        <i class="ri-close-line"></i>
      </button>
      <% } %>
    </div>

    <div class="filters">
      <div class="filter-group">
        <label class="form-label">Category</label>
        <select class="form-select" id="categoryFilter">
          <option value="">All Categories</option>
          <% categories.forEach(category => { %>
          <option
            value="<%= category._id %>"
            <%= categoryFilter === category._id.toString() ? 'selected' : '' %>
          >
            <%= category.name %>
          </option>
          <% }) %>
        </select>
      </div>

      <div class="filter-group">
        <label class="form-label">Sort By</label>
        <select class="form-select" id="sortBy">
          <option value="newest" <%= sortBy === 'newest' ? 'selected' : '' %>>Newest First</option>
          <option value="oldest" <%= sortBy === 'oldest' ? 'selected' : '' %>>Oldest First</option>
          <option value="price-low" <%= sortBy === 'price-low' ? 'selected' : '' %>>Price Low to High</option>
          <option value="price-high" <%= sortBy === 'price-high' ? 'selected' : '' %>>Price High to Low</option>
          <option value="stock-high" <%= sortBy === 'stock-high' ? 'selected' : '' %>>Stock High to Low</option>
        </select>
      </div>
    </div>
  </div>

  <div class="table-container">
    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th class="d-none-mobile">ID</th>
            <th>Image</th>
            <th>Product</th>
            <th class="d-none-mobile">Brand</th>
            <th class="d-none-mobile">Category</th>
            <th>Price</th>
            <th class="d-none-mobile">Regular</th>
            <th class="d-none-mobile">Stock</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% if (products && products.length > 0) { %>
          <% products.forEach((product, index) => { %>
          <tr>
            <td class="d-none-mobile"><%= (currentPage - 1) * limit + index + 1 %></td>
            <td>
              <img
                src="<%= product.mainImage %>"
                alt="<%= product.model %>"
                class="product-image"
                style="width: 50px; height: 50px; object-fit: cover; border-radius: 8px;"
              />
            </td>
            <td>
              <div class="fw-semibold"><%= product.model %></div>
              <div class="small text-muted d-md-none">
                <%= product.brand %> | <%= product.category ? product.category.name : 'N/A' %>
              </div>
              <div class="small text-muted d-md-none">
                Stock: <%= product.stock %> | Reg: ₹<%= product.regularPrice.toFixed(2) %>
              </div>
            </td>
            <td class="d-none-mobile"><%= product.brand %></td>
            <td class="d-none-mobile"><%= product.category ? product.category.name : 'N/A' %></td>
            <td>₹<%= product.salePrice.toFixed(2) %></td>
            <td class="d-none-mobile">₹<%= product.regularPrice.toFixed(2) %></td>
            <td class="d-none-mobile"><%= product.stock %></td>
            <td>
              <label class="toggle-switch">
                <input
                  type="checkbox"
                  <%= product.isListed ? 'checked' : '' %>
                  data-product-id="<%= product._id %>"
                  class="toggle-status"
                />
                <span class="toggle-slider"></span>
              </label>
            </td>
            <td>
              <div class="d-flex gap-2">
                <button class="btn-action btn-edit" data-id="<%= product._id %>" title="Edit">
                  <i class="ri-edit-line"></i>
                </button>
                <button class="btn-action btn-delete" data-id="<%= product._id %>" title="Delete">
                  <i class="ri-delete-bin-line"></i>
                </button>
              </div>
            </td>
          </tr>
          <% }) %>
          <% } else { %>
          <tr>
            <td colspan="10" class="text-center py-4">
              <i class="ri-inbox-line fs-1 d-block mb-2 text-muted"></i>
              <span class="text-muted">No products found</span>
            </td>
          </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-3">
      <div class="text-muted small">
        Showing <%= products.length %> of <%= totalProducts %> products
        (Page <%= currentPage %> of <%= totalPages %>)
      </div>
      <% if (totalPages > 0) { %>
      <nav>
        <ul class="pagination mb-0">
          <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
            <a
              href="?page=<%= Math.max(1, currentPage - 1) %>&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>"
              class="page-link"
            >
              <i class="ri-arrow-left-line"></i> Previous
            </a>
          </li>
          <%
            const maxPagesToShow = 5;
            const halfMax = Math.floor(maxPagesToShow / 2);
            let startPage = Math.max(1, currentPage - halfMax);
            let endPage = Math.min(totalPages, currentPage + halfMax);

            if (endPage - startPage + 1 < maxPagesToShow) {
              startPage = Math.max(1, endPage - maxPagesToShow + 1);
            }

            if (startPage > 1) { %>
              <li class="page-item">
                <a href="?page=1&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>" class="page-link">1</a>
              </li>
              <% if (startPage > 2) { %>
                <li class="page-item disabled">
                  <span class="page-link">...</span>
                </li>
              <% } %>
            <% }

            for (let i = startPage; i <= endPage; i++) { %>
              <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                <a
                  href="?page=<%= i %>&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>"
                  class="page-link"
                >
                  <%= i %>
                </a>
              </li>
            <% }

            if (endPage < totalPages) { %>
              <% if (endPage < totalPages - 1) { %>
                <li class="page-item disabled">
                  <span class="page-link">...</span>
                </li>
              <% } %>
              <li class="page-item">
                <a href="?page=<%= totalPages %>&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>" class="page-link"><%= totalPages %></a>
              </li>
            <% } %>

          <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
            <a
              href="?page=<%= Math.min(totalPages, currentPage + 1) %>&search=<%= encodeURIComponent(search) %>&category=<%= categoryFilter %>&sort=<%= sortBy %>"
              class="page-link"
            >
              Next <i class="ri-arrow-right-line"></i>
            </a>
          </li>
        </ul>
      </nav>
      <% } %>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Search functionality
    const searchInput = document.querySelector('.search-input');
    searchInput.addEventListener('input', function () {
      const category = document.getElementById('categoryFilter').value;
      const sort = document.getElementById('sortBy').value;
      window.location.href = `/admin/products?search=${encodeURIComponent(this.value)}&category=${category}&sort=${sort}&page=1`;
    });

    // Clear search functionality
    const clearSearchBtn = document.querySelector('.clear-search-btn');
    if (clearSearchBtn) {
      clearSearchBtn.addEventListener('click', function () {
        const category = document.getElementById('categoryFilter').value;
        const sort = document.getElementById('sortBy').value;
        window.location.href = `/admin/products?search=&category=${category}&sort=${sort}&page=1`;
      });
    }

    // Filter and Sort functionality
    document.getElementById('categoryFilter').addEventListener('change', function () {
      const search = document.querySelector('.search-input').value;
      const sort = document.getElementById('sortBy').value;
      window.location.href = `/admin/products?search=${encodeURIComponent(search)}&category=${this.value}&sort=${sort}&page=1`;
    });

    document.getElementById('sortBy').addEventListener('change', function () {
      const search = document.querySelector('.search-input').value;
      const category = document.getElementById('categoryFilter').value;
      window.location.href = `/admin/products?search=${encodeURIComponent(search)}&category=${category}&sort=${this.value}&page=1`;
    });

    // Toggle Product Status
    const toggleSwitches = document.querySelectorAll('.toggle-status');
    toggleSwitches.forEach((toggle) => {
      toggle.addEventListener('change', async function () {
        const productId = this.getAttribute('data-product-id');
        const isListed = this.checked;

        try {
          const response = await fetch(`/admin/products/${productId}/toggle`, {
            method: 'PUT',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ isListed }),
          });
          const data = await response.json();

          if (response.ok) {
            Swal.fire({
              toast: true,
              position: 'top-end',
              showConfirmButton: false,
              timer: 3000,
              icon: 'success',
              title: data.message,
            });
          } else {
            this.checked = !isListed; // Revert toggle
            Swal.fire({
              title: 'Error!',
              text: data.error || 'Failed to toggle status',
              icon: 'error',
            });
          }
        } catch (error) {
          this.checked = !isListed; // Revert toggle
          Swal.fire({
            title: 'Error!',
            text: 'Server Error',
            icon: 'error',
          });
        }
      });
    });

    // Edit Product
    document.querySelectorAll('.btn-edit').forEach(button => {
      button.addEventListener('click', function () {
        const productId = this.getAttribute('data-id');
        window.location.href = `/admin/products/${productId}/edit`;
      });
    });

    // Soft Delete Product
    document.querySelectorAll('.btn-delete').forEach(button => {
      button.addEventListener('click', async function () {
        const productId = this.getAttribute('data-id');
        const confirmed = await Swal.fire({
          title: 'Are you sure?',
          text: 'This will soft delete the product (it can be restored later).',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#4361EE',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, delete it!',
          cancelButtonText: 'Cancel',
        });

        if (confirmed.isConfirmed) {
          try {
            const response = await fetch(`/admin/products/${productId}/soft-delete`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json',
              },
            });
            const data = await response.json();

            if (response.ok) {
              Swal.fire({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                icon: 'success',
                title: data.message,
              }).then(() => {
                window.location.reload();
              });
            } else {
              Swal.fire({
                title: 'Error!',
                text: data.error || 'Failed to delete product',
                icon: 'error',
              });
            }
          } catch (error) {
            console.error('Fetch error:', error);
            Swal.fire({
              title: 'Error!',
              text: 'Server Error: ' + error.message,
              icon: 'error',
            });
          }
        }
      });
    });
  });
</script>

<style>
/* Clear search button styling */
.clear-search-btn {
  position: absolute;
  right: 3rem;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: var(--secondary);
  cursor: pointer;
  padding: 0.25rem;
  border-radius: 4px;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
}

.clear-search-btn:hover {
  color: var(--danger);
  background-color: rgba(220, 53, 69, 0.1);
}

.clear-search-btn i {
  font-size: 14px;
}
</style>