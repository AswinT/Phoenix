<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Login - Phoenix</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

   <link rel="stylesheet" href="/styles/admin/adminLogin.css">
      
  </head>
  <body
    class="paper-texture d-flex align-items-center justify-content-center min-vh-100 py-3"
  >
    <div class="container">
      <div class="login-container mx-auto bg-white row">
        <!-- Left image side -->
        <div class="col-md-5 p-0 image-side d-none d-md-block">
          <div class="overlay">
            <div class="text-white">
              <h2 class="h3 fw-bold mb-1">Admin Portal</h2>
              <p class="mb-0 small">Manage your Phoenix headphone store</p>
            </div>
          </div>
        </div>

        <!-- Right form side -->
        <div class="col-12 col-md-7 form-side">
          <div class="text-center mb-4">
            <div class="d-flex align-items-center justify-content-center mb-2">
              <img
                src="/assets/phoenix-logo.png"
                alt="Phoenix Logo"
                class="me-2" width="40" height="40"
              />
              <span class="logo-text fs-4">PHOENIX</span>
              <span class="admin-badge ms-2">ADMIN</span>
            </div>
            <h2 class="fw-bold h4">Admin Login</h2>
            <p class="text-muted small mb-3">Access dashboard and controls</p>
          </div>

          <form id="adminLogin" method="post" action="/admin/auth/login" data-validation="true">
            <div class="compact-mb">
              <label for="email" class="form-label">Admin Email</label>
              <input
                type="email"
                name="email"
                class="form-control form-control-sm"
                id="email"
                placeholder="Enter admin email"
              />
              <div id="emailError" class="text-danger small mt-1"></div>
            </div>
            <div class="compact-mb">
              <label for="password" class="form-label">Password</label>
              <div class="input-group">
                <input
                  type="password"
                  name="password"
                  class="form-control form-control-sm"
                  id="password"
                  placeholder="Enter your password"
                />
                <button class="btn btn-outline-secondary btn-sm toggle-password" type="button" tabindex="-1">
                  <i class="ri-eye-off-line"></i>
                </button>
              </div>
              <div id="passwordError" class="text-danger small mt-1"></div>
            </div>

            <a href="/admin/forgot-password" class="forgot-password text-decoration-none"
              >Forgot password?</a
            >

            <button
              type="submit"
              class="btn btn-primary btn-sm w-100 mb-2 py-2"
            >
              Login to Admin
            </button>
            
            <div class="admin-notify text-center mt-3">
              <i class="ri-shield-check-line me-1"></i> This portal is for authorized administrators only
            </div>
          </form>

          <div class="text-center mt-3">
            <p class="small text-muted mb-0">
              Need customer access?
              <a href="/login" class="text-decoration-none fw-medium">Customer Login</a>
            </p>
          </div>
        </div>
      </div>
    </div>
    <script src="/js/validationErrorHandler.js"></script>
    <script>
      // Validation helper functions
      function setInvalid(element, errorElement, message) {
        element.classList.add('is-invalid');
        element.classList.remove('is-valid');
        if (errorElement) errorElement.textContent = message;
      }

      function setValid(element, errorElement) {
        element.classList.add('is-valid');
        element.classList.remove('is-invalid');
        if (errorElement) errorElement.textContent = '';
      }

      function clearValidation(element, errorElement) {
        element.classList.remove('is-invalid', 'is-valid');
        if (errorElement) errorElement.textContent = '';
      }

      // Check for error parameters in URL
      document.addEventListener('DOMContentLoaded', function() {
        // Get form elements
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const emailError = document.getElementById('emailError');
        const passwordError = document.getElementById('passwordError');

        // Email validation
        emailInput.addEventListener('input', function() {
          const email = this.value.trim();
          const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;

          if (!email) {
            clearValidation(this, emailError);
          } else if (!emailRegex.test(email)) {
            setInvalid(this, emailError, 'Please enter a valid email address');
          } else {
            setValid(this, emailError);
          }
        });

        // Password validation
        passwordInput.addEventListener('input', function() {
          const password = this.value;

          if (!password) {
            clearValidation(this, passwordError);
          } else if (password.length < 6) {
            setInvalid(this, passwordError, 'Password must be at least 6 characters');
          } else {
            setValid(this, passwordError);
          }
        });
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get('error');

        if (error === 'admin_blocked') {
          Swal.fire({
            icon: 'error',
            title: 'Account Blocked',
            text: 'Your admin account has been blocked. Please contact support.',
            confirmButtonText: 'OK'
          });
        }
      });

      // Password toggle functionality
      document.querySelectorAll('.toggle-password').forEach(button => {
        button.addEventListener('click', function() {
          const input = this.previousElementSibling;
          const icon = this.querySelector('i');

          if (input.type === 'password') {
            input.type = 'text';
            icon.classList.replace('ri-eye-off-line', 'ri-eye-line');
          } else {
            input.type = 'password';
            icon.classList.replace('ri-eye-line', 'ri-eye-off-line');
          }
        });
      });

      document
        .getElementById("adminLogin")
        .addEventListener("submit", async (event) => {
          event.preventDefault();

          const emailInput = document.getElementById("email");
          const passwordInput = document.getElementById("password");
          const emailError = document.getElementById("emailError");
          const passwordError = document.getElementById("passwordError");

          const email = emailInput.value.trim();
          const password = passwordInput.value.trim();

          // Clear previous errors
          clearValidation(emailInput, emailError);
          clearValidation(passwordInput, passwordError);

          let isValid = true;

          if (!email || !/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(email)) {
            setInvalid(emailInput, emailError, "Valid email is required");
            isValid = false;
          }

          if (!password || password.length < 6) {
            setInvalid(passwordInput, passwordError, "Password must be at least 6 characters");
            isValid = false;
          }

          if (isValid) {
            try {
              const response = await fetch("/admin/auth/login", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  email,
                  password,
                }),
              });

              const result = await response.json();
              if (result.success) {
                Swal.fire({
                  icon: "success",
                  title: "Admin Login Successful",
                  text: result.message || 'Welcome to Phoenix Admin',
                  confirmButtonText: "Go to Dashboard",
                })
                 .then(() => {
                  window.location.href = "/admin/dashboard";
                });
              } else {
                Swal.fire({
                  icon: "error",
                  title: "Admin Login Error",
                  text: result.message || "Invalid credentials or insufficient permissions",
                });
              }
            } catch (error) {
              console.log("Admin login error", error);
              Swal.fire({
                icon: "error",
                title: "Server Error",
                text: "Server not responding. Try again later.",
              });
            }
          }
        });
    </script>
  </body>
</html>