<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> - Phoenix Admin</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', sans-serif;
    }

    body {
      background-color: #f9fafb;
      color: #1f2937;
    }

    .container {
      display: flex;
      min-height: 100vh;
    }

    .main-content {
      flex: 1;
      padding: 2rem;
      margin-left: 250px;
    }

    .header {
      background: white;
      border-radius: 16px;
      padding: 2rem;
      margin-bottom: 2rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 1.5rem;
      margin-bottom: 2rem;
    }

    .stat-card {
      background: white;
      border-radius: 16px;
      padding: 1.5rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      border-left: 4px solid var(--primary-color);
    }

    .stat-value {
      font-size: 2rem;
      font-weight: 700;
      color: var(--primary-color);
      margin-bottom: 0.5rem;
    }

    .stat-label {
      color: #6c757d;
      font-size: 0.9rem;
      font-weight: 500;
    }

    .filter-section {
      background: white;
      border-radius: 16px;
      padding: 1.5rem;
      margin-bottom: 2rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    .table-container {
      background: white;
      border-radius: 16px;
      overflow: hidden;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    .table {
      margin-bottom: 0;
    }

    .table thead th {
      background-color: #f8f9fa;
      border: none;
      font-weight: 600;
      color: #495057;
      padding: 1rem;
    }

    .table tbody td {
      padding: 1rem;
      border-color: #f1f3f4;
      vertical-align: middle;
    }

    .status-badge {
      padding: 0.5rem 1rem;
      border-radius: 50px;
      font-size: 0.8rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .status-pending {
      background-color: #fff3cd;
      color: #856404;
    }

    .status-individual {
      background-color: #d1ecf1;
      color: #0c5460;
    }

    .btn-action {
      padding: 0.5rem 1rem;
      border-radius: 8px;
      font-size: 0.85rem;
      font-weight: 500;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.2s ease;
    }

    .btn-view {
      background-color: var(--primary-color);
      color: white;
    }

    .btn-view:hover {
      background-color: #5a32a3;
      color: white;
      transform: translateY(-1px);
    }

    .btn-approve {
      background-color: var(--success-color);
      color: white;
    }

    .btn-approve:hover {
      background-color: #218838;
      color: white;
    }

    .btn-reject {
      background-color: var(--danger-color);
      color: white;
    }

    .btn-reject:hover {
      background-color: #c82333;
      color: white;
    }

    .bulk-actions {
      background: white;
      border-radius: 16px;
      padding: 1rem;
      margin-bottom: 1rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
      display: none;
    }

    .bulk-actions.show {
      display: block;
    }

    .pagination-container {
      background: white;
      border-radius: 16px;
      padding: 1.5rem;
      margin-top: 2rem;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    .page-btn {
      padding: 0.5rem 1rem;
      margin: 0 0.25rem;
      border-radius: 8px;
      text-decoration: none;
      color: #6c757d;
      border: 1px solid #dee2e6;
      transition: all 0.2s ease;
    }

    .page-btn:hover, .page-btn.active {
      background-color: var(--primary-color);
      color: white;
      border-color: var(--primary-color);
    }

    .return-info {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }

    .return-count {
      font-size: 0.85rem;
      color: #6c757d;
    }

    .return-type {
      font-size: 0.75rem;
      padding: 0.25rem 0.5rem;
      border-radius: 4px;
      background-color: #e9ecef;
      color: #495057;
      width: fit-content;
    }

    /* **ENHANCED REFUND BREAKDOWN STYLING** */
    .refund-breakdown {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
    }

    .refund-amount {
      font-size: 1rem;
      font-weight: 600;
      color: #28a745;
    }

    .refund-details {
      font-size: 0.75rem;
      line-height: 1.2;
    }

    .refund-details small {
      display: block;
    }

    .refund-tag {
      display: inline-block;
      padding: 0.125rem 0.375rem;
      border-radius: 3px;
      font-size: 0.7rem;
      font-weight: 500;
      margin-right: 0.25rem;
      margin-bottom: 0.125rem;
    }

    .refund-tag.base {
      background-color: #e3f2fd;
      color: #1976d2;
    }

    .refund-tag.tax {
      background-color: #f3e5f5;
      color: #7b1fa2;
    }

    .refund-tag.total {
      background-color: #e8f5e8;
      color: #2e7d32;
      font-weight: 600;
    }

    .modern-return-cards {
      display: flex;
      flex-direction: column;
      gap: 1.2rem;
      background: none;
      box-shadow: none;
    }
    .return-card {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 12px rgba(0,0,0,0.06);
      padding: 1.2rem 1.5rem;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      border: 1px solid #ececec;
      min-height: 70px;
      gap: 1.2rem;
    }
    .return-card .order-id {
      font-weight: 700;
      color: #7b1fa2;
      font-size: 1.08rem;
      margin-right: 1.2rem;
    }
    .return-card .customer-info {
      font-size: 1rem;
      color: #222;
      margin-right: 1.2rem;
    }
    .return-card .customer-email {
      color: #888;
      font-size: 0.97rem;
    }
    .return-card .return-count {
      color: #1976d2;
      font-weight: 500;
      margin-right: 1.2rem;
    }
    .return-card .return-type {
      color: #495057;
      background: #f3f4f6;
      border-radius: 5px;
      padding: 0.12rem 0.7rem;
      font-size: 0.95rem;
      margin-right: 1.2rem;
    }
    .return-card .total-amount {
      color: #2e7d32;
      font-weight: 600;
      font-size: 1.01rem;
      margin-right: 1.2rem;
    }
    .return-card .refund-amount {
      color: #1976d2;
      font-weight: 500;
      font-size: 1.01rem;
      margin-right: 1.2rem;
    }
    .return-card .btn-action,
    .bulk-action-bar .bulk-btn {
      background: #1976d2;
      color: #fff;
      border: none;
      border-radius: 6px;
      padding: 0.55rem 2.2rem;
      font-size: 1rem;
      font-weight: 600;
      box-shadow: 0 2px 8px rgba(25, 118, 210, 0.07);
      cursor: pointer;
      transition: background 0.18s, box-shadow 0.18s, transform 0.13s;
      outline: none;
      letter-spacing: 0.2px;
      margin-left: 0.5rem;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      min-width: 150px;
      justify-content: center;
    }
    .return-card .btn-action.view {
      background: #fff;
      color: #1976d2;
      border: 1.5px solid #1976d2;
      box-shadow: none;
    }
    .return-card .btn-action.view:hover {
      background: #1976d2;
      color: #fff;
    }
    .return-card .btn-action.approve,
    .bulk-action-bar .bulk-btn.approve {
      background: #2e7d32;
      color: #fff;
    }
    .return-card .btn-action.approve:hover,
    .bulk-action-bar .bulk-btn.approve:hover {
      background: #1b5e20;
    }
    .return-card .btn-action.reject,
    .bulk-action-bar .bulk-btn.reject {
      background: #d32f2f;
      color: #fff;
    }
    .return-card .btn-action.reject:hover,
    .bulk-action-bar .bulk-btn.reject:hover {
      background: #b71c1c;
    }
    .bulk-action-bar {
      position: sticky;
      top: 0;
      left: 0;
      width: 100%;
      background: #fff;
      box-shadow: 0 2px 12px rgba(25, 118, 210, 0.07);
      padding: 1rem 2rem;
      display: flex;
      align-items: center;
      gap: 1.2rem;
      z-index: 100;
      border-radius: 0 0 10px 10px;
      margin-bottom: 1.2rem;
      display: none;
    }
    .bulk-action-bar.show {
      display: flex;
    }
    .order-checkbox {
      width: 18px;
      height: 18px;
      accent-color: #7b1fa2;
      margin-left: 0.5rem;
    }
    .no-returns {
      text-align: center;
      padding: 3rem 0;
      color: #6c757d;
      font-size: 1.1rem;
    }
  </style>
</head>
<body>
  <!-- Sidebar -->
  <%- include('../partials/admin/sidebar') %>

  <!-- Main Content -->
  <div class="main-content">
    <!-- Header -->
    <div class="header">
      <div>
        <h1 style="font-size: 42px; font-weight: 700; color: #1f2937; margin-bottom: 8px; line-height: 1.2;">
          <%= title %>
        </h1>
        <p style="font-size: 20px; color: #6b7280; font-weight: 400; margin-top: 0;">
          Manage customer return requests efficiently
        </p>
      </div>
      <div class="d-flex gap-2">
        <button class="btn btn-outline-primary" onclick="refreshData()">
          <i class="ri-refresh-line"></i> Refresh
        </button>
        <a href="/admin/getOrders" class="btn btn-outline-secondary">
          <i class="ri-arrow-left-line"></i> Back to Orders
        </a>
      </div>
    </div>

    <!-- Error Message -->
    <% if (typeof errorMessage !== 'undefined' && errorMessage) { %>
      <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <i class="ri-information-line"></i>
        <%= errorMessage %>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    <% } %>

    <!-- Stats -->
    <div class="stats-grid">
      <div class="stat-card">
        <div class="stat-value"><%= totalReturnRequests %></div>
        <div class="stat-label">Total Return Requests</div>
      </div>
      <div class="stat-card">
        <div class="stat-value">
          <%= orders.filter(o => o.hasIndividualReturns).length %>
        </div>
        <div class="stat-label">Individual Item Returns</div>
      </div>
      <div class="stat-card">
        <div class="stat-value">
          <%= orders.filter(o => o.hasFullOrderReturn).length %>
        </div>
        <div class="stat-label">Full Order Returns</div>
      </div>
    </div>

    <!-- Filters -->
    <div class="filter-section">
      <form method="GET" class="row g-3">
        <div class="col-md-4">
          <label class="form-label">Return Type</label>
          <select name="status" class="form-select">
            <option value="">All Returns</option>
            <option value="pending" <%= filters.status === 'pending' ? 'selected' : '' %>>Full Order Returns</option>
            <option value="individual" <%= filters.status === 'individual' ? 'selected' : '' %>>Individual Item Returns</option>
          </select>
        </div>
        <div class="col-md-4 d-flex align-items-end">
          <button type="submit" class="btn btn-primary me-2">
            <i class="ri-search-line"></i> Filter
          </button>
          <a href="/admin/return-management" class="btn btn-outline-secondary">
            <i class="ri-refresh-line"></i> Clear
          </a>
        </div>
      </form>
    </div>

    <!-- Bulk Actions -->
    <div class="bulk-actions" id="bulkActions">
      <div class="d-flex justify-content-between align-items-center">
        <span id="selectedCount">0 orders selected</span>
        <div class="d-flex gap-2">
          <button class="btn btn-success btn-sm" onclick="bulkApprove()">
            <i class="ri-check-line"></i> Approve Selected
          </button>
          <button class="btn btn-danger btn-sm" onclick="bulkReject()">
            <i class="ri-close-line"></i> Reject Selected
          </button>
          <button class="btn btn-outline-secondary btn-sm" onclick="clearSelection()">
            Clear Selection
          </button>
        </div>
      </div>
    </div>

    <!-- Orders Table -->
    <div class="table-container modern-return-cards">
      <div id="bulkActionBar" class="bulk-action-bar">
        <span id="selectedCountText">0 selected</span>
        <button class="bulk-btn approve" onclick="bulkApprove()"><i class="fas fa-check"></i> Approve Selected</button>
        <button class="bulk-btn reject" onclick="bulkReject()"><i class="fas fa-times"></i> Reject Selected</button>
      </div>
      <% if (orders && orders.length > 0) { %>
        <% orders.forEach(order => { %>
          <div class="return-card">
            <span class="order-id">#<%= order.orderNumber %></span>
            <span class="customer-info">
              <%= order.customerName %>
              <span class="customer-email">&lt;<%= order.customerEmail %>&gt;</span>
            </span>
            <span class="return-count"><%= order.returnRequestCount %> item(s)</span>
            <span class="return-type"><%= order.hasFullOrderReturn ? 'Full Order' : 'Individual Items' %></span>
            <span class="total-amount"><%= order.formattedTotal %></span>
            <span class="refund-amount">Refund: ₹<%= order.estimatedRefund ? order.estimatedRefund.total.toFixed(2) : '...' %></span>
            <button class="btn-action view" onclick="window.location='/admin/return-management/<%= order._id %>'">
              <i class="fas fa-eye"></i> View Details
            </button>
            <button class="btn-action approve" onclick="approveReturn('<%= order._id %>')">
              <i class="fas fa-check"></i> Approve
            </button>
            <button class="btn-action reject" onclick="rejectReturn('<%= order._id %>')">
              <i class="fas fa-times"></i> Reject
            </button>
            <input type="checkbox" class="order-checkbox" value="<%= order._id %>" onchange="updateSelection()" title="Select for bulk action">
          </div>
        <% }) %>
      <% } else { %>
        <div class="no-returns">
          <i class="ri-inbox-line" style="font-size: 3rem; color: #dee2e6;"></i>
          <div class="mt-2">No return requests found</div>
        </div>
      <% } %>
    </div>

    <!-- Pagination -->
    <% if (pagination.totalPages > 1) { %>
      <div class="pagination-container">
        <div class="d-flex justify-content-center align-items-center">
          <% if (pagination.hasPrev) { %>
            <a href="?page=<%= pagination.prevPage %>&status=<%= filters.status %>" class="page-btn">
              <i class="ri-arrow-left-line"></i> Previous
            </a>
          <% } %>

          <% pagination.pages.forEach(pageNum => { %>
            <a href="?page=<%= pageNum %>&status=<%= filters.status %>"
               class="page-btn <%= pagination.currentPage === pageNum ? 'active' : '' %>">
              <%= pageNum %>
            </a>
          <% }) %>

          <% if (pagination.hasNext) { %>
            <a href="?page=<%= pagination.nextPage %>&status=<%= filters.status %>" class="page-btn">
              Next <i class="ri-arrow-right-line"></i>
            </a>
          <% } %>
        </div>
      </div>
    <% } %>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    let selectedOrders = [];

    function toggleSelectAll() {
      const selectAll = document.getElementById('selectAll');
      const checkboxes = document.querySelectorAll('.order-checkbox');

      checkboxes.forEach(checkbox => {
        checkbox.checked = selectAll.checked;
      });

      updateSelection();
    }

    function updateSelection() {
      const checkboxes = document.querySelectorAll('.order-checkbox:checked');
      selectedOrders = Array.from(checkboxes).map(cb => cb.value);

      const bulkActions = document.getElementById('bulkActions');
      const selectedCount = document.getElementById('selectedCount');

      if (selectedOrders.length > 0) {
        bulkActions.classList.add('show');
        selectedCount.textContent = `${selectedOrders.length} order(s) selected`;
      } else {
        bulkActions.classList.remove('show');
      }

      // Update select all checkbox
      const allCheckboxes = document.querySelectorAll('.order-checkbox');
      const selectAll = document.getElementById('selectAll');
      selectAll.checked = selectedOrders.length === allCheckboxes.length;
      selectAll.indeterminate = selectedOrders.length > 0 && selectedOrders.length < allCheckboxes.length;
    }

    function clearSelection() {
      document.querySelectorAll('.order-checkbox').forEach(cb => cb.checked = false);
      document.getElementById('selectAll').checked = false;
      updateSelection();
    }

    function bulkApprove() {
      if (selectedOrders.length === 0) return;

      Swal.fire({
        title: 'Approve Returns',
        text: `Are you sure you want to approve ${selectedOrders.length} return request(s)?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, approve them!'
      }).then((result) => {
        if (result.isConfirmed) {
          processBulkAction('approve');
        }
      });
    }

    function bulkReject() {
      if (selectedOrders.length === 0) return;

      Swal.fire({
        title: 'Reject Returns',
        text: `Are you sure you want to reject ${selectedOrders.length} return request(s)?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: 'Yes, reject them!'
      }).then((result) => {
        if (result.isConfirmed) {
          processBulkAction('reject');
        }
      });
    }

    function processBulkAction(action) {
      fetch('/admin/return-management/bulk-process', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          orderIds: selectedOrders,
          action: action
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            title: 'Success!',
            text: data.message,
            icon: 'success',
            confirmButtonColor: '#6f42c1'
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error!',
            text: data.message,
            icon: 'error',
            confirmButtonColor: '#6f42c1'
          });
        }
      })
      .catch(error => {
        Swal.fire({
          title: 'Error!',
          text: 'An error occurred while processing the request',
          icon: 'error',
          confirmButtonColor: '#6f42c1'
        });
      });
    }

    function refreshData() {
      window.location.reload();
    }

    function updateSelection() {
      const checkboxes = document.querySelectorAll('.order-checkbox');
      const selected = Array.from(checkboxes).filter(cb => cb.checked);
      const bar = document.getElementById('bulkActionBar');
      const countText = document.getElementById('selectedCountText');
      if (selected.length > 0) {
        bar.classList.add('show');
        countText.textContent = `${selected.length} selected`;
      } else {
        bar.classList.remove('show');
        countText.textContent = '0 selected';
      }
    }
    function bulkApprove() {
      const selected = Array.from(document.querySelectorAll('.order-checkbox')).filter(cb => cb.checked).map(cb => cb.value);
      if (selected.length === 0) return;
      // TODO: Implement bulk approve logic (AJAX or form submit)
      alert('Bulk approve: ' + selected.join(', '));
    }
    function bulkReject() {
      const selected = Array.from(document.querySelectorAll('.order-checkbox')).filter(cb => cb.checked).map(cb => cb.value);
      if (selected.length === 0) return;
      // TODO: Implement bulk reject logic (AJAX or form submit)
      alert('Bulk reject: ' + selected.join(', '));
    }
    function approveReturn(orderId) {
      // TODO: Implement single approve logic (AJAX or form submit)
      alert('Approve: ' + orderId);
    }
    function rejectReturn(orderId) {
      // TODO: Implement single reject logic (AJAX or form submit)
      alert('Reject: ' + orderId);
    }
  </script>
</body>
</html>
